<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" url="" pos:tabs="8">

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/controller.cpp" pos:tabs="8" hash="1bf0559a936aaddc47c5060fe283ea437886f85f"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file controller.cpp
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:include pos:start="12:1" pos:end="12:23">#<cpp:directive pos:start="12:2" pos:end="12:8">include</cpp:directive> <cpp:file pos:start="12:10" pos:end="12:23">"controller.h"</cpp:file></cpp:include>

<comment type="line" format="doxygen" pos:start="14:1" pos:end="14:41">/////////////////////////////////////////</comment>
<comment type="line" pos:start="15:1" pos:end="15:10">// HELPERS</comment>
<comment type="line" format="doxygen" pos:start="16:1" pos:end="16:41">/////////////////////////////////////////</comment>

<function type="operator" pos:start="18:1" pos:end="18:108"><type pos:start="18:1" pos:end="18:13"><name pos:start="18:1" pos:end="18:12"><name pos:start="18:1" pos:end="18:3">std</name><operator pos:start="18:4" pos:end="18:5">::</operator><name pos:start="18:6" pos:end="18:12">ostream</name></name><modifier pos:start="18:13" pos:end="18:13">&amp;</modifier></type> <name pos:start="18:15" pos:end="18:24">operator<name pos:start="18:23" pos:end="18:24">&lt;&lt;</name></name><parameter_list pos:start="18:25" pos:end="18:61">(<parameter pos:start="18:26" pos:end="18:42"><decl pos:start="18:26" pos:end="18:42"><type pos:start="18:26" pos:end="18:42"><name pos:start="18:26" pos:end="18:37"><name pos:start="18:26" pos:end="18:28">std</name><operator pos:start="18:29" pos:end="18:30">::</operator><name pos:start="18:31" pos:end="18:37">ostream</name></name><modifier pos:start="18:38" pos:end="18:38">&amp;</modifier></type> <name pos:start="18:40" pos:end="18:42">out</name></decl></parameter>, <parameter pos:start="18:45" pos:end="18:60"><decl pos:start="18:45" pos:end="18:60"><type pos:start="18:45" pos:end="18:60"><specifier pos:start="18:45" pos:end="18:49">const</specifier> <name pos:start="18:51" pos:end="18:57">QString</name><modifier pos:start="18:58" pos:end="18:58">&amp;</modifier></type> <name pos:start="18:60" pos:end="18:60">s</name></decl></parameter>)</parameter_list> <block pos:start="18:63" pos:end="18:108">{<block_content pos:start="18:65" pos:end="18:106"> <expr_stmt pos:start="18:65" pos:end="18:94"><expr pos:start="18:65" pos:end="18:93"><name pos:start="18:65" pos:end="18:67">out</name> <operator pos:start="18:69" pos:end="18:70">&lt;&lt;</operator> <call pos:start="18:72" pos:end="18:81"><name pos:start="18:72" pos:end="18:79"><name pos:start="18:72" pos:end="18:72">s</name><operator pos:start="18:73" pos:end="18:73">.</operator><name pos:start="18:74" pos:end="18:79">toUtf8</name></name><argument_list pos:start="18:80" pos:end="18:81">()</argument_list></call><operator pos:start="18:82" pos:end="18:82">.</operator><call pos:start="18:83" pos:end="18:93"><name pos:start="18:83" pos:end="18:91">constData</name><argument_list pos:start="18:92" pos:end="18:93">()</argument_list></call></expr>;</expr_stmt> <return pos:start="18:96" pos:end="18:106">return <expr pos:start="18:103" pos:end="18:105"><name pos:start="18:103" pos:end="18:105">out</name></expr>;</return> </block_content>}</block></function>

<function pos:start="20:1" pos:end="26:1"><type pos:start="20:1" pos:end="20:4"><name pos:start="20:1" pos:end="20:4">void</name></type> <name pos:start="20:6" pos:end="20:21">changeFilePathOS</name><parameter_list pos:start="20:22" pos:end="20:36">(<parameter pos:start="20:23" pos:end="20:35"><decl pos:start="20:23" pos:end="20:35"><type pos:start="20:23" pos:end="20:30"><name pos:start="20:23" pos:end="20:29">QString</name><modifier pos:start="20:30" pos:end="20:30">&amp;</modifier></type> <name pos:start="20:32" pos:end="20:35">path</name></decl></parameter>)</parameter_list> <block pos:start="20:38" pos:end="26:1">{<block_content pos:start="22:9" pos:end="26:0">
    <cpp:ifdef pos:start="21:5" pos:end="21:19">#<cpp:directive pos:start="21:6" pos:end="21:10">ifdef</cpp:directive> <name pos:start="21:12" pos:end="21:19">Q_OS_WIN</name></cpp:ifdef>
        <expr_stmt pos:start="22:9" pos:end="24:0"><expr pos:start="22:9" pos:end="22:31"><call pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:19"><name pos:start="22:9" pos:end="22:12">path</name><operator pos:start="22:13" pos:end="22:13">.</operator><name pos:start="22:14" pos:end="22:19">remove</name></name><argument_list pos:start="22:20" pos:end="22:31">(<argument pos:start="22:21" pos:end="22:30"><expr pos:start="22:21" pos:end="22:30"><literal type="string" pos:start="22:21" pos:end="22:30">"file:///"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <cpp:else pos:start="23:5" pos:end="23:9">#<cpp:directive pos:start="23:6" pos:end="23:9">else</cpp:directive></cpp:else>
        <expr_stmt pos:start="24:9" pos:end="26:0"><expr pos:start="24:9" pos:end="24:30"><call pos:start="24:9" pos:end="24:30"><name pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:12">path</name><operator pos:start="24:13" pos:end="24:13">.</operator><name pos:start="24:14" pos:end="24:19">remove</name></name><argument_list pos:start="24:20" pos:end="24:30">(<argument pos:start="24:21" pos:end="24:29"><expr pos:start="24:21" pos:end="24:29"><literal type="string" pos:start="24:21" pos:end="24:29">"file://"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <cpp:endif pos:start="25:5" pos:end="25:10">#<cpp:directive pos:start="25:6" pos:end="25:10">endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function pos:start="28:1" pos:end="79:1"><type pos:start="28:1" pos:end="28:4"><name pos:start="28:1" pos:end="28:4">void</name></type> <name pos:start="28:6" pos:end="28:31">findAllGazeLeadingElements</name><parameter_list pos:start="28:32" pos:end="28:127">(<parameter pos:start="28:33" pos:end="28:58"><decl pos:start="28:33" pos:end="28:58"><type pos:start="28:33" pos:end="28:58"><name pos:start="28:33" pos:end="28:52"><name pos:start="28:33" pos:end="28:39">QVector</name><argument_list type="generic" pos:start="28:40" pos:end="28:52">&lt;<argument pos:start="28:41" pos:end="28:51"><expr pos:start="28:41" pos:end="28:51"><name pos:start="28:41" pos:end="28:51">QDomElement</name></expr></argument>&gt;</argument_list></name><modifier pos:start="28:53" pos:end="28:53">&amp;</modifier></type> <name pos:start="28:55" pos:end="28:58">list</name></decl></parameter>, <parameter pos:start="28:61" pos:end="28:73"><decl pos:start="28:61" pos:end="28:73"><type pos:start="28:61" pos:end="28:73"><name pos:start="28:61" pos:end="28:68">QDomNode</name></type> <name pos:start="28:70" pos:end="28:73">crnt</name></decl></parameter>, <parameter pos:start="28:76" pos:end="28:94"><decl pos:start="28:76" pos:end="28:94"><type pos:start="28:76" pos:end="28:94"><specifier pos:start="28:76" pos:end="28:80">const</specifier> <name pos:start="28:82" pos:end="28:84">int</name><modifier pos:start="28:85" pos:end="28:85">&amp;</modifier></type> <name pos:start="28:87" pos:end="28:94">res_line</name></decl></parameter>, <parameter pos:start="28:97" pos:end="28:114"><decl pos:start="28:97" pos:end="28:114"><type pos:start="28:97" pos:end="28:114"><specifier pos:start="28:97" pos:end="28:101">const</specifier> <name pos:start="28:103" pos:end="28:105">int</name><modifier pos:start="28:106" pos:end="28:106">&amp;</modifier></type> <name pos:start="28:108" pos:end="28:114">res_col</name></decl></parameter>, <parameter pos:start="28:117" pos:end="28:126"><decl pos:start="28:117" pos:end="28:126"><type pos:start="28:117" pos:end="28:126"><name pos:start="28:117" pos:end="28:120">bool</name><modifier pos:start="28:121" pos:end="28:121">&amp;</modifier></type> <name pos:start="28:123" pos:end="28:126">cont</name></decl></parameter>)</parameter_list> <block pos:start="28:129" pos:end="79:1">{<block_content pos:start="29:5" pos:end="78:5">
    <if_stmt pos:start="29:5" pos:end="29:42"><if pos:start="29:5" pos:end="29:42">if<condition pos:start="29:7" pos:end="29:30">(<expr pos:start="29:8" pos:end="29:29"><call pos:start="29:8" pos:end="29:20"><name pos:start="29:8" pos:end="29:18"><name pos:start="29:8" pos:end="29:11">crnt</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:18">isNull</name></name><argument_list pos:start="29:19" pos:end="29:20">()</argument_list></call> <operator pos:start="29:22" pos:end="29:23">||</operator> <operator pos:start="29:25" pos:end="29:25">!</operator><name pos:start="29:26" pos:end="29:29">cont</name></expr>)</condition> <block pos:start="29:32" pos:end="29:42">{<block_content pos:start="29:34" pos:end="29:40"> <return pos:start="29:34" pos:end="29:40">return;</return> </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="30:5" pos:end="30:40"><decl pos:start="30:5" pos:end="30:39"><type pos:start="30:5" pos:end="30:15"><name pos:start="30:5" pos:end="30:15">QDomElement</name></type> <name pos:start="30:17" pos:end="30:20">elem</name> <init pos:start="30:22" pos:end="30:39">= <expr pos:start="30:24" pos:end="30:39"><call pos:start="30:24" pos:end="30:39"><name pos:start="30:24" pos:end="30:37"><name pos:start="30:24" pos:end="30:27">crnt</name><operator pos:start="30:28" pos:end="30:28">.</operator><name pos:start="30:29" pos:end="30:37">toElement</name></name><argument_list pos:start="30:38" pos:end="30:39">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="31:5" pos:end="31:33"><if pos:start="31:5" pos:end="31:33">if<condition pos:start="31:7" pos:end="31:21">(<expr pos:start="31:8" pos:end="31:20"><call pos:start="31:8" pos:end="31:20"><name pos:start="31:8" pos:end="31:18"><name pos:start="31:8" pos:end="31:11">elem</name><operator pos:start="31:12" pos:end="31:12">.</operator><name pos:start="31:13" pos:end="31:18">isNull</name></name><argument_list pos:start="31:19" pos:end="31:20">()</argument_list></call></expr>)</condition> <block pos:start="31:23" pos:end="31:33">{<block_content pos:start="31:25" pos:end="31:31"> <return pos:start="31:25" pos:end="31:31">return;</return> </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="32:5" pos:end="35:29"><decl pos:start="32:5" pos:end="32:31"><type pos:start="32:5" pos:end="32:7"><name pos:start="32:5" pos:end="32:7">int</name></type> <name pos:start="32:9" pos:end="32:26">element_start_line</name> <init pos:start="32:28" pos:end="32:31">= <expr pos:start="32:30" pos:end="32:31"><operator pos:start="32:30" pos:end="32:30">-</operator><literal type="number" pos:start="32:31" pos:end="32:31">1</literal></expr></init></decl>,
        <decl pos:start="33:9" pos:end="33:30"><type ref="prev" pos:start="32:5" pos:end="32:7"/><name pos:start="33:9" pos:end="33:25">element_start_col</name> <init pos:start="33:27" pos:end="33:30">= <expr pos:start="33:29" pos:end="33:30"><operator pos:start="33:29" pos:end="33:29">-</operator><literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr></init></decl>,
        <decl pos:start="34:9" pos:end="34:29"><type ref="prev" pos:start="32:5" pos:end="32:7"/><name pos:start="34:9" pos:end="34:24">element_end_line</name> <init pos:start="34:26" pos:end="34:29">= <expr pos:start="34:28" pos:end="34:29"><operator pos:start="34:28" pos:end="34:28">-</operator><literal type="number" pos:start="34:29" pos:end="34:29">1</literal></expr></init></decl>,
        <decl pos:start="35:9" pos:end="35:28"><type ref="prev" pos:start="32:5" pos:end="32:7"/><name pos:start="35:9" pos:end="35:23">element_end_col</name> <init pos:start="35:25" pos:end="35:28">= <expr pos:start="35:27" pos:end="35:28"><operator pos:start="35:27" pos:end="35:27">-</operator><literal type="number" pos:start="35:28" pos:end="35:28">1</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="36:5" pos:end="78:5"><if pos:start="36:5" pos:end="78:5">if<condition pos:start="36:7" pos:end="36:92">(<expr pos:start="36:8" pos:end="36:91"><operator pos:start="36:8" pos:end="36:8">!</operator><call pos:start="36:9" pos:end="36:35"><name pos:start="36:9" pos:end="36:26"><name pos:start="36:9" pos:end="36:12">elem</name><operator pos:start="36:13" pos:end="36:13">.</operator><name pos:start="36:14" pos:end="36:26">attributeNode</name></name><argument_list pos:start="36:27" pos:end="36:35">(<argument pos:start="36:28" pos:end="36:34"><expr pos:start="36:28" pos:end="36:34"><literal type="string" pos:start="36:28" pos:end="36:34">"start"</literal></expr></argument>)</argument_list></call><operator pos:start="36:36" pos:end="36:36">.</operator><call pos:start="36:37" pos:end="36:44"><name pos:start="36:37" pos:end="36:42">isNull</name><argument_list pos:start="36:43" pos:end="36:44">()</argument_list></call> <operator pos:start="36:46" pos:end="36:47">&amp;&amp;</operator> <operator pos:start="36:49" pos:end="36:49">!</operator><call pos:start="36:50" pos:end="36:74"><name pos:start="36:50" pos:end="36:67"><name pos:start="36:50" pos:end="36:53">elem</name><operator pos:start="36:54" pos:end="36:54">.</operator><name pos:start="36:55" pos:end="36:67">attributeNode</name></name><argument_list pos:start="36:68" pos:end="36:74">(<argument pos:start="36:69" pos:end="36:73"><expr pos:start="36:69" pos:end="36:73"><literal type="string" pos:start="36:69" pos:end="36:73">"end"</literal></expr></argument>)</argument_list></call><operator pos:start="36:75" pos:end="36:75">.</operator><call pos:start="36:76" pos:end="36:83"><name pos:start="36:76" pos:end="36:81">isNull</name><argument_list pos:start="36:82" pos:end="36:83">()</argument_list></call> <operator pos:start="36:85" pos:end="36:86">&amp;&amp;</operator> <name pos:start="36:88" pos:end="36:91">cont</name></expr>)</condition> <block pos:start="36:94" pos:end="78:5">{<block_content pos:start="37:9" pos:end="77:9">
        <decl_stmt pos:start="37:9" pos:end="37:60"><decl pos:start="37:9" pos:end="37:59"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">QString</name></type> <name pos:start="37:17" pos:end="37:21">start</name> <init pos:start="37:23" pos:end="37:59">= <expr pos:start="37:25" pos:end="37:59"><call pos:start="37:25" pos:end="37:51"><name pos:start="37:25" pos:end="37:42"><name pos:start="37:25" pos:end="37:28">elem</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:42">attributeNode</name></name><argument_list pos:start="37:43" pos:end="37:51">(<argument pos:start="37:44" pos:end="37:50"><expr pos:start="37:44" pos:end="37:50"><literal type="string" pos:start="37:44" pos:end="37:50">"start"</literal></expr></argument>)</argument_list></call><operator pos:start="37:52" pos:end="37:52">.</operator><call pos:start="37:53" pos:end="37:59"><name pos:start="37:53" pos:end="37:57">value</name><argument_list pos:start="37:58" pos:end="37:59">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="38:9" pos:end="77:9"><if pos:start="38:9" pos:end="77:9">if<condition pos:start="38:11" pos:end="38:65">(<expr pos:start="38:12" pos:end="38:64"><call pos:start="38:12" pos:end="38:30"><name pos:start="38:12" pos:end="38:25"><name pos:start="38:12" pos:end="38:16">start</name><operator pos:start="38:17" pos:end="38:17">.</operator><name pos:start="38:18" pos:end="38:25">contains</name></name><argument_list pos:start="38:26" pos:end="38:30">(<argument pos:start="38:27" pos:end="38:29"><expr pos:start="38:27" pos:end="38:29"><literal type="string" pos:start="38:27" pos:end="38:29">":"</literal></expr></argument>)</argument_list></call> <operator pos:start="38:32" pos:end="38:33">&amp;&amp;</operator> <operator pos:start="38:35" pos:end="38:35">!</operator><call pos:start="38:36" pos:end="38:64"><name pos:start="38:36" pos:end="38:49"><name pos:start="38:36" pos:end="38:40">start</name><operator pos:start="38:41" pos:end="38:41">.</operator><name pos:start="38:42" pos:end="38:49">contains</name></name><argument_list pos:start="38:50" pos:end="38:64">(<argument pos:start="38:51" pos:end="38:63"><expr pos:start="38:51" pos:end="38:63"><literal type="string" pos:start="38:51" pos:end="38:63">"INVALID_POS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="38:67" pos:end="77:9">{<block_content pos:start="39:13" pos:end="76:13">
            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:30">element_start_line</name> <operator pos:start="39:32" pos:end="39:32">=</operator> <call pos:start="39:34" pos:end="39:49"><name pos:start="39:34" pos:end="39:44"><name pos:start="39:34" pos:end="39:38">start</name><operator pos:start="39:39" pos:end="39:39">.</operator><name pos:start="39:40" pos:end="39:44">split</name></name><argument_list pos:start="39:45" pos:end="39:49">(<argument pos:start="39:46" pos:end="39:48"><expr pos:start="39:46" pos:end="39:48"><literal type="string" pos:start="39:46" pos:end="39:48">":"</literal></expr></argument>)</argument_list></call><index pos:start="39:50" pos:end="39:52">[<expr pos:start="39:51" pos:end="39:51"><literal type="number" pos:start="39:51" pos:end="39:51">0</literal></expr>]</index><operator pos:start="39:53" pos:end="39:53">.</operator><call pos:start="39:54" pos:end="39:60"><name pos:start="39:54" pos:end="39:58">toInt</name><argument_list pos:start="39:59" pos:end="39:60">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="40:13" pos:end="40:60"><expr pos:start="40:13" pos:end="40:59"><name pos:start="40:13" pos:end="40:29">element_start_col</name> <operator pos:start="40:31" pos:end="40:31">=</operator> <call pos:start="40:33" pos:end="40:48"><name pos:start="40:33" pos:end="40:43"><name pos:start="40:33" pos:end="40:37">start</name><operator pos:start="40:38" pos:end="40:38">.</operator><name pos:start="40:39" pos:end="40:43">split</name></name><argument_list pos:start="40:44" pos:end="40:48">(<argument pos:start="40:45" pos:end="40:47"><expr pos:start="40:45" pos:end="40:47"><literal type="string" pos:start="40:45" pos:end="40:47">":"</literal></expr></argument>)</argument_list></call><index pos:start="40:49" pos:end="40:51">[<expr pos:start="40:50" pos:end="40:50"><literal type="number" pos:start="40:50" pos:end="40:50">1</literal></expr>]</index><operator pos:start="40:52" pos:end="40:52">.</operator><call pos:start="40:53" pos:end="40:59"><name pos:start="40:53" pos:end="40:57">toInt</name><argument_list pos:start="40:58" pos:end="40:59">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt pos:start="42:13" pos:end="42:60"><decl pos:start="42:13" pos:end="42:59"><type pos:start="42:13" pos:end="42:19"><name pos:start="42:13" pos:end="42:19">QString</name></type> <name pos:start="42:21" pos:end="42:23">end</name> <init pos:start="42:25" pos:end="42:59">= <expr pos:start="42:27" pos:end="42:59"><call pos:start="42:27" pos:end="42:51"><name pos:start="42:27" pos:end="42:44"><name pos:start="42:27" pos:end="42:30">elem</name><operator pos:start="42:31" pos:end="42:31">.</operator><name pos:start="42:32" pos:end="42:44">attributeNode</name></name><argument_list pos:start="42:45" pos:end="42:51">(<argument pos:start="42:46" pos:end="42:50"><expr pos:start="42:46" pos:end="42:50"><literal type="string" pos:start="42:46" pos:end="42:50">"end"</literal></expr></argument>)</argument_list></call><operator pos:start="42:52" pos:end="42:52">.</operator><call pos:start="42:53" pos:end="42:59"><name pos:start="42:53" pos:end="42:57">value</name><argument_list pos:start="42:58" pos:end="42:59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="43:13" pos:end="46:13"><if pos:start="43:13" pos:end="46:13">if<condition pos:start="43:15" pos:end="43:65">(<expr pos:start="43:16" pos:end="43:64"><call pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:18">end</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:27">contains</name></name><argument_list pos:start="43:28" pos:end="43:32">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><literal type="string" pos:start="43:29" pos:end="43:31">":"</literal></expr></argument>)</argument_list></call> <operator pos:start="43:34" pos:end="43:35">&amp;&amp;</operator> <operator pos:start="43:37" pos:end="43:37">!</operator><call pos:start="43:38" pos:end="43:64"><name pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:40">end</name><operator pos:start="43:41" pos:end="43:41">.</operator><name pos:start="43:42" pos:end="43:49">contains</name></name><argument_list pos:start="43:50" pos:end="43:64">(<argument pos:start="43:51" pos:end="43:63"><expr pos:start="43:51" pos:end="43:63"><literal type="string" pos:start="43:51" pos:end="43:63">"INVALID_POS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:67" pos:end="46:13">{<block_content pos:start="44:17" pos:end="45:60">
                <expr_stmt pos:start="44:17" pos:end="44:61"><expr pos:start="44:17" pos:end="44:60"><name pos:start="44:17" pos:end="44:32">element_end_line</name> <operator pos:start="44:34" pos:end="44:34">=</operator> <call pos:start="44:36" pos:end="44:49"><name pos:start="44:36" pos:end="44:44"><name pos:start="44:36" pos:end="44:38">end</name><operator pos:start="44:39" pos:end="44:39">.</operator><name pos:start="44:40" pos:end="44:44">split</name></name><argument_list pos:start="44:45" pos:end="44:49">(<argument pos:start="44:46" pos:end="44:48"><expr pos:start="44:46" pos:end="44:48"><literal type="string" pos:start="44:46" pos:end="44:48">":"</literal></expr></argument>)</argument_list></call><index pos:start="44:50" pos:end="44:52">[<expr pos:start="44:51" pos:end="44:51"><literal type="number" pos:start="44:51" pos:end="44:51">0</literal></expr>]</index><operator pos:start="44:53" pos:end="44:53">.</operator><call pos:start="44:54" pos:end="44:60"><name pos:start="44:54" pos:end="44:58">toInt</name><argument_list pos:start="44:59" pos:end="44:60">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:31">element_end_col</name> <operator pos:start="45:33" pos:end="45:33">=</operator> <call pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:43"><name pos:start="45:35" pos:end="45:37">end</name><operator pos:start="45:38" pos:end="45:38">.</operator><name pos:start="45:39" pos:end="45:43">split</name></name><argument_list pos:start="45:44" pos:end="45:48">(<argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><literal type="string" pos:start="45:45" pos:end="45:47">":"</literal></expr></argument>)</argument_list></call><index pos:start="45:49" pos:end="45:51">[<expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">1</literal></expr>]</index><operator pos:start="45:52" pos:end="45:52">.</operator><call pos:start="45:53" pos:end="45:59"><name pos:start="45:53" pos:end="45:57">toInt</name><argument_list pos:start="45:58" pos:end="45:59">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="48:13" pos:end="48:28">//Check for bugs</comment>
            <if_stmt pos:start="49:13" pos:end="51:13"><if pos:start="49:13" pos:end="51:13">if<condition pos:start="49:15" pos:end="49:103">(<expr pos:start="49:16" pos:end="49:102"><name pos:start="49:16" pos:end="49:31">element_end_line</name> <operator pos:start="49:33" pos:end="49:33">&lt;</operator> <name pos:start="49:35" pos:end="49:52">element_start_line</name> <operator pos:start="49:54" pos:end="49:55">||</operator> <name pos:start="49:57" pos:end="49:72">element_end_line</name> <operator pos:start="49:74" pos:end="49:74">&lt;</operator> <literal type="number" pos:start="49:76" pos:end="49:76">0</literal> <operator pos:start="49:78" pos:end="49:79">||</operator> <name pos:start="49:81" pos:end="49:98">element_start_line</name> <operator pos:start="49:100" pos:end="49:100">&lt;</operator> <literal type="number" pos:start="49:102" pos:end="49:102">0</literal></expr>)</condition> <block pos:start="49:105" pos:end="51:13">{<block_content pos:start="50:17" pos:end="50:23">
                <return pos:start="50:17" pos:end="50:23">return;</return>
            </block_content>}</block></if></if_stmt> <comment type="line" pos:start="51:15" pos:end="51:32">// Skip this token</comment>

            <comment type="line" pos:start="53:13" pos:end="53:53">// Check if additional tags can encompass</comment>
            <if_stmt pos:start="54:13" pos:end="57:13"><if pos:start="54:13" pos:end="57:13">if<condition pos:start="54:15" pos:end="54:112">(<expr pos:start="54:16" pos:end="54:111"><name pos:start="54:16" pos:end="54:33">element_start_line</name> <operator pos:start="54:35" pos:end="54:35">&gt;</operator> <name pos:start="54:37" pos:end="54:44">res_line</name> <operator pos:start="54:46" pos:end="54:47">||</operator> <operator pos:start="54:49" pos:end="54:49">(</operator><name pos:start="54:50" pos:end="54:67">element_start_line</name> <operator pos:start="54:69" pos:end="54:70">==</operator> <name pos:start="54:72" pos:end="54:79">res_line</name> <operator pos:start="54:81" pos:end="54:82">&amp;&amp;</operator> <name pos:start="54:84" pos:end="54:100">element_start_col</name> <operator pos:start="54:102" pos:end="54:102">&gt;</operator> <name pos:start="54:104" pos:end="54:110">res_col</name><operator pos:start="54:111" pos:end="54:111">)</operator></expr>)</condition> <block pos:start="54:114" pos:end="57:13">{<block_content pos:start="55:17" pos:end="56:23">
                <expr_stmt pos:start="55:17" pos:end="55:29"><expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:20">cont</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="boolean" pos:start="55:24" pos:end="55:28">false</literal></expr>;</expr_stmt> <comment type="line" pos:start="55:31" pos:end="55:63">// No more can be found, stop all</comment>
                <return pos:start="56:17" pos:end="56:23">return;</return>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:13"><if pos:start="59:13" pos:end="61:13">if<condition pos:start="59:15" pos:end="59:76">(<expr pos:start="59:16" pos:end="59:75"><name pos:start="59:16" pos:end="59:23">res_line</name> <operator pos:start="59:25" pos:end="59:25">&gt;</operator> <name pos:start="59:27" pos:end="59:44">element_start_line</name> <operator pos:start="59:46" pos:end="59:47">&amp;&amp;</operator> <name pos:start="59:49" pos:end="59:56">res_line</name> <operator pos:start="59:58" pos:end="59:58">&gt;</operator> <name pos:start="59:60" pos:end="59:75">element_end_line</name></expr>)</condition> <block pos:start="59:78" pos:end="61:13">{<block_content pos:start="60:17" pos:end="60:23">
                <return pos:start="60:17" pos:end="60:23">return;</return> <comment type="line" pos:start="60:25" pos:end="60:40">// Skip this tag</comment>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="63:13" pos:end="69:28"><if pos:start="63:13" pos:end="65:13">if<condition pos:start="63:15" pos:end="63:77">(<expr pos:start="63:16" pos:end="63:76"><name pos:start="63:16" pos:end="63:23">res_line</name> <operator pos:start="63:25" pos:end="63:26">&gt;=</operator> <name pos:start="63:28" pos:end="63:45">element_start_line</name> <operator pos:start="63:47" pos:end="63:48">&amp;&amp;</operator> <name pos:start="63:50" pos:end="63:57">res_line</name> <operator pos:start="63:59" pos:end="63:59">&lt;</operator> <name pos:start="63:61" pos:end="63:76">element_end_line</name></expr>)</condition> <block pos:start="63:79" pos:end="65:13">{<block_content pos:start="64:17" pos:end="64:37">
                <expr_stmt pos:start="64:17" pos:end="64:37"><expr pos:start="64:17" pos:end="64:36"><call pos:start="64:17" pos:end="64:36"><name pos:start="64:17" pos:end="64:30"><name pos:start="64:17" pos:end="64:20">list</name><operator pos:start="64:21" pos:end="64:21">.</operator><name pos:start="64:22" pos:end="64:30">push_back</name></name><argument_list pos:start="64:31" pos:end="64:36">(<argument pos:start="64:32" pos:end="64:35"><expr pos:start="64:32" pos:end="64:35"><name pos:start="64:32" pos:end="64:35">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="66:13" pos:end="68:13">else if<condition pos:start="66:20" pos:end="66:113">(<expr pos:start="66:21" pos:end="66:112"><name pos:start="66:21" pos:end="66:28">res_line</name> <operator pos:start="66:30" pos:end="66:31">&gt;=</operator> <name pos:start="66:33" pos:end="66:50">element_start_line</name> <operator pos:start="66:52" pos:end="66:53">&amp;&amp;</operator> <name pos:start="66:55" pos:end="66:62">res_line</name> <operator pos:start="66:64" pos:end="66:65">==</operator> <name pos:start="66:67" pos:end="66:82">element_end_line</name> <operator pos:start="66:84" pos:end="66:85">&amp;&amp;</operator> <name pos:start="66:87" pos:end="66:93">res_col</name> <operator pos:start="66:95" pos:end="66:96">&lt;=</operator> <name pos:start="66:98" pos:end="66:112">element_end_col</name></expr>)</condition> <block pos:start="66:115" pos:end="68:13">{<block_content pos:start="67:17" pos:end="67:37">
                <expr_stmt pos:start="67:17" pos:end="67:37"><expr pos:start="67:17" pos:end="67:36"><call pos:start="67:17" pos:end="67:36"><name pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:20">list</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:30">push_back</name></name><argument_list pos:start="67:31" pos:end="67:36">(<argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="69:13" pos:end="69:28">else <block pos:start="69:18" pos:end="69:28">{<block_content pos:start="69:20" pos:end="69:26"> <return pos:start="69:20" pos:end="69:26">return;</return> </block_content>}</block></else></if_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:43"><decl pos:start="71:13" pos:end="71:42"><type pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:20">QDomNode</name></type> <name pos:start="71:22" pos:end="71:22">n</name> <init pos:start="71:24" pos:end="71:42">= <expr pos:start="71:26" pos:end="71:42"><call pos:start="71:26" pos:end="71:42"><name pos:start="71:26" pos:end="71:40"><name pos:start="71:26" pos:end="71:29">elem</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:40">firstChild</name></name><argument_list pos:start="71:41" pos:end="71:42">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:start="72:13" pos:end="76:13">while<condition pos:start="72:18" pos:end="72:30">(<expr pos:start="72:19" pos:end="72:29"><operator pos:start="72:19" pos:end="72:19">!</operator><call pos:start="72:20" pos:end="72:29"><name pos:start="72:20" pos:end="72:27"><name pos:start="72:20" pos:end="72:20">n</name><operator pos:start="72:21" pos:end="72:21">.</operator><name pos:start="72:22" pos:end="72:27">isNull</name></name><argument_list pos:start="72:28" pos:end="72:29">()</argument_list></call></expr>)</condition> <block pos:start="72:32" pos:end="76:13">{<block_content pos:start="73:17" pos:end="75:36">
                <expr_stmt pos:start="73:17" pos:end="73:73"><expr pos:start="73:17" pos:end="73:72"><call pos:start="73:17" pos:end="73:72"><name pos:start="73:17" pos:end="73:42">findAllGazeLeadingElements</name><argument_list pos:start="73:43" pos:end="73:72">(<argument pos:start="73:44" pos:end="73:47"><expr pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:47">list</name></expr></argument>,<argument pos:start="73:49" pos:end="73:49"><expr pos:start="73:49" pos:end="73:49"><name pos:start="73:49" pos:end="73:49">n</name></expr></argument>,<argument pos:start="73:51" pos:end="73:58"><expr pos:start="73:51" pos:end="73:58"><name pos:start="73:51" pos:end="73:58">res_line</name></expr></argument>,<argument pos:start="73:60" pos:end="73:66"><expr pos:start="73:60" pos:end="73:66"><name pos:start="73:60" pos:end="73:66">res_col</name></expr></argument>,<argument pos:start="73:68" pos:end="73:71"><expr pos:start="73:68" pos:end="73:71"><name pos:start="73:68" pos:end="73:71">cont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="74:17" pos:end="74:37"><if pos:start="74:17" pos:end="74:37">if<condition pos:start="74:19" pos:end="74:25">(<expr pos:start="74:20" pos:end="74:24"><operator pos:start="74:20" pos:end="74:20">!</operator><name pos:start="74:21" pos:end="74:24">cont</name></expr>)</condition> <block pos:start="74:27" pos:end="74:37">{<block_content pos:start="74:29" pos:end="74:35"> <return pos:start="74:29" pos:end="74:35">return;</return> </block_content>}</block></if></if_stmt>
                <expr_stmt pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:17">n</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:35"><name pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:21">n</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:33">nextSibling</name></name><argument_list pos:start="75:34" pos:end="75:35">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></while>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function pos:start="81:1" pos:end="87:1"><type pos:start="81:1" pos:end="81:7"><name pos:start="81:1" pos:end="81:7">QString</name></type> <name pos:start="81:9" pos:end="81:28">getFilenameFromXpath</name><parameter_list pos:start="81:29" pos:end="81:43">(<parameter pos:start="81:30" pos:end="81:42"><decl pos:start="81:30" pos:end="81:42"><type pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:36">QString</name></type> <name pos:start="81:38" pos:end="81:42">xpath</name></decl></parameter>)</parameter_list> <block pos:start="81:45" pos:end="87:1">{<block_content pos:start="82:5" pos:end="86:20">
    <decl_stmt pos:start="82:5" pos:end="83:37"><decl pos:start="82:5" pos:end="82:34"><type pos:start="82:5" pos:end="82:7"><name pos:start="82:5" pos:end="82:7">int</name></type> <name pos:start="82:9" pos:end="82:13">start</name> <init pos:start="82:15" pos:end="82:34">= <expr pos:start="82:17" pos:end="82:34"><call pos:start="82:17" pos:end="82:34"><name pos:start="82:17" pos:end="82:29"><name pos:start="82:17" pos:end="82:21">xpath</name><operator pos:start="82:22" pos:end="82:22">.</operator><name pos:start="82:23" pos:end="82:29">indexOf</name></name><argument_list pos:start="82:30" pos:end="82:34">(<argument pos:start="82:31" pos:end="82:33"><expr pos:start="82:31" pos:end="82:33"><literal type="string" pos:start="82:31" pos:end="82:33">"'"</literal></expr></argument>)</argument_list></call></expr></init></decl>,
        <decl pos:start="83:9" pos:end="83:36"><type ref="prev" pos:start="82:5" pos:end="82:7"/><name pos:start="83:9" pos:end="83:11">end</name> <init pos:start="83:13" pos:end="83:36">= <expr pos:start="83:15" pos:end="83:36"><call pos:start="83:15" pos:end="83:36"><name pos:start="83:15" pos:end="83:31"><name pos:start="83:15" pos:end="83:19">xpath</name><operator pos:start="83:20" pos:end="83:20">.</operator><name pos:start="83:21" pos:end="83:31">lastIndexOf</name></name><argument_list pos:start="83:32" pos:end="83:36">(<argument pos:start="83:33" pos:end="83:35"><expr pos:start="83:33" pos:end="83:35"><literal type="string" pos:start="83:33" pos:end="83:35">"'"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="84:5" pos:end="84:52"><decl pos:start="84:5" pos:end="84:51"><type pos:start="84:5" pos:end="84:11"><name pos:start="84:5" pos:end="84:11">QString</name></type> <name pos:start="84:13" pos:end="84:20">filename</name> <init pos:start="84:22" pos:end="84:51">= <expr pos:start="84:24" pos:end="84:51"><call pos:start="84:24" pos:end="84:51"><name pos:start="84:24" pos:end="84:32"><name pos:start="84:24" pos:end="84:28">xpath</name><operator pos:start="84:29" pos:end="84:29">.</operator><name pos:start="84:30" pos:end="84:32">mid</name></name><argument_list pos:start="84:33" pos:end="84:51">(<argument pos:start="84:34" pos:end="84:38"><expr pos:start="84:34" pos:end="84:38"><name pos:start="84:34" pos:end="84:38">start</name></expr></argument>,<argument pos:start="84:40" pos:end="84:50"><expr pos:start="84:40" pos:end="84:50"><name pos:start="84:40" pos:end="84:42">end</name><operator pos:start="84:43" pos:end="84:43">-</operator><name pos:start="84:44" pos:end="84:48">start</name><operator pos:start="84:49" pos:end="84:49">+</operator><literal type="number" pos:start="84:50" pos:end="84:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="85:5" pos:end="85:75"><expr pos:start="85:5" pos:end="85:74"><name pos:start="85:5" pos:end="85:12">filename</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:74"><name pos:start="85:16" pos:end="85:27"><name pos:start="85:16" pos:end="85:23">filename</name><operator pos:start="85:24" pos:end="85:24">.</operator><name pos:start="85:25" pos:end="85:27">mid</name></name><argument_list pos:start="85:28" pos:end="85:74">(<argument pos:start="85:29" pos:end="85:73"><expr pos:start="85:29" pos:end="85:73"><call pos:start="85:29" pos:end="85:45"><name pos:start="85:29" pos:end="85:43"><name pos:start="85:29" pos:end="85:36">filename</name><operator pos:start="85:37" pos:end="85:37">.</operator><name pos:start="85:38" pos:end="85:43">length</name></name><argument_list pos:start="85:44" pos:end="85:45">()</argument_list></call> <operator pos:start="85:47" pos:end="85:47">-</operator> <call pos:start="85:49" pos:end="85:73"><name pos:start="85:49" pos:end="85:68"><name pos:start="85:49" pos:end="85:56">filename</name><operator pos:start="85:57" pos:end="85:57">.</operator><name pos:start="85:58" pos:end="85:68">lastIndexOf</name></name><argument_list pos:start="85:69" pos:end="85:73">(<argument pos:start="85:70" pos:end="85:72"><expr pos:start="85:70" pos:end="85:72"><literal type="string" pos:start="85:70" pos:end="85:72">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="86:5" pos:end="86:20">return <expr pos:start="86:12" pos:end="86:19"><name pos:start="86:12" pos:end="86:19">filename</name></expr>;</return>
</block_content>}</block></function>

<comment type="line" format="doxygen" pos:start="89:1" pos:end="89:41">/////////////////////////////////////////</comment>
<comment type="line" pos:start="90:1" pos:end="90:16">// CLASS METHODS</comment>
<comment type="line" format="doxygen" pos:start="91:1" pos:end="91:41">/////////////////////////////////////////</comment>

<constructor pos:start="93:1" pos:end="93:60"><name pos:start="93:1" pos:end="93:22"><name pos:start="93:1" pos:end="93:10">Controller</name><operator pos:start="93:11" pos:end="93:12">::</operator><name pos:start="93:13" pos:end="93:22">Controller</name></name><parameter_list pos:start="93:23" pos:end="93:39">(<parameter pos:start="93:24" pos:end="93:38"><decl pos:start="93:24" pos:end="93:38"><type pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:30">QObject</name><modifier pos:start="93:31" pos:end="93:31">*</modifier></type> <name pos:start="93:33" pos:end="93:38">parent</name></decl></parameter>)</parameter_list> <member_init_list pos:start="93:41" pos:end="93:57">: <call pos:start="93:43" pos:end="93:57"><name pos:start="93:43" pos:end="93:49">QObject</name><argument_list pos:start="93:50" pos:end="93:57">(<argument pos:start="93:51" pos:end="93:56"><expr pos:start="93:51" pos:end="93:56"><name pos:start="93:51" pos:end="93:56">parent</name></expr></argument>)</argument_list></call> </member_init_list><block pos:start="93:59" pos:end="93:60">{<block_content/>}</block></constructor>

<function pos:start="95:1" pos:end="113:1"><type pos:start="95:1" pos:end="95:4"><name pos:start="95:1" pos:end="95:4">void</name></type> <name pos:start="95:6" pos:end="95:33"><name pos:start="95:6" pos:end="95:15">Controller</name><operator pos:start="95:16" pos:end="95:17">::</operator><name pos:start="95:18" pos:end="95:33">saveDatabaseFile</name></name><parameter_list pos:start="95:34" pos:end="95:51">(<parameter pos:start="95:35" pos:end="95:50"><decl pos:start="95:35" pos:end="95:50"><type pos:start="95:35" pos:end="95:41"><name pos:start="95:35" pos:end="95:41">QString</name></type> <name pos:start="95:43" pos:end="95:50">file_loc</name></decl></parameter>)</parameter_list> <block pos:start="95:53" pos:end="113:1">{<block_content pos:start="96:5" pos:end="112:31">
    <expr_stmt pos:start="96:5" pos:end="96:20"><expr pos:start="96:5" pos:end="96:19"><call pos:start="96:5" pos:end="96:19"><name pos:start="96:5" pos:end="96:17">closeDatabase</name><argument_list pos:start="96:18" pos:end="96:19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="97:5" pos:end="97:31"><expr pos:start="97:5" pos:end="97:30"><call pos:start="97:5" pos:end="97:30"><name pos:start="97:5" pos:end="97:20">changeFilePathOS</name><argument_list pos:start="97:21" pos:end="97:30">(<argument pos:start="97:22" pos:end="97:29"><expr pos:start="97:22" pos:end="97:29"><name pos:start="97:22" pos:end="97:29">file_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="98:5" pos:end="98:23"><decl pos:start="98:5" pos:end="98:22"><type pos:start="98:5" pos:end="98:17"><name pos:start="98:5" pos:end="98:17"><name pos:start="98:5" pos:end="98:7">std</name><operator pos:start="98:8" pos:end="98:9">::</operator><name pos:start="98:10" pos:end="98:17">ofstream</name></name></type> <name pos:start="98:19" pos:end="98:22">file</name></decl>;</decl_stmt>
    <expr_stmt pos:start="99:5" pos:end="99:45"><expr pos:start="99:5" pos:end="99:44"><call pos:start="99:5" pos:end="99:44"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:8">file</name><operator pos:start="99:9" pos:end="99:9">.</operator><name pos:start="99:10" pos:end="99:13">open</name></name><argument_list pos:start="99:14" pos:end="99:44">(<argument pos:start="99:15" pos:end="99:43"><expr pos:start="99:15" pos:end="99:43"><call pos:start="99:15" pos:end="99:31"><name pos:start="99:15" pos:end="99:29"><name pos:start="99:15" pos:end="99:22">file_loc</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:29">toUtf8</name></name><argument_list pos:start="99:30" pos:end="99:31">()</argument_list></call><operator pos:start="99:32" pos:end="99:32">.</operator><call pos:start="99:33" pos:end="99:43"><name pos:start="99:33" pos:end="99:41">constData</name><argument_list pos:start="99:42" pos:end="99:43">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="100:5" pos:end="105:5"><if pos:start="100:5" pos:end="105:5">if<condition pos:start="100:7" pos:end="100:23">(<expr pos:start="100:8" pos:end="100:22"><operator pos:start="100:8" pos:end="100:8">!</operator><call pos:start="100:9" pos:end="100:22"><name pos:start="100:9" pos:end="100:20"><name pos:start="100:9" pos:end="100:12">file</name><operator pos:start="100:13" pos:end="100:13">.</operator><name pos:start="100:14" pos:end="100:20">is_open</name></name><argument_list pos:start="100:21" pos:end="100:22">()</argument_list></call></expr>)</condition> <block pos:start="100:25" pos:end="105:5">{<block_content pos:start="101:9" pos:end="104:15">
        <emit pos:start="101:9" pos:end="101:67">emit <expr pos:start="101:14" pos:end="101:66"><call pos:start="101:14" pos:end="101:66"><name pos:start="101:14" pos:end="101:27">outputToScreen</name><argument_list pos:start="101:28" pos:end="101:66">(<argument pos:start="101:29" pos:end="101:37"><expr pos:start="101:29" pos:end="101:37"><literal type="string" pos:start="101:29" pos:end="101:37">"#FF0000"</literal></expr></argument>,<argument pos:start="101:39" pos:end="101:65"><expr pos:start="101:39" pos:end="101:65"><literal type="string" pos:start="101:39" pos:end="101:65">"Failed to create database"</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <emit pos:start="102:9" pos:end="102:90">emit <expr pos:start="102:14" pos:end="102:89"><call pos:start="102:14" pos:end="102:89"><name pos:start="102:14" pos:end="102:20">warning</name><argument_list pos:start="102:21" pos:end="102:89">(<argument pos:start="102:22" pos:end="102:28"><expr pos:start="102:22" pos:end="102:28"><literal type="string" pos:start="102:22" pos:end="102:28">"ERROR"</literal></expr></argument>,<argument pos:start="102:30" pos:end="102:88"><expr pos:start="102:30" pos:end="102:88"><literal type="string" pos:start="102:30" pos:end="102:88">"A problem was encountered when trying to create the file."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <expr_stmt pos:start="103:9" pos:end="103:75"><expr pos:start="103:9" pos:end="103:74"><call pos:start="103:9" pos:end="103:74"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:11">log</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:22">writeLine</name></name><argument_list pos:start="103:23" pos:end="103:74">(<argument pos:start="103:24" pos:end="103:30"><expr pos:start="103:24" pos:end="103:30"><literal type="string" pos:start="103:24" pos:end="103:30">"ERROR"</literal></expr></argument>,<argument pos:start="103:32" pos:end="103:73"><expr pos:start="103:32" pos:end="103:73"><literal type="string" pos:start="103:32" pos:end="103:62">"Could not create database at "</literal> <operator pos:start="103:64" pos:end="103:64">+</operator> <name pos:start="103:66" pos:end="103:73">file_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="104:9" pos:end="104:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="106:5" pos:end="106:17"><expr pos:start="106:5" pos:end="106:16"><call pos:start="106:5" pos:end="106:16"><name pos:start="106:5" pos:end="106:14"><name pos:start="106:5" pos:end="106:8">file</name><operator pos:start="106:9" pos:end="106:9">.</operator><name pos:start="106:10" pos:end="106:14">close</name></name><argument_list pos:start="106:15" pos:end="106:16">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="107:5" pos:end="107:29"><expr pos:start="107:5" pos:end="107:28"><name pos:start="107:5" pos:end="107:7">idb</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:28"><name pos:start="107:11" pos:end="107:18">Database</name><argument_list pos:start="107:19" pos:end="107:28">(<argument pos:start="107:20" pos:end="107:27"><expr pos:start="107:20" pos:end="107:27"><name pos:start="107:20" pos:end="107:27">file_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:75"><expr pos:start="109:5" pos:end="109:74"><call pos:start="109:5" pos:end="109:74"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">log</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:18">writeLine</name></name><argument_list pos:start="109:19" pos:end="109:74">(<argument pos:start="109:20" pos:end="109:25"><expr pos:start="109:20" pos:end="109:25"><literal type="string" pos:start="109:20" pos:end="109:25">"INFO"</literal></expr></argument>,<argument pos:start="109:27" pos:end="109:73"><expr pos:start="109:27" pos:end="109:73"><literal type="string" pos:start="109:27" pos:end="109:62">"Successfully created new database "</literal> <operator pos:start="109:64" pos:end="109:64">+</operator> <name pos:start="109:66" pos:end="109:73">file_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <emit pos:start="111:5" pos:end="111:65">emit <expr pos:start="111:10" pos:end="111:64"><call pos:start="111:10" pos:end="111:64"><name pos:start="111:10" pos:end="111:23">outputToScreen</name><argument_list pos:start="111:24" pos:end="111:64">(<argument pos:start="111:25" pos:end="111:31"><expr pos:start="111:25" pos:end="111:31"><literal type="string" pos:start="111:25" pos:end="111:31">"black"</literal></expr></argument>,<argument pos:start="111:33" pos:end="111:63"><expr pos:start="111:33" pos:end="111:63"><literal type="string" pos:start="111:33" pos:end="111:63">"Successfully created database"</literal></expr></argument>)</argument_list></call></expr>;</emit>
    <emit pos:start="112:5" pos:end="112:31">emit <expr pos:start="112:10" pos:end="112:30"><call pos:start="112:10" pos:end="112:30"><name pos:start="112:10" pos:end="112:20">databaseSet</name><argument_list pos:start="112:21" pos:end="112:30">(<argument pos:start="112:22" pos:end="112:29"><expr pos:start="112:22" pos:end="112:29"><name pos:start="112:22" pos:end="112:29">file_loc</name></expr></argument>)</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<function pos:start="115:1" pos:end="126:1"><type pos:start="115:1" pos:end="115:4"><name pos:start="115:1" pos:end="115:4">void</name></type> <name pos:start="115:6" pos:end="115:33"><name pos:start="115:6" pos:end="115:15">Controller</name><operator pos:start="115:16" pos:end="115:17">::</operator><name pos:start="115:18" pos:end="115:33">loadDatabaseFile</name></name><parameter_list pos:start="115:34" pos:end="115:52">(<parameter pos:start="115:35" pos:end="115:51"><decl pos:start="115:35" pos:end="115:51"><type pos:start="115:35" pos:end="115:41"><name pos:start="115:35" pos:end="115:41">QString</name></type> <name pos:start="115:43" pos:end="115:51">file_path</name></decl></parameter>)</parameter_list> <block pos:start="115:54" pos:end="126:1">{<block_content pos:start="116:5" pos:end="125:32">
    <expr_stmt pos:start="116:5" pos:end="116:20"><expr pos:start="116:5" pos:end="116:19"><call pos:start="116:5" pos:end="116:19"><name pos:start="116:5" pos:end="116:17">closeDatabase</name><argument_list pos:start="116:18" pos:end="116:19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><call pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:20">changeFilePathOS</name><argument_list pos:start="117:21" pos:end="117:31">(<argument pos:start="117:22" pos:end="117:30"><expr pos:start="117:22" pos:end="117:30"><name pos:start="117:22" pos:end="117:30">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="118:5" pos:end="118:30"><expr pos:start="118:5" pos:end="118:29"><name pos:start="118:5" pos:end="118:7">idb</name> <operator pos:start="118:9" pos:end="118:9">=</operator> <call pos:start="118:11" pos:end="118:29"><name pos:start="118:11" pos:end="118:18">Database</name><argument_list pos:start="118:19" pos:end="118:29">(<argument pos:start="118:20" pos:end="118:28"><expr pos:start="118:20" pos:end="118:28"><name pos:start="118:20" pos:end="118:28">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="120:5" pos:end="120:58">for<control pos:start="120:8" pos:end="120:35">(<init pos:start="120:9" pos:end="120:34"><decl pos:start="120:9" pos:end="120:34"><type pos:start="120:9" pos:end="120:12"><name pos:start="120:9" pos:end="120:12">auto</name></type> <name pos:start="120:14" pos:end="120:14">i</name> <range pos:start="120:16" pos:end="120:34">: <expr pos:start="120:18" pos:end="120:34"><call pos:start="120:18" pos:end="120:34"><name pos:start="120:18" pos:end="120:32"><name pos:start="120:18" pos:end="120:20">idb</name><operator pos:start="120:21" pos:end="120:21">.</operator><name pos:start="120:22" pos:end="120:32">getSessions</name></name><argument_list pos:start="120:33" pos:end="120:34">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="120:37" pos:end="120:58">{<block_content pos:start="120:39" pos:end="120:56"> <emit pos:start="120:39" pos:end="120:56">emit <expr pos:start="120:44" pos:end="120:55"><call pos:start="120:44" pos:end="120:55"><name pos:start="120:44" pos:end="120:52">taskAdded</name><argument_list pos:start="120:53" pos:end="120:55">(<argument pos:start="120:54" pos:end="120:54"><expr pos:start="120:54" pos:end="120:54"><name pos:start="120:54" pos:end="120:54">i</name></expr></argument>)</argument_list></call></expr>;</emit> </block_content>}</block></for>

    <expr_stmt pos:start="122:5" pos:end="122:71"><expr pos:start="122:5" pos:end="122:70"><call pos:start="122:5" pos:end="122:70"><name pos:start="122:5" pos:end="122:18"><name pos:start="122:5" pos:end="122:7">log</name><operator pos:start="122:8" pos:end="122:9">-&gt;</operator><name pos:start="122:10" pos:end="122:18">writeLine</name></name><argument_list pos:start="122:19" pos:end="122:70">(<argument pos:start="122:20" pos:end="122:25"><expr pos:start="122:20" pos:end="122:25"><literal type="string" pos:start="122:20" pos:end="122:25">"INFO"</literal></expr></argument>,<argument pos:start="122:27" pos:end="122:69"><expr pos:start="122:27" pos:end="122:69"><literal type="string" pos:start="122:27" pos:end="122:57">"Successfully loaded database "</literal> <operator pos:start="122:59" pos:end="122:59">+</operator> <name pos:start="122:61" pos:end="122:69">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <emit pos:start="124:5" pos:end="124:65">emit <expr pos:start="124:10" pos:end="124:64"><call pos:start="124:10" pos:end="124:64"><name pos:start="124:10" pos:end="124:23">outputToScreen</name><argument_list pos:start="124:24" pos:end="124:64">(<argument pos:start="124:25" pos:end="124:31"><expr pos:start="124:25" pos:end="124:31"><literal type="string" pos:start="124:25" pos:end="124:31">"black"</literal></expr></argument>,<argument pos:start="124:33" pos:end="124:63"><expr pos:start="124:33" pos:end="124:63"><literal type="string" pos:start="124:33" pos:end="124:63">"Successfully loaded database."</literal></expr></argument>)</argument_list></call></expr>;</emit>
    <emit pos:start="125:5" pos:end="125:32">emit <expr pos:start="125:10" pos:end="125:31"><call pos:start="125:10" pos:end="125:31"><name pos:start="125:10" pos:end="125:20">databaseSet</name><argument_list pos:start="125:21" pos:end="125:31">(<argument pos:start="125:22" pos:end="125:30"><expr pos:start="125:22" pos:end="125:30"><name pos:start="125:22" pos:end="125:30">file_path</name></expr></argument>)</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<function pos:start="128:1" pos:end="134:1"><type pos:start="128:1" pos:end="128:4"><name pos:start="128:1" pos:end="128:4">void</name></type> <name pos:start="128:6" pos:end="128:30"><name pos:start="128:6" pos:end="128:15">Controller</name><operator pos:start="128:16" pos:end="128:17">::</operator><name pos:start="128:18" pos:end="128:30">closeDatabase</name></name><parameter_list pos:start="128:31" pos:end="128:32">()</parameter_list> <block pos:start="128:34" pos:end="134:1">{<block_content pos:start="129:5" pos:end="133:26">
    <expr_stmt pos:start="129:5" pos:end="129:16"><expr pos:start="129:5" pos:end="129:15"><call pos:start="129:5" pos:end="129:15"><name pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:7">idb</name><operator pos:start="129:8" pos:end="129:8">.</operator><name pos:start="129:9" pos:end="129:13">close</name></name><argument_list pos:start="129:14" pos:end="129:15">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:62"><expr pos:start="131:5" pos:end="131:61"><call pos:start="131:5" pos:end="131:61"><name pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:7">log</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:18">writeLine</name></name><argument_list pos:start="131:19" pos:end="131:61">(<argument pos:start="131:20" pos:end="131:25"><expr pos:start="131:20" pos:end="131:25"><literal type="string" pos:start="131:20" pos:end="131:25">"INFO"</literal></expr></argument>,<argument pos:start="131:27" pos:end="131:60"><expr pos:start="131:27" pos:end="131:60"><literal type="string" pos:start="131:27" pos:end="131:60">"Closed currently loaded database"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <emit pos:start="133:5" pos:end="133:26">emit <expr pos:start="133:10" pos:end="133:25"><call pos:start="133:10" pos:end="133:25"><name pos:start="133:10" pos:end="133:23">databaseClosed</name><argument_list pos:start="133:24" pos:end="133:25">()</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<function pos:start="136:1" pos:end="161:1"><type pos:start="136:1" pos:end="136:4"><name pos:start="136:1" pos:end="136:4">void</name></type> <name pos:start="136:6" pos:end="136:30"><name pos:start="136:6" pos:end="136:15">Controller</name><operator pos:start="136:16" pos:end="136:17">::</operator><name pos:start="136:18" pos:end="136:30">importXMLFile</name></name><parameter_list pos:start="136:31" pos:end="136:49">(<parameter pos:start="136:32" pos:end="136:48"><decl pos:start="136:32" pos:end="136:48"><type pos:start="136:32" pos:end="136:38"><name pos:start="136:32" pos:end="136:38">QString</name></type> <name pos:start="136:40" pos:end="136:48">file_path</name></decl></parameter>)</parameter_list> <block pos:start="136:51" pos:end="161:1">{<block_content pos:start="137:5" pos:end="160:5">
    <expr_stmt pos:start="137:5" pos:end="137:32"><expr pos:start="137:5" pos:end="137:31"><call pos:start="137:5" pos:end="137:31"><name pos:start="137:5" pos:end="137:20">changeFilePathOS</name><argument_list pos:start="137:21" pos:end="137:31">(<argument pos:start="137:22" pos:end="137:30"><expr pos:start="137:22" pos:end="137:30"><name pos:start="137:22" pos:end="137:30">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="143:5"><if pos:start="139:5" pos:end="143:5">if<condition pos:start="139:7" pos:end="139:29">(<expr pos:start="139:8" pos:end="139:28"><operator pos:start="139:8" pos:end="139:8">!</operator><call pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:11">idb</name><operator pos:start="139:12" pos:end="139:12">.</operator><name pos:start="139:13" pos:end="139:26">isDatabaseOpen</name></name><argument_list pos:start="139:27" pos:end="139:28">()</argument_list></call></expr>)</condition> <block pos:start="139:31" pos:end="143:5">{<block_content pos:start="140:9" pos:end="142:15">
        <expr_stmt pos:start="140:9" pos:end="140:66"><expr pos:start="140:9" pos:end="140:65"><call pos:start="140:9" pos:end="140:65"><name pos:start="140:9" pos:end="140:22"><name pos:start="140:9" pos:end="140:11">log</name><operator pos:start="140:12" pos:end="140:13">-&gt;</operator><name pos:start="140:14" pos:end="140:22">writeLine</name></name><argument_list pos:start="140:23" pos:end="140:65">(<argument pos:start="140:24" pos:end="140:30"><expr pos:start="140:24" pos:end="140:30"><literal type="string" pos:start="140:24" pos:end="140:30">"ERROR"</literal></expr></argument>,<argument pos:start="140:32" pos:end="140:64"><expr pos:start="140:32" pos:end="140:64"><literal type="string" pos:start="140:32" pos:end="140:64">"Database not opened: Import XML"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="141:9" pos:end="141:80">emit <expr pos:start="141:14" pos:end="141:79"><call pos:start="141:14" pos:end="141:79"><name pos:start="141:14" pos:end="141:20">warning</name><argument_list pos:start="141:21" pos:end="141:79">(<argument pos:start="141:22" pos:end="141:37"><expr pos:start="141:22" pos:end="141:37"><literal type="string" pos:start="141:22" pos:end="141:37">"Database Error"</literal></expr></argument>,<argument pos:start="141:39" pos:end="141:78"><expr pos:start="141:39" pos:end="141:78"><literal type="string" pos:start="141:39" pos:end="141:78">"There is no Database currently loaded."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="142:9" pos:end="142:15">return;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="145:5" pos:end="145:47">//Exit function if file is already imported</comment>
    <if_stmt pos:start="146:5" pos:end="150:5"><if pos:start="146:5" pos:end="150:5">if<condition pos:start="146:7" pos:end="146:113">(<expr pos:start="146:8" pos:end="146:112"><call pos:start="146:8" pos:end="146:112"><name pos:start="146:8" pos:end="146:21"><name pos:start="146:8" pos:end="146:10">idb</name><operator pos:start="146:11" pos:end="146:11">.</operator><name pos:start="146:12" pos:end="146:21">fileExists</name></name><argument_list pos:start="146:22" pos:end="146:112">(<argument pos:start="146:23" pos:end="146:111"><expr pos:start="146:23" pos:end="146:111"><call pos:start="146:23" pos:end="146:103"><name pos:start="146:23" pos:end="146:46"><name pos:start="146:23" pos:end="146:40">QCryptographicHash</name><operator pos:start="146:41" pos:end="146:42">::</operator><name pos:start="146:43" pos:end="146:46">hash</name></name><argument_list pos:start="146:47" pos:end="146:103">(<argument pos:start="146:48" pos:end="146:77"><expr pos:start="146:48" pos:end="146:77"><call pos:start="146:48" pos:end="146:65"><name pos:start="146:48" pos:end="146:63"><name pos:start="146:48" pos:end="146:56">file_path</name><operator pos:start="146:57" pos:end="146:57">.</operator><name pos:start="146:58" pos:end="146:63">toUtf8</name></name><argument_list pos:start="146:64" pos:end="146:65">()</argument_list></call><operator pos:start="146:66" pos:end="146:66">.</operator><call pos:start="146:67" pos:end="146:77"><name pos:start="146:67" pos:end="146:75">constData</name><argument_list pos:start="146:76" pos:end="146:77">()</argument_list></call></expr></argument>,<argument pos:start="146:79" pos:end="146:102"><expr pos:start="146:79" pos:end="146:102"><name pos:start="146:79" pos:end="146:102"><name pos:start="146:79" pos:end="146:96">QCryptographicHash</name><operator pos:start="146:97" pos:end="146:98">::</operator><name pos:start="146:99" pos:end="146:102">Sha1</name></name></expr></argument>)</argument_list></call><operator pos:start="146:104" pos:end="146:104">.</operator><call pos:start="146:105" pos:end="146:111"><name pos:start="146:105" pos:end="146:109">toHex</name><argument_list pos:start="146:110" pos:end="146:111">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="146:115" pos:end="150:5">{<block_content pos:start="147:9" pos:end="149:15">
        <expr_stmt pos:start="147:9" pos:end="147:71"><expr pos:start="147:9" pos:end="147:70"><call pos:start="147:9" pos:end="147:70"><name pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:11">log</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:22">writeLine</name></name><argument_list pos:start="147:23" pos:end="147:70">(<argument pos:start="147:24" pos:end="147:30"><expr pos:start="147:24" pos:end="147:30"><literal type="string" pos:start="147:24" pos:end="147:30">"ERROR"</literal></expr></argument>,<argument pos:start="147:32" pos:end="147:69"><expr pos:start="147:32" pos:end="147:69"><literal type="string" pos:start="147:32" pos:end="147:59">"XML file already imported "</literal><operator pos:start="147:60" pos:end="147:60">+</operator><name pos:start="147:61" pos:end="147:69">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="148:9" pos:end="148:102">emit <expr pos:start="148:14" pos:end="148:101"><call pos:start="148:14" pos:end="148:101"><name pos:start="148:14" pos:end="148:20">warning</name><argument_list pos:start="148:21" pos:end="148:101">(<argument pos:start="148:22" pos:end="148:39"><expr pos:start="148:22" pos:end="148:39"><literal type="string" pos:start="148:22" pos:end="148:39">"XML Import Error"</literal></expr></argument>,<argument pos:start="148:41" pos:end="148:100"><expr pos:start="148:41" pos:end="148:100"><literal type="string" pos:start="148:41" pos:end="148:100">"This XML File has already been imported into the Database."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="149:9" pos:end="149:15">return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="152:5" pos:end="152:35"><decl pos:start="152:5" pos:end="152:34"><type pos:start="152:5" pos:end="152:14"><name pos:start="152:5" pos:end="152:14">XMLHandler</name></type> <name pos:start="152:16" pos:end="152:23">xml_file</name><argument_list pos:start="152:24" pos:end="152:34">(<argument pos:start="152:25" pos:end="152:33"><expr pos:start="152:25" pos:end="152:33"><name pos:start="152:25" pos:end="152:33">file_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <decl_stmt pos:start="153:5" pos:end="153:45"><decl pos:start="153:5" pos:end="153:44"><type pos:start="153:5" pos:end="153:11"><name pos:start="153:5" pos:end="153:11">QString</name></type> <name pos:start="153:13" pos:end="153:16">type</name> <init pos:start="153:18" pos:end="153:44">= <expr pos:start="153:20" pos:end="153:44"><call pos:start="153:20" pos:end="153:44"><name pos:start="153:20" pos:end="153:42"><name pos:start="153:20" pos:end="153:27">xml_file</name><operator pos:start="153:28" pos:end="153:28">.</operator><name pos:start="153:29" pos:end="153:42">getXMLFileType</name></name><argument_list pos:start="153:43" pos:end="153:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="155:5" pos:end="160:5"><if pos:start="155:5" pos:end="155:59">if<condition pos:start="155:7" pos:end="155:29">(<expr pos:start="155:8" pos:end="155:28"><name pos:start="155:8" pos:end="155:11">type</name> <operator pos:start="155:13" pos:end="155:14">==</operator> <literal type="string" pos:start="155:16" pos:end="155:28">"itrace_core"</literal></expr>)</condition> <block pos:start="155:31" pos:end="155:59">{<block_content pos:start="155:33" pos:end="155:57"> <expr_stmt pos:start="155:33" pos:end="155:57"><expr pos:start="155:33" pos:end="155:56"><call pos:start="155:33" pos:end="155:56"><name pos:start="155:33" pos:end="155:45">importCoreXML</name><argument_list pos:start="155:46" pos:end="155:56">(<argument pos:start="155:47" pos:end="155:55"><expr pos:start="155:47" pos:end="155:55"><name pos:start="155:47" pos:end="155:55">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if>
    <if type="elseif" pos:start="156:5" pos:end="156:68">else if<condition pos:start="156:12" pos:end="156:36">(<expr pos:start="156:13" pos:end="156:35"><name pos:start="156:13" pos:end="156:16">type</name> <operator pos:start="156:18" pos:end="156:19">==</operator> <literal type="string" pos:start="156:21" pos:end="156:35">"itrace_plugin"</literal></expr>)</condition> <block pos:start="156:38" pos:end="156:68">{<block_content pos:start="156:40" pos:end="156:66"> <expr_stmt pos:start="156:40" pos:end="156:66"><expr pos:start="156:40" pos:end="156:65"><call pos:start="156:40" pos:end="156:65"><name pos:start="156:40" pos:end="156:54">importPluginXML</name><argument_list pos:start="156:55" pos:end="156:65">(<argument pos:start="156:56" pos:end="156:64"><expr pos:start="156:56" pos:end="156:64"><name pos:start="156:56" pos:end="156:64">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if>
    <else pos:start="157:5" pos:end="160:5">else <block pos:start="157:10" pos:end="160:5">{<block_content pos:start="158:9" pos:end="159:82">
        <expr_stmt pos:start="158:9" pos:end="158:76"><expr pos:start="158:9" pos:end="158:75"><call pos:start="158:9" pos:end="158:75"><name pos:start="158:9" pos:end="158:22"><name pos:start="158:9" pos:end="158:11">log</name><operator pos:start="158:12" pos:end="158:13">-&gt;</operator><name pos:start="158:14" pos:end="158:22">writeLine</name></name><argument_list pos:start="158:23" pos:end="158:75">(<argument pos:start="158:24" pos:end="158:32"><expr pos:start="158:24" pos:end="158:32"><literal type="string" pos:start="158:24" pos:end="158:32">"WARNING"</literal></expr></argument>,<argument pos:start="158:34" pos:end="158:74"><expr pos:start="158:34" pos:end="158:74"><literal type="string" pos:start="158:34" pos:end="158:64">"Unrecognized iTrace XML file "</literal><operator pos:start="158:65" pos:end="158:65">+</operator><name pos:start="158:66" pos:end="158:74">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="159:9" pos:end="159:82">emit <expr pos:start="159:14" pos:end="159:81"><call pos:start="159:14" pos:end="159:81"><name pos:start="159:14" pos:end="159:27">outputToScreen</name><argument_list pos:start="159:28" pos:end="159:81">(<argument pos:start="159:29" pos:end="159:37"><expr pos:start="159:29" pos:end="159:37"><literal type="string" pos:start="159:29" pos:end="159:37">"#F55904"</literal></expr></argument>,<argument pos:start="159:39" pos:end="159:80"><expr pos:start="159:39" pos:end="159:80"><literal type="string" pos:start="159:39" pos:end="159:70">"Unrecognized iTrace XML file: "</literal><operator pos:start="159:71" pos:end="159:71">+</operator><name pos:start="159:72" pos:end="159:80">file_path</name></expr></argument>)</argument_list></call></expr>;</emit>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function pos:start="163:1" pos:end="214:1"><type pos:start="163:1" pos:end="163:4"><name pos:start="163:1" pos:end="163:4">void</name></type> <name pos:start="163:6" pos:end="163:28"><name pos:start="163:6" pos:end="163:15">Controller</name><operator pos:start="163:16" pos:end="163:17">::</operator><name pos:start="163:18" pos:end="163:28">batchAddXML</name></name><parameter_list pos:start="163:29" pos:end="163:49">(<parameter pos:start="163:30" pos:end="163:48"><decl pos:start="163:30" pos:end="163:48"><type pos:start="163:30" pos:end="163:36"><name pos:start="163:30" pos:end="163:36">QString</name></type> <name pos:start="163:38" pos:end="163:48">folder_path</name></decl></parameter>)</parameter_list> <block pos:start="163:51" pos:end="214:1">{<block_content pos:start="164:5" pos:end="213:5">
    <expr_stmt pos:start="164:5" pos:end="164:80"><expr pos:start="164:5" pos:end="164:79"><call pos:start="164:5" pos:end="164:79"><name pos:start="164:5" pos:end="164:18"><name pos:start="164:5" pos:end="164:7">log</name><operator pos:start="164:8" pos:end="164:9">-&gt;</operator><name pos:start="164:10" pos:end="164:18">writeLine</name></name><argument_list pos:start="164:19" pos:end="164:79">(<argument pos:start="164:20" pos:end="164:25"><expr pos:start="164:20" pos:end="164:25"><literal type="string" pos:start="164:20" pos:end="164:25">"INFO"</literal></expr></argument>,<argument pos:start="164:27" pos:end="164:78"><expr pos:start="164:27" pos:end="164:78"><literal type="string" pos:start="164:27" pos:end="164:66">"Scanning and adding all XML files in: "</literal><operator pos:start="164:67" pos:end="164:67">+</operator><name pos:start="164:68" pos:end="164:78">folder_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="165:5" pos:end="169:5"><if pos:start="165:5" pos:end="169:5">if<condition pos:start="165:7" pos:end="165:29">(<expr pos:start="165:8" pos:end="165:28"><operator pos:start="165:8" pos:end="165:8">!</operator><call pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:26"><name pos:start="165:9" pos:end="165:11">idb</name><operator pos:start="165:12" pos:end="165:12">.</operator><name pos:start="165:13" pos:end="165:26">isDatabaseOpen</name></name><argument_list pos:start="165:27" pos:end="165:28">()</argument_list></call></expr>)</condition> <block pos:start="165:31" pos:end="169:5">{<block_content pos:start="166:9" pos:end="168:15">
        <expr_stmt pos:start="166:9" pos:end="166:75"><expr pos:start="166:9" pos:end="166:74"><call pos:start="166:9" pos:end="166:74"><name pos:start="166:9" pos:end="166:22"><name pos:start="166:9" pos:end="166:11">log</name><operator pos:start="166:12" pos:end="166:13">-&gt;</operator><name pos:start="166:14" pos:end="166:22">writeLine</name></name><argument_list pos:start="166:23" pos:end="166:74">(<argument pos:start="166:24" pos:end="166:30"><expr pos:start="166:24" pos:end="166:30"><literal type="string" pos:start="166:24" pos:end="166:30">"ERROR"</literal></expr></argument>,<argument pos:start="166:32" pos:end="166:73"><expr pos:start="166:32" pos:end="166:73"><literal type="string" pos:start="166:32" pos:end="166:73">"Database not opened: Batch add XML files"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="167:9" pos:end="167:80">emit <expr pos:start="167:14" pos:end="167:79"><call pos:start="167:14" pos:end="167:79"><name pos:start="167:14" pos:end="167:20">warning</name><argument_list pos:start="167:21" pos:end="167:79">(<argument pos:start="167:22" pos:end="167:37"><expr pos:start="167:22" pos:end="167:37"><literal type="string" pos:start="167:22" pos:end="167:37">"Database Error"</literal></expr></argument>,<argument pos:start="167:39" pos:end="167:78"><expr pos:start="167:39" pos:end="167:78"><literal type="string" pos:start="167:39" pos:end="167:78">"There is no Database currently loaded."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="168:9" pos:end="168:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <emit pos:start="170:5" pos:end="170:41">emit <expr pos:start="170:10" pos:end="170:40"><call pos:start="170:10" pos:end="170:40"><name pos:start="170:10" pos:end="170:38">setProgressBarToIndeterminate</name><argument_list pos:start="170:39" pos:end="170:40">()</argument_list></call></expr>;</emit>

    <expr_stmt pos:start="172:5" pos:end="172:34"><expr pos:start="172:5" pos:end="172:33"><call pos:start="172:5" pos:end="172:33"><name pos:start="172:5" pos:end="172:20">changeFilePathOS</name><argument_list pos:start="172:21" pos:end="172:33">(<argument pos:start="172:22" pos:end="172:32"><expr pos:start="172:22" pos:end="172:32"><name pos:start="172:22" pos:end="172:32">folder_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="173:5" pos:end="173:65"><decl pos:start="173:5" pos:end="173:64"><type pos:start="173:5" pos:end="173:58"><name pos:start="173:5" pos:end="173:58"><name pos:start="173:5" pos:end="173:7">std</name><operator pos:start="173:8" pos:end="173:9">::</operator><name pos:start="173:10" pos:end="173:12">map</name><argument_list type="generic" pos:start="173:13" pos:end="173:58">&lt;<argument pos:start="173:14" pos:end="173:20"><expr pos:start="173:14" pos:end="173:20"><name pos:start="173:14" pos:end="173:20">QString</name></expr></argument>,<argument pos:start="173:22" pos:end="173:57"><expr pos:start="173:22" pos:end="173:57"><name pos:start="173:22" pos:end="173:57"><name pos:start="173:22" pos:end="173:24">std</name><operator pos:start="173:25" pos:end="173:26">::</operator><name pos:start="173:27" pos:end="173:30">pair</name><argument_list type="generic" pos:start="173:31" pos:end="173:57">&lt;<argument pos:start="173:32" pos:end="173:51"><expr pos:start="173:32" pos:end="173:51"><name pos:start="173:32" pos:end="173:51"><name pos:start="173:32" pos:end="173:34">std</name><operator pos:start="173:35" pos:end="173:36">::</operator><name pos:start="173:37" pos:end="173:42">vector</name><argument_list type="generic" pos:start="173:43" pos:end="173:51">&lt;<argument pos:start="173:44" pos:end="173:50"><expr pos:start="173:44" pos:end="173:50"><name pos:start="173:44" pos:end="173:50">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>,<argument pos:start="173:53" pos:end="173:56"><expr pos:start="173:53" pos:end="173:56"><name pos:start="173:53" pos:end="173:56">bool</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="173:60" pos:end="173:64">files</name></decl>;</decl_stmt>
    <decl_stmt pos:start="174:5" pos:end="174:34"><decl pos:start="174:5" pos:end="174:33"><type pos:start="174:5" pos:end="174:16"><name pos:start="174:5" pos:end="174:16">QDirIterator</name></type> <name pos:start="174:18" pos:end="174:20">dir</name><argument_list pos:start="174:21" pos:end="174:33">(<argument pos:start="174:22" pos:end="174:32"><expr pos:start="174:22" pos:end="174:32"><name pos:start="174:22" pos:end="174:32">folder_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <while pos:start="175:5" pos:end="192:5">while<condition pos:start="175:10" pos:end="175:24">(<expr pos:start="175:11" pos:end="175:23"><call pos:start="175:11" pos:end="175:23"><name pos:start="175:11" pos:end="175:21"><name pos:start="175:11" pos:end="175:13">dir</name><operator pos:start="175:14" pos:end="175:14">.</operator><name pos:start="175:15" pos:end="175:21">hasNext</name></name><argument_list pos:start="175:22" pos:end="175:23">()</argument_list></call></expr>)</condition> <block pos:start="175:26" pos:end="192:5">{<block_content pos:start="176:9" pos:end="191:38">
        <decl_stmt pos:start="176:9" pos:end="176:38"><decl pos:start="176:9" pos:end="176:37"><type pos:start="176:9" pos:end="176:15"><name pos:start="176:9" pos:end="176:15">QString</name></type> <name pos:start="176:17" pos:end="176:24">filename</name> <init pos:start="176:26" pos:end="176:37">= <expr pos:start="176:28" pos:end="176:37"><call pos:start="176:28" pos:end="176:37"><name pos:start="176:28" pos:end="176:35"><name pos:start="176:28" pos:end="176:30">dir</name><operator pos:start="176:31" pos:end="176:31">.</operator><name pos:start="176:32" pos:end="176:35">next</name></name><argument_list pos:start="176:36" pos:end="176:37">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="177:9" pos:end="190:9"><if pos:start="177:9" pos:end="190:9">if<condition pos:start="177:11" pos:end="177:37">(<expr pos:start="177:12" pos:end="177:36"><call pos:start="177:12" pos:end="177:36"><name pos:start="177:12" pos:end="177:28"><name pos:start="177:12" pos:end="177:19">filename</name><operator pos:start="177:20" pos:end="177:20">.</operator><name pos:start="177:21" pos:end="177:28">endsWith</name></name><argument_list pos:start="177:29" pos:end="177:36">(<argument pos:start="177:30" pos:end="177:35"><expr pos:start="177:30" pos:end="177:35"><literal type="string" pos:start="177:30" pos:end="177:35">".xml"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:39" pos:end="190:9">{<block_content pos:start="178:13" pos:end="189:13">
            <expr_stmt pos:start="178:13" pos:end="178:39"><expr pos:start="178:13" pos:end="178:38"><call pos:start="178:13" pos:end="178:38"><name pos:start="178:13" pos:end="178:28">changeFilePathOS</name><argument_list pos:start="178:29" pos:end="178:38">(<argument pos:start="178:30" pos:end="178:37"><expr pos:start="178:30" pos:end="178:37"><name pos:start="178:30" pos:end="178:37">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt pos:start="179:13" pos:end="179:42"><decl pos:start="179:13" pos:end="179:41"><type pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:22">XMLHandler</name></type> <name pos:start="179:24" pos:end="179:31">xml_file</name><argument_list pos:start="179:32" pos:end="179:41">(<argument pos:start="179:33" pos:end="179:40"><expr pos:start="179:33" pos:end="179:40"><name pos:start="179:33" pos:end="179:40">filename</name></expr></argument>)</argument_list></decl>;</decl_stmt>
            <decl_stmt pos:start="180:13" pos:end="180:53"><decl pos:start="180:13" pos:end="180:52"><type pos:start="180:13" pos:end="180:19"><name pos:start="180:13" pos:end="180:19">QString</name></type> <name pos:start="180:21" pos:end="180:24">type</name> <init pos:start="180:26" pos:end="180:52">= <expr pos:start="180:28" pos:end="180:52"><call pos:start="180:28" pos:end="180:52"><name pos:start="180:28" pos:end="180:50"><name pos:start="180:28" pos:end="180:35">xml_file</name><operator pos:start="180:36" pos:end="180:36">.</operator><name pos:start="180:37" pos:end="180:50">getXMLFileType</name></name><argument_list pos:start="180:51" pos:end="180:52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="181:13" pos:end="189:13"><if pos:start="181:13" pos:end="189:13">if<condition pos:start="181:15" pos:end="181:64">(<expr pos:start="181:16" pos:end="181:63"><name pos:start="181:16" pos:end="181:19">type</name> <operator pos:start="181:21" pos:end="181:22">==</operator> <literal type="string" pos:start="181:24" pos:end="181:36">"itrace_core"</literal> <operator pos:start="181:38" pos:end="181:39">||</operator> <name pos:start="181:41" pos:end="181:44">type</name> <operator pos:start="181:46" pos:end="181:47">==</operator> <literal type="string" pos:start="181:49" pos:end="181:63">"itrace_plugin"</literal></expr>)</condition> <block pos:start="181:66" pos:end="189:13">{<block_content pos:start="182:17" pos:end="188:83">
                <decl_stmt pos:start="182:17" pos:end="182:72"><decl pos:start="182:17" pos:end="182:71"><type pos:start="182:17" pos:end="182:23"><name pos:start="182:17" pos:end="182:23">QString</name></type> <name pos:start="182:25" pos:end="182:26">id</name> <init pos:start="182:28" pos:end="182:71">= <expr pos:start="182:30" pos:end="182:71"><call pos:start="182:30" pos:end="182:71"><name pos:start="182:30" pos:end="182:57"><name pos:start="182:30" pos:end="182:37">xml_file</name><operator pos:start="182:38" pos:end="182:38">.</operator><name pos:start="182:39" pos:end="182:57">getElementAttribute</name></name><argument_list pos:start="182:58" pos:end="182:71">(<argument pos:start="182:59" pos:end="182:70"><expr pos:start="182:59" pos:end="182:70"><literal type="string" pos:start="182:59" pos:end="182:70">"session_id"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="183:17" pos:end="187:76"><if pos:start="183:17" pos:end="186:17">if<condition pos:start="183:19" pos:end="183:40">(<expr pos:start="183:20" pos:end="183:39"><call pos:start="183:20" pos:end="183:34"><name pos:start="183:20" pos:end="183:30"><name pos:start="183:20" pos:end="183:24">files</name><operator pos:start="183:25" pos:end="183:25">.</operator><name pos:start="183:26" pos:end="183:30">count</name></name><argument_list pos:start="183:31" pos:end="183:34">(<argument pos:start="183:32" pos:end="183:33"><expr pos:start="183:32" pos:end="183:33"><name pos:start="183:32" pos:end="183:33">id</name></expr></argument>)</argument_list></call> <operator pos:start="183:36" pos:end="183:37">==</operator> <literal type="number" pos:start="183:39" pos:end="183:39">0</literal></expr>)</condition> <block pos:start="183:42" pos:end="186:17">{<block_content pos:start="184:21" pos:end="185:67">
                    <decl_stmt pos:start="184:21" pos:end="184:97"><decl pos:start="184:21" pos:end="184:96"><type pos:start="184:21" pos:end="184:24"><name pos:start="184:21" pos:end="184:24">auto</name></type> <name pos:start="184:26" pos:end="184:31">insert</name> <init pos:start="184:33" pos:end="184:96">= <expr pos:start="184:35" pos:end="184:96"><call pos:start="184:35" pos:end="184:96"><name pos:start="184:35" pos:end="184:47"><name pos:start="184:35" pos:end="184:39">files</name><operator pos:start="184:40" pos:end="184:40">.</operator><name pos:start="184:41" pos:end="184:47">emplace</name></name><argument_list pos:start="184:48" pos:end="184:96">(<argument pos:start="184:49" pos:end="184:50"><expr pos:start="184:49" pos:end="184:50"><name pos:start="184:49" pos:end="184:50">id</name></expr></argument>,<argument pos:start="184:52" pos:end="184:95"><expr pos:start="184:52" pos:end="184:95"><call pos:start="184:52" pos:end="184:95"><name pos:start="184:52" pos:end="184:65"><name pos:start="184:52" pos:end="184:54">std</name><operator pos:start="184:55" pos:end="184:56">::</operator><name pos:start="184:57" pos:end="184:65">make_pair</name></name><argument_list pos:start="184:66" pos:end="184:95">(<argument pos:start="184:67" pos:end="184:88"><expr pos:start="184:67" pos:end="184:88"><call pos:start="184:67" pos:end="184:88"><name pos:start="184:67" pos:end="184:86"><name pos:start="184:67" pos:end="184:69">std</name><operator pos:start="184:70" pos:end="184:71">::</operator><name pos:start="184:72" pos:end="184:77">vector</name><argument_list type="generic" pos:start="184:78" pos:end="184:86">&lt;<argument pos:start="184:79" pos:end="184:85"><expr pos:start="184:79" pos:end="184:85"><name pos:start="184:79" pos:end="184:85">QString</name></expr></argument>&gt;</argument_list></name><argument_list pos:start="184:87" pos:end="184:88">()</argument_list></call></expr></argument>,<argument pos:start="184:90" pos:end="184:94"><expr pos:start="184:90" pos:end="184:94"><literal type="boolean" pos:start="184:90" pos:end="184:94">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt pos:start="185:21" pos:end="185:67"><expr pos:start="185:21" pos:end="185:66"><call pos:start="185:21" pos:end="185:66"><name pos:start="185:21" pos:end="185:56"><name pos:start="185:21" pos:end="185:26">insert</name><operator pos:start="185:27" pos:end="185:27">.</operator><name pos:start="185:28" pos:end="185:32">first</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:40">second</name><operator pos:start="185:41" pos:end="185:41">.</operator><name pos:start="185:42" pos:end="185:46">first</name><operator pos:start="185:47" pos:end="185:47">.</operator><name pos:start="185:48" pos:end="185:56">push_back</name></name><argument_list pos:start="185:57" pos:end="185:66">(<argument pos:start="185:58" pos:end="185:65"><expr pos:start="185:58" pos:end="185:65"><name pos:start="185:58" pos:end="185:65">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if>
                <else pos:start="187:17" pos:end="187:76">else <block pos:start="187:22" pos:end="187:76">{<block_content pos:start="187:24" pos:end="187:74"> <expr_stmt pos:start="187:24" pos:end="187:74"><expr pos:start="187:24" pos:end="187:73"><operator pos:start="187:24" pos:end="187:24">(</operator><call pos:start="187:25" pos:end="187:38"><name pos:start="187:25" pos:end="187:34"><name pos:start="187:25" pos:end="187:29">files</name><operator pos:start="187:30" pos:end="187:30">.</operator><name pos:start="187:31" pos:end="187:34">find</name></name><argument_list pos:start="187:35" pos:end="187:38">(<argument pos:start="187:36" pos:end="187:37"><expr pos:start="187:36" pos:end="187:37"><name pos:start="187:36" pos:end="187:37">id</name></expr></argument>)</argument_list></call><operator pos:start="187:39" pos:end="187:39">)</operator><operator pos:start="187:40" pos:end="187:41">-&gt;</operator><call pos:start="187:42" pos:end="187:73"><name pos:start="187:42" pos:end="187:63"><name pos:start="187:42" pos:end="187:47">second</name><operator pos:start="187:48" pos:end="187:48">.</operator><name pos:start="187:49" pos:end="187:53">first</name><operator pos:start="187:54" pos:end="187:54">.</operator><name pos:start="187:55" pos:end="187:63">push_back</name></name><argument_list pos:start="187:64" pos:end="187:73">(<argument pos:start="187:65" pos:end="187:72"><expr pos:start="187:65" pos:end="187:72"><name pos:start="187:65" pos:end="187:72">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></else></if_stmt>
                <if_stmt pos:start="188:17" pos:end="188:83"><if pos:start="188:17" pos:end="188:83">if<condition pos:start="188:19" pos:end="188:41">(<expr pos:start="188:20" pos:end="188:40"><name pos:start="188:20" pos:end="188:23">type</name> <operator pos:start="188:25" pos:end="188:26">==</operator> <literal type="string" pos:start="188:28" pos:end="188:40">"itrace_core"</literal></expr>)</condition> <block pos:start="188:43" pos:end="188:83">{<block_content pos:start="188:45" pos:end="188:81"> <expr_stmt pos:start="188:45" pos:end="188:81"><expr pos:start="188:45" pos:end="188:80"><call pos:start="188:45" pos:end="188:58"><name pos:start="188:45" pos:end="188:54"><name pos:start="188:45" pos:end="188:49">files</name><operator pos:start="188:50" pos:end="188:50">.</operator><name pos:start="188:51" pos:end="188:54">find</name></name><argument_list pos:start="188:55" pos:end="188:58">(<argument pos:start="188:56" pos:end="188:57"><expr pos:start="188:56" pos:end="188:57"><name pos:start="188:56" pos:end="188:57">id</name></expr></argument>)</argument_list></call><operator pos:start="188:59" pos:end="188:60">-&gt;</operator><name pos:start="188:61" pos:end="188:73"><name pos:start="188:61" pos:end="188:66">second</name><operator pos:start="188:67" pos:end="188:67">.</operator><name pos:start="188:68" pos:end="188:73">second</name></name> <operator pos:start="188:75" pos:end="188:75">=</operator> <literal type="boolean" pos:start="188:77" pos:end="188:80">true</literal></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><call pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:35"><name pos:start="191:9" pos:end="191:20">QApplication</name><operator pos:start="191:21" pos:end="191:22">::</operator><name pos:start="191:23" pos:end="191:35">processEvents</name></name><argument_list pos:start="191:36" pos:end="191:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <decl_stmt pos:start="193:5" pos:end="193:39"><decl pos:start="193:5" pos:end="193:23"><type pos:start="193:5" pos:end="193:11"><name pos:start="193:5" pos:end="193:11">QString</name></type> <name pos:start="193:13" pos:end="193:23">badPairWarn</name></decl>, <decl pos:start="193:26" pos:end="193:38"><type ref="prev" pos:start="193:5" pos:end="193:11"/><name pos:start="193:26" pos:end="193:38">alreadyInWarn</name></decl>;</decl_stmt>
    <for pos:start="194:5" pos:end="203:5">for<control pos:start="194:8" pos:end="194:54">(<init pos:start="194:9" pos:end="194:31"><decl pos:start="194:9" pos:end="194:30"><type pos:start="194:9" pos:end="194:12"><name pos:start="194:9" pos:end="194:12">auto</name></type> <name pos:start="194:14" pos:end="194:14">i</name> <init pos:start="194:16" pos:end="194:30">= <expr pos:start="194:18" pos:end="194:30"><call pos:start="194:18" pos:end="194:30"><name pos:start="194:18" pos:end="194:28"><name pos:start="194:18" pos:end="194:22">files</name><operator pos:start="194:23" pos:end="194:23">.</operator><name pos:start="194:24" pos:end="194:28">begin</name></name><argument_list pos:start="194:29" pos:end="194:30">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="194:33" pos:end="194:49"><expr pos:start="194:33" pos:end="194:48"><name pos:start="194:33" pos:end="194:33">i</name> <operator pos:start="194:35" pos:end="194:36">!=</operator> <call pos:start="194:38" pos:end="194:48"><name pos:start="194:38" pos:end="194:46"><name pos:start="194:38" pos:end="194:42">files</name><operator pos:start="194:43" pos:end="194:43">.</operator><name pos:start="194:44" pos:end="194:46">end</name></name><argument_list pos:start="194:47" pos:end="194:48">()</argument_list></call></expr>;</condition> <incr pos:start="194:51" pos:end="194:53"><expr pos:start="194:51" pos:end="194:53"><operator pos:start="194:51" pos:end="194:52">++</operator><name pos:start="194:53" pos:end="194:53">i</name></expr></incr>)</control> <block pos:start="194:56" pos:end="203:5">{<block_content pos:start="195:9" pos:end="202:38">
        <if_stmt pos:start="195:9" pos:end="201:82"><if pos:start="195:9" pos:end="200:9">if<condition pos:start="195:11" pos:end="195:59">(<expr pos:start="195:12" pos:end="195:58"><call pos:start="195:12" pos:end="195:33"><name pos:start="195:12" pos:end="195:31"><name pos:start="195:12" pos:end="195:12">i</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:20">second</name><operator pos:start="195:21" pos:end="195:21">.</operator><name pos:start="195:22" pos:end="195:26">first</name><operator pos:start="195:27" pos:end="195:27">.</operator><name pos:start="195:28" pos:end="195:31">size</name></name><argument_list pos:start="195:32" pos:end="195:33">()</argument_list></call> <operator pos:start="195:35" pos:end="195:36">&gt;=</operator> <literal type="number" pos:start="195:38" pos:end="195:38">2</literal> <operator pos:start="195:40" pos:end="195:41">&amp;&amp;</operator> <name pos:start="195:43" pos:end="195:58"><name pos:start="195:43" pos:end="195:43">i</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:51">second</name><operator pos:start="195:52" pos:end="195:52">.</operator><name pos:start="195:53" pos:end="195:58">second</name></name></expr>)</condition> <block pos:start="195:61" pos:end="200:9">{<block_content pos:start="196:13" pos:end="199:13">
            <for pos:start="196:13" pos:end="199:13">for<control pos:start="196:16" pos:end="196:41">(<init pos:start="196:17" pos:end="196:40"><decl pos:start="196:17" pos:end="196:40"><type pos:start="196:17" pos:end="196:20"><name pos:start="196:17" pos:end="196:20">auto</name></type> <name pos:start="196:22" pos:end="196:22">j</name> <range pos:start="196:24" pos:end="196:40">: <expr pos:start="196:26" pos:end="196:40"><name pos:start="196:26" pos:end="196:40"><name pos:start="196:26" pos:end="196:26">i</name><operator pos:start="196:27" pos:end="196:28">-&gt;</operator><name pos:start="196:29" pos:end="196:34">second</name><operator pos:start="196:35" pos:end="196:35">.</operator><name pos:start="196:36" pos:end="196:40">first</name></name></expr></range></decl></init>)</control> <block pos:start="196:43" pos:end="199:13">{<block_content pos:start="197:17" pos:end="198:58">
                <if_stmt pos:start="197:17" pos:end="198:58"><if pos:start="197:17" pos:end="197:140">if<condition pos:start="197:19" pos:end="197:118">(<expr pos:start="197:20" pos:end="197:117"><operator pos:start="197:20" pos:end="197:20">!</operator><call pos:start="197:21" pos:end="197:117"><name pos:start="197:21" pos:end="197:34"><name pos:start="197:21" pos:end="197:23">idb</name><operator pos:start="197:24" pos:end="197:24">.</operator><name pos:start="197:25" pos:end="197:34">fileExists</name></name><argument_list pos:start="197:35" pos:end="197:117">(<argument pos:start="197:36" pos:end="197:116"><expr pos:start="197:36" pos:end="197:116"><call pos:start="197:36" pos:end="197:108"><name pos:start="197:36" pos:end="197:59"><name pos:start="197:36" pos:end="197:53">QCryptographicHash</name><operator pos:start="197:54" pos:end="197:55">::</operator><name pos:start="197:56" pos:end="197:59">hash</name></name><argument_list pos:start="197:60" pos:end="197:108">(<argument pos:start="197:61" pos:end="197:82"><expr pos:start="197:61" pos:end="197:82"><call pos:start="197:61" pos:end="197:70"><name pos:start="197:61" pos:end="197:68"><name pos:start="197:61" pos:end="197:61">j</name><operator pos:start="197:62" pos:end="197:62">.</operator><name pos:start="197:63" pos:end="197:68">toUtf8</name></name><argument_list pos:start="197:69" pos:end="197:70">()</argument_list></call><operator pos:start="197:71" pos:end="197:71">.</operator><call pos:start="197:72" pos:end="197:82"><name pos:start="197:72" pos:end="197:80">constData</name><argument_list pos:start="197:81" pos:end="197:82">()</argument_list></call></expr></argument>,<argument pos:start="197:84" pos:end="197:107"><expr pos:start="197:84" pos:end="197:107"><name pos:start="197:84" pos:end="197:107"><name pos:start="197:84" pos:end="197:101">QCryptographicHash</name><operator pos:start="197:102" pos:end="197:103">::</operator><name pos:start="197:104" pos:end="197:107">Sha1</name></name></expr></argument>)</argument_list></call><operator pos:start="197:109" pos:end="197:109">.</operator><call pos:start="197:110" pos:end="197:116"><name pos:start="197:110" pos:end="197:114">toHex</name><argument_list pos:start="197:115" pos:end="197:116">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:120" pos:end="197:140">{<block_content pos:start="197:122" pos:end="197:138"> <expr_stmt pos:start="197:122" pos:end="197:138"><expr pos:start="197:122" pos:end="197:137"><call pos:start="197:122" pos:end="197:137"><name pos:start="197:122" pos:end="197:134">importXMLFile</name><argument_list pos:start="197:135" pos:end="197:137">(<argument pos:start="197:136" pos:end="197:136"><expr pos:start="197:136" pos:end="197:136"><name pos:start="197:136" pos:end="197:136">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if>
                <else pos:start="198:17" pos:end="198:58">else <block pos:start="198:22" pos:end="198:58">{<block_content pos:start="198:24" pos:end="198:56"> <expr_stmt pos:start="198:24" pos:end="198:56"><expr pos:start="198:24" pos:end="198:55"><name pos:start="198:24" pos:end="198:36">alreadyInWarn</name> <operator pos:start="198:38" pos:end="198:39">+=</operator> <literal type="string" pos:start="198:41" pos:end="198:44">"\t"</literal> <operator pos:start="198:46" pos:end="198:46">+</operator> <name pos:start="198:48" pos:end="198:48">j</name> <operator pos:start="198:50" pos:end="198:50">+</operator> <literal type="string" pos:start="198:52" pos:end="198:55">"\n"</literal></expr>;</expr_stmt> </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if>
        <else pos:start="201:9" pos:end="201:82">else <block pos:start="201:14" pos:end="201:82">{<block_content pos:start="201:16" pos:end="201:80"> <for pos:start="201:16" pos:end="201:80">for<control pos:start="201:19" pos:end="201:44">(<init pos:start="201:20" pos:end="201:43"><decl pos:start="201:20" pos:end="201:43"><type pos:start="201:20" pos:end="201:23"><name pos:start="201:20" pos:end="201:23">auto</name></type> <name pos:start="201:25" pos:end="201:25">j</name> <range pos:start="201:27" pos:end="201:43">: <expr pos:start="201:29" pos:end="201:43"><name pos:start="201:29" pos:end="201:43"><name pos:start="201:29" pos:end="201:29">i</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:37">second</name><operator pos:start="201:38" pos:end="201:38">.</operator><name pos:start="201:39" pos:end="201:43">first</name></name></expr></range></decl></init>)</control> <block pos:start="201:46" pos:end="201:80">{<block_content pos:start="201:48" pos:end="201:78"> <expr_stmt pos:start="201:48" pos:end="201:78"><expr pos:start="201:48" pos:end="201:77"><name pos:start="201:48" pos:end="201:58">badPairWarn</name> <operator pos:start="201:60" pos:end="201:61">+=</operator> <literal type="string" pos:start="201:63" pos:end="201:66">"\t"</literal> <operator pos:start="201:68" pos:end="201:68">+</operator> <name pos:start="201:70" pos:end="201:70">j</name> <operator pos:start="201:72" pos:end="201:72">+</operator> <literal type="string" pos:start="201:74" pos:end="201:77">"\n"</literal></expr>;</expr_stmt> </block_content>}</block></for> </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="202:9" pos:end="202:38"><expr pos:start="202:9" pos:end="202:37"><call pos:start="202:9" pos:end="202:37"><name pos:start="202:9" pos:end="202:35"><name pos:start="202:9" pos:end="202:20">QApplication</name><operator pos:start="202:21" pos:end="202:22">::</operator><name pos:start="202:23" pos:end="202:35">processEvents</name></name><argument_list pos:start="202:36" pos:end="202:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <emit pos:start="205:5" pos:end="205:27">emit <expr pos:start="205:10" pos:end="205:26"><call pos:start="205:10" pos:end="205:26"><name pos:start="205:10" pos:end="205:24">stopProgressBar</name><argument_list pos:start="205:25" pos:end="205:26">()</argument_list></call></expr>;</emit>

    <decl_stmt pos:start="207:5" pos:end="207:17"><decl pos:start="207:5" pos:end="207:16"><type pos:start="207:5" pos:end="207:11"><name pos:start="207:5" pos:end="207:11">QString</name></type> <name pos:start="207:13" pos:end="207:16">warn</name></decl>;</decl_stmt>
    <if_stmt pos:start="208:5" pos:end="208:117"><if pos:start="208:5" pos:end="208:117">if<condition pos:start="208:7" pos:end="208:25">(<expr pos:start="208:8" pos:end="208:24"><name pos:start="208:8" pos:end="208:18">badPairWarn</name> <operator pos:start="208:20" pos:end="208:21">!=</operator> <literal type="string" pos:start="208:23" pos:end="208:24">""</literal></expr>)</condition> <block pos:start="208:27" pos:end="208:117">{<block_content pos:start="208:29" pos:end="208:115"> <expr_stmt pos:start="208:29" pos:end="208:115"><expr pos:start="208:29" pos:end="208:114"><name pos:start="208:29" pos:end="208:32">warn</name> <operator pos:start="208:34" pos:end="208:35">+=</operator> <literal type="string" pos:start="208:37" pos:end="208:100">"The following files were missing their associated pair file:\n"</literal> <operator pos:start="208:102" pos:end="208:102">+</operator> <name pos:start="208:104" pos:end="208:114">badPairWarn</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="209:5" pos:end="209:102"><if pos:start="209:5" pos:end="209:102">if<condition pos:start="209:7" pos:end="209:27">(<expr pos:start="209:8" pos:end="209:26"><name pos:start="209:8" pos:end="209:20">alreadyInWarn</name> <operator pos:start="209:22" pos:end="209:23">!=</operator> <literal type="string" pos:start="209:25" pos:end="209:26">""</literal></expr>)</condition> <block pos:start="209:29" pos:end="209:102">{<block_content pos:start="209:31" pos:end="209:100"> <expr_stmt pos:start="209:31" pos:end="209:100"><expr pos:start="209:31" pos:end="209:99"><name pos:start="209:31" pos:end="209:34">warn</name> <operator pos:start="209:36" pos:end="209:37">+=</operator> <literal type="string" pos:start="209:39" pos:end="209:83">"The following files are already imported:\n"</literal> <operator pos:start="209:85" pos:end="209:85">+</operator> <name pos:start="209:87" pos:end="209:99">alreadyInWarn</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="210:5" pos:end="213:5"><if pos:start="210:5" pos:end="213:5">if<condition pos:start="210:7" pos:end="210:18">(<expr pos:start="210:8" pos:end="210:17"><name pos:start="210:8" pos:end="210:11">warn</name> <operator pos:start="210:13" pos:end="210:14">!=</operator> <literal type="string" pos:start="210:16" pos:end="210:17">""</literal></expr>)</condition> <block pos:start="210:20" pos:end="213:5">{<block_content pos:start="211:9" pos:end="212:46">
        <expr_stmt pos:start="211:9" pos:end="211:65"><expr pos:start="211:9" pos:end="211:64"><call pos:start="211:9" pos:end="211:64"><name pos:start="211:9" pos:end="211:22"><name pos:start="211:9" pos:end="211:11">log</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:22">writeLine</name></name><argument_list pos:start="211:23" pos:end="211:64">(<argument pos:start="211:24" pos:end="211:30"><expr pos:start="211:24" pos:end="211:30"><literal type="string" pos:start="211:24" pos:end="211:30">"ERROR"</literal></expr></argument>,<argument pos:start="211:32" pos:end="211:63"><expr pos:start="211:32" pos:end="211:63"><literal type="string" pos:start="211:32" pos:end="211:58">"Batch XML Import Errors: "</literal><operator pos:start="211:59" pos:end="211:59">+</operator><name pos:start="211:60" pos:end="211:63">warn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="212:9" pos:end="212:46">emit <expr pos:start="212:14" pos:end="212:45"><call pos:start="212:14" pos:end="212:45"><name pos:start="212:14" pos:end="212:20">warning</name><argument_list pos:start="212:21" pos:end="212:45">(<argument pos:start="212:22" pos:end="212:39"><expr pos:start="212:22" pos:end="212:39"><literal type="string" pos:start="212:22" pos:end="212:39">"XML Import Error"</literal></expr></argument>,<argument pos:start="212:41" pos:end="212:44"><expr pos:start="212:41" pos:end="212:44"><name pos:start="212:41" pos:end="212:44">warn</name></expr></argument>)</argument_list></call></expr>;</emit>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function pos:start="216:1" pos:end="306:1"><type pos:start="216:1" pos:end="216:4"><name pos:start="216:1" pos:end="216:4">void</name></type> <name pos:start="216:6" pos:end="216:30"><name pos:start="216:6" pos:end="216:15">Controller</name><operator pos:start="216:16" pos:end="216:17">::</operator><name pos:start="216:18" pos:end="216:30">importCoreXML</name></name><parameter_list pos:start="216:31" pos:end="216:56">(<parameter pos:start="216:32" pos:end="216:55"><decl pos:start="216:32" pos:end="216:55"><type pos:start="216:32" pos:end="216:45"><specifier pos:start="216:32" pos:end="216:36">const</specifier> <name pos:start="216:38" pos:end="216:44">QString</name><modifier pos:start="216:45" pos:end="216:45">&amp;</modifier></type> <name pos:start="216:47" pos:end="216:55">file_path</name></decl></parameter>)</parameter_list> <block pos:start="216:58" pos:end="306:1">{<block_content pos:start="217:5" pos:end="304:109">
    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if<condition pos:start="217:7" pos:end="217:29">(<expr pos:start="217:8" pos:end="217:28"><operator pos:start="217:8" pos:end="217:8">!</operator><call pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:26"><name pos:start="217:9" pos:end="217:11">idb</name><operator pos:start="217:12" pos:end="217:12">.</operator><name pos:start="217:13" pos:end="217:26">isDatabaseOpen</name></name><argument_list pos:start="217:27" pos:end="217:28">()</argument_list></call></expr>)</condition> <block pos:start="217:31" pos:end="221:5">{<block_content pos:start="218:9" pos:end="220:15">
        <expr_stmt pos:start="218:9" pos:end="218:72"><expr pos:start="218:9" pos:end="218:71"><call pos:start="218:9" pos:end="218:71"><name pos:start="218:9" pos:end="218:22"><name pos:start="218:9" pos:end="218:11">log</name><operator pos:start="218:12" pos:end="218:13">-&gt;</operator><name pos:start="218:14" pos:end="218:22">writeLine</name></name><argument_list pos:start="218:23" pos:end="218:71">(<argument pos:start="218:24" pos:end="218:30"><expr pos:start="218:24" pos:end="218:30"><literal type="string" pos:start="218:24" pos:end="218:30">"ERROR"</literal></expr></argument>,<argument pos:start="218:32" pos:end="218:70"><expr pos:start="218:32" pos:end="218:70"><literal type="string" pos:start="218:32" pos:end="218:70">"Database not opened: Core File import"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="219:9" pos:end="219:80">emit <expr pos:start="219:14" pos:end="219:79"><call pos:start="219:14" pos:end="219:79"><name pos:start="219:14" pos:end="219:20">warning</name><argument_list pos:start="219:21" pos:end="219:79">(<argument pos:start="219:22" pos:end="219:37"><expr pos:start="219:22" pos:end="219:37"><literal type="string" pos:start="219:22" pos:end="219:37">"Database Error"</literal></expr></argument>,<argument pos:start="219:39" pos:end="219:78"><expr pos:start="219:39" pos:end="219:78"><literal type="string" pos:start="219:39" pos:end="219:78">"There is no Database currently loaded."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="220:9" pos:end="220:15">return;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="223:5" pos:end="223:70">//log-&gt;writeLine("INFO","Importing iTrace Core file: "+file_path);</comment>

    <decl_stmt pos:start="225:5" pos:end="225:23"><decl pos:start="225:5" pos:end="225:22"><type pos:start="225:5" pos:end="225:17"><name pos:start="225:5" pos:end="225:17">QElapsedTimer</name></type> <name pos:start="225:19" pos:end="225:22">time</name></decl>;</decl_stmt>
    <expr_stmt pos:start="226:5" pos:end="226:17"><expr pos:start="226:5" pos:end="226:16"><call pos:start="226:5" pos:end="226:16"><name pos:start="226:5" pos:end="226:14"><name pos:start="226:5" pos:end="226:8">time</name><operator pos:start="226:9" pos:end="226:9">.</operator><name pos:start="226:10" pos:end="226:14">start</name></name><argument_list pos:start="226:15" pos:end="226:16">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="228:5" pos:end="228:36"><decl pos:start="228:5" pos:end="228:35"><type pos:start="228:5" pos:end="228:14"><name pos:start="228:5" pos:end="228:14">XMLHandler</name></type> <name pos:start="228:16" pos:end="228:24">core_file</name><argument_list pos:start="228:25" pos:end="228:35">(<argument pos:start="228:26" pos:end="228:34"><expr pos:start="228:26" pos:end="228:34"><name pos:start="228:26" pos:end="228:34">file_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt pos:start="230:5" pos:end="230:27"><expr pos:start="230:5" pos:end="230:26"><call pos:start="230:5" pos:end="230:26"><name pos:start="230:5" pos:end="230:24"><name pos:start="230:5" pos:end="230:7">idb</name><operator pos:start="230:8" pos:end="230:8">.</operator><name pos:start="230:9" pos:end="230:24">startTransaction</name></name><argument_list pos:start="230:25" pos:end="230:26">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="232:5" pos:end="239:33"><decl pos:start="232:5" pos:end="232:22"><type pos:start="232:5" pos:end="232:11"><name pos:start="232:5" pos:end="232:11">QString</name></type> <name pos:start="232:13" pos:end="232:22">session_id</name></decl>,
            <decl pos:start="233:13" pos:end="233:26"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="233:13" pos:end="233:26">participant_id</name></decl>,
            <decl pos:start="234:13" pos:end="234:21"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="234:13" pos:end="234:21">task_name</name></decl>,
            <decl pos:start="235:13" pos:end="235:29"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="235:13" pos:end="235:29">session_date_time</name></decl>,
            <decl pos:start="236:13" pos:end="236:33"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="236:13" pos:end="236:26">calibration_id</name> <init pos:start="236:28" pos:end="236:33">= <expr pos:start="236:30" pos:end="236:33"><literal type="string" pos:start="236:30" pos:end="236:33">"-1"</literal></expr></init></decl>,
            <decl pos:start="237:13" pos:end="237:25"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="237:13" pos:end="237:25">calibration_x</name></decl>,
            <decl pos:start="238:13" pos:end="238:25"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="238:13" pos:end="238:25">calibration_y</name></decl>,
            <decl pos:start="239:13" pos:end="239:32"><type ref="prev" pos:start="232:5" pos:end="232:11"/><name pos:start="239:13" pos:end="239:32">calibration_point_id</name></decl>;</decl_stmt>
    <decl_stmt pos:start="240:5" pos:end="240:32"><decl pos:start="240:5" pos:end="240:31"><type pos:start="240:5" pos:end="240:8"><name pos:start="240:5" pos:end="240:8">bool</name></type> <name pos:start="240:10" pos:end="240:24">skipCalibration</name> <init pos:start="240:26" pos:end="240:31">= <expr pos:start="240:28" pos:end="240:31"><literal type="boolean" pos:start="240:28" pos:end="240:31">true</literal></expr></init></decl>;</decl_stmt>

    <while pos:start="242:5" pos:end="297:5">while<condition pos:start="242:10" pos:end="242:31">(<expr pos:start="242:11" pos:end="242:30"><operator pos:start="242:11" pos:end="242:11">!</operator><call pos:start="242:12" pos:end="242:30"><name pos:start="242:12" pos:end="242:28"><name pos:start="242:12" pos:end="242:20">core_file</name><operator pos:start="242:21" pos:end="242:21">.</operator><name pos:start="242:22" pos:end="242:28">isAtEnd</name></name><argument_list pos:start="242:29" pos:end="242:30">()</argument_list></call></expr>)</condition> <block pos:start="242:33" pos:end="297:5">{<block_content pos:start="243:9" pos:end="296:38">
        <decl_stmt pos:start="243:9" pos:end="243:57"><decl pos:start="243:9" pos:end="243:56"><type pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:15">QString</name></type> <name pos:start="243:17" pos:end="243:23">element</name> <init pos:start="243:25" pos:end="243:56">= <expr pos:start="243:27" pos:end="243:56"><call pos:start="243:27" pos:end="243:56"><name pos:start="243:27" pos:end="243:54"><name pos:start="243:27" pos:end="243:35">core_file</name><operator pos:start="243:36" pos:end="243:36">.</operator><name pos:start="243:37" pos:end="243:54">getNextElementName</name></name><argument_list pos:start="243:55" pos:end="243:56">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="245:9" pos:end="287:9"><if pos:start="245:9" pos:end="258:9">if<condition pos:start="245:11" pos:end="245:36">(<expr pos:start="245:12" pos:end="245:35"><name pos:start="245:12" pos:end="245:18">element</name> <operator pos:start="245:20" pos:end="245:21">==</operator> <literal type="string" pos:start="245:23" pos:end="245:35">"itrace_core"</literal></expr>)</condition> <block pos:start="245:38" pos:end="258:9">{<block_content pos:start="246:13" pos:end="257:174">
            <expr_stmt pos:start="246:13" pos:end="246:69"><expr pos:start="246:13" pos:end="246:68"><name pos:start="246:13" pos:end="246:22">session_id</name> <operator pos:start="246:24" pos:end="246:24">=</operator> <call pos:start="246:26" pos:end="246:68"><name pos:start="246:26" pos:end="246:54"><name pos:start="246:26" pos:end="246:34">core_file</name><operator pos:start="246:35" pos:end="246:35">.</operator><name pos:start="246:36" pos:end="246:54">getElementAttribute</name></name><argument_list pos:start="246:55" pos:end="246:68">(<argument pos:start="246:56" pos:end="246:67"><expr pos:start="246:56" pos:end="246:67"><literal type="string" pos:start="246:56" pos:end="246:67">"session_id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="247:13" pos:end="247:77"><expr pos:start="247:13" pos:end="247:76"><name pos:start="247:13" pos:end="247:26">participant_id</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <call pos:start="247:30" pos:end="247:76"><name pos:start="247:30" pos:end="247:58"><name pos:start="247:30" pos:end="247:38">core_file</name><operator pos:start="247:39" pos:end="247:39">.</operator><name pos:start="247:40" pos:end="247:58">getElementAttribute</name></name><argument_list pos:start="247:59" pos:end="247:76">(<argument pos:start="247:60" pos:end="247:75"><expr pos:start="247:60" pos:end="247:75"><literal type="string" pos:start="247:60" pos:end="247:75">"participant_id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="248:13" pos:end="248:67"><expr pos:start="248:13" pos:end="248:66"><name pos:start="248:13" pos:end="248:21">task_name</name> <operator pos:start="248:23" pos:end="248:23">=</operator> <call pos:start="248:25" pos:end="248:66"><name pos:start="248:25" pos:end="248:53"><name pos:start="248:25" pos:end="248:33">core_file</name><operator pos:start="248:34" pos:end="248:34">.</operator><name pos:start="248:35" pos:end="248:53">getElementAttribute</name></name><argument_list pos:start="248:54" pos:end="248:66">(<argument pos:start="248:55" pos:end="248:65"><expr pos:start="248:55" pos:end="248:65"><literal type="string" pos:start="248:55" pos:end="248:65">"task_name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="249:13" pos:end="249:83"><expr pos:start="249:13" pos:end="249:82"><name pos:start="249:13" pos:end="249:29">session_date_time</name> <operator pos:start="249:31" pos:end="249:31">=</operator> <call pos:start="249:33" pos:end="249:82"><name pos:start="249:33" pos:end="249:61"><name pos:start="249:33" pos:end="249:41">core_file</name><operator pos:start="249:42" pos:end="249:42">.</operator><name pos:start="249:43" pos:end="249:61">getElementAttribute</name></name><argument_list pos:start="249:62" pos:end="249:82">(<argument pos:start="249:63" pos:end="249:81"><expr pos:start="249:63" pos:end="249:81"><literal type="string" pos:start="249:63" pos:end="249:81">"session_date_time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="251:13" pos:end="251:66">// Insert participant only if it doesn't already exist</comment>
            <if_stmt pos:start="252:13" pos:end="254:13"><if pos:start="252:13" pos:end="254:13">if<condition pos:start="252:15" pos:end="252:54">(<expr pos:start="252:16" pos:end="252:53"><operator pos:start="252:16" pos:end="252:16">!</operator><call pos:start="252:17" pos:end="252:53"><name pos:start="252:17" pos:end="252:37"><name pos:start="252:17" pos:end="252:19">idb</name><operator pos:start="252:20" pos:end="252:20">.</operator><name pos:start="252:21" pos:end="252:37">participantExists</name></name><argument_list pos:start="252:38" pos:end="252:53">(<argument pos:start="252:39" pos:end="252:52"><expr pos:start="252:39" pos:end="252:52"><name pos:start="252:39" pos:end="252:52">participant_id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="252:56" pos:end="254:13">{<block_content pos:start="253:17" pos:end="253:61">
                <expr_stmt pos:start="253:17" pos:end="253:61"><expr pos:start="253:17" pos:end="253:60"><call pos:start="253:17" pos:end="253:60"><name pos:start="253:17" pos:end="253:37"><name pos:start="253:17" pos:end="253:19">idb</name><operator pos:start="253:20" pos:end="253:20">.</operator><name pos:start="253:21" pos:end="253:37">insertParticipant</name></name><argument_list pos:start="253:38" pos:end="253:60">(<argument pos:start="253:39" pos:end="253:52"><expr pos:start="253:39" pos:end="253:52"><name pos:start="253:39" pos:end="253:52">participant_id</name></expr></argument>,<argument pos:start="253:54" pos:end="253:59"><expr pos:start="253:54" pos:end="253:59"><literal type="string" pos:start="253:54" pos:end="253:59">"null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="253:63" pos:end="253:98">// The null may change in the future</comment>
            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="256:13" pos:end="256:26">// Insert file</comment>
            <expr_stmt pos:start="257:13" pos:end="257:174"><expr pos:start="257:13" pos:end="257:173"><call pos:start="257:13" pos:end="257:173"><name pos:start="257:13" pos:end="257:26"><name pos:start="257:13" pos:end="257:15">idb</name><operator pos:start="257:16" pos:end="257:16">.</operator><name pos:start="257:17" pos:end="257:26">insertFile</name></name><argument_list pos:start="257:27" pos:end="257:173">(<argument pos:start="257:28" pos:end="257:130"><expr pos:start="257:28" pos:end="257:130"><call pos:start="257:28" pos:end="257:122"><name pos:start="257:28" pos:end="257:51"><name pos:start="257:28" pos:end="257:45">QCryptographicHash</name><operator pos:start="257:46" pos:end="257:47">::</operator><name pos:start="257:48" pos:end="257:51">hash</name></name><argument_list pos:start="257:52" pos:end="257:122">(<argument pos:start="257:53" pos:end="257:96"><expr pos:start="257:53" pos:end="257:96"><call pos:start="257:53" pos:end="257:75"><name pos:start="257:53" pos:end="257:73"><name pos:start="257:53" pos:end="257:61">core_file</name><operator pos:start="257:62" pos:end="257:62">.</operator><name pos:start="257:63" pos:end="257:73">getFilePath</name></name><argument_list pos:start="257:74" pos:end="257:75">()</argument_list></call><operator pos:start="257:76" pos:end="257:76">.</operator><call pos:start="257:77" pos:end="257:84"><name pos:start="257:77" pos:end="257:82">toUtf8</name><argument_list pos:start="257:83" pos:end="257:84">()</argument_list></call><operator pos:start="257:85" pos:end="257:85">.</operator><call pos:start="257:86" pos:end="257:96"><name pos:start="257:86" pos:end="257:94">constData</name><argument_list pos:start="257:95" pos:end="257:96">()</argument_list></call></expr></argument>,<argument pos:start="257:98" pos:end="257:121"><expr pos:start="257:98" pos:end="257:121"><name pos:start="257:98" pos:end="257:121"><name pos:start="257:98" pos:end="257:115">QCryptographicHash</name><operator pos:start="257:116" pos:end="257:117">::</operator><name pos:start="257:118" pos:end="257:121">Sha1</name></name></expr></argument>)</argument_list></call><operator pos:start="257:123" pos:end="257:123">.</operator><call pos:start="257:124" pos:end="257:130"><name pos:start="257:124" pos:end="257:128">toHex</name><argument_list pos:start="257:129" pos:end="257:130">()</argument_list></call></expr></argument>,<argument pos:start="257:132" pos:end="257:141"><expr pos:start="257:132" pos:end="257:141"><name pos:start="257:132" pos:end="257:141">session_id</name></expr></argument>,<argument pos:start="257:143" pos:end="257:165"><expr pos:start="257:143" pos:end="257:165"><call pos:start="257:143" pos:end="257:165"><name pos:start="257:143" pos:end="257:163"><name pos:start="257:143" pos:end="257:151">core_file</name><operator pos:start="257:152" pos:end="257:152">.</operator><name pos:start="257:153" pos:end="257:163">getFilePath</name></name><argument_list pos:start="257:164" pos:end="257:165">()</argument_list></call></expr></argument>,<argument pos:start="257:167" pos:end="257:172"><expr pos:start="257:167" pos:end="257:172"><literal type="string" pos:start="257:167" pos:end="257:172">"core"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="259:9" pos:end="262:9">else if<condition pos:start="259:16" pos:end="259:41">(<expr pos:start="259:17" pos:end="259:40"><name pos:start="259:17" pos:end="259:23">element</name> <operator pos:start="259:25" pos:end="259:26">==</operator> <literal type="string" pos:start="259:28" pos:end="259:40">"environment"</literal></expr>)</condition> <block pos:start="259:43" pos:end="262:9">{<block_content pos:start="261:13" pos:end="261:353">
            <comment type="line" pos:start="260:13" pos:end="260:29">// Insert session</comment>
            <expr_stmt pos:start="261:13" pos:end="261:353"><expr pos:start="261:13" pos:end="261:352"><call pos:start="261:13" pos:end="261:352"><name pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:15">idb</name><operator pos:start="261:16" pos:end="261:16">.</operator><name pos:start="261:17" pos:end="261:29">insertSession</name></name><argument_list pos:start="261:30" pos:end="261:352">(<argument pos:start="261:31" pos:end="261:40"><expr pos:start="261:31" pos:end="261:40"><name pos:start="261:31" pos:end="261:40">session_id</name></expr></argument>,<argument pos:start="261:42" pos:end="261:55"><expr pos:start="261:42" pos:end="261:55"><name pos:start="261:42" pos:end="261:55">participant_id</name></expr></argument>,<argument pos:start="261:57" pos:end="261:101"><expr pos:start="261:57" pos:end="261:101"><call pos:start="261:57" pos:end="261:101"><name pos:start="261:57" pos:end="261:85"><name pos:start="261:57" pos:end="261:65">core_file</name><operator pos:start="261:66" pos:end="261:66">.</operator><name pos:start="261:67" pos:end="261:85">getElementAttribute</name></name><argument_list pos:start="261:86" pos:end="261:101">(<argument pos:start="261:87" pos:end="261:100"><expr pos:start="261:87" pos:end="261:100"><literal type="string" pos:start="261:87" pos:end="261:100">"screen_width"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:103" pos:end="261:148"><expr pos:start="261:103" pos:end="261:148"><call pos:start="261:103" pos:end="261:148"><name pos:start="261:103" pos:end="261:131"><name pos:start="261:103" pos:end="261:111">core_file</name><operator pos:start="261:112" pos:end="261:112">.</operator><name pos:start="261:113" pos:end="261:131">getElementAttribute</name></name><argument_list pos:start="261:132" pos:end="261:148">(<argument pos:start="261:133" pos:end="261:147"><expr pos:start="261:133" pos:end="261:147"><literal type="string" pos:start="261:133" pos:end="261:147">"screen_height"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:150" pos:end="261:194"><expr pos:start="261:150" pos:end="261:194"><call pos:start="261:150" pos:end="261:194"><name pos:start="261:150" pos:end="261:178"><name pos:start="261:150" pos:end="261:158">core_file</name><operator pos:start="261:159" pos:end="261:159">.</operator><name pos:start="261:160" pos:end="261:178">getElementAttribute</name></name><argument_list pos:start="261:179" pos:end="261:194">(<argument pos:start="261:180" pos:end="261:193"><expr pos:start="261:180" pos:end="261:193"><literal type="string" pos:start="261:180" pos:end="261:193">"tracker_type"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:196" pos:end="261:249"><expr pos:start="261:196" pos:end="261:249"><call pos:start="261:196" pos:end="261:249"><name pos:start="261:196" pos:end="261:224"><name pos:start="261:196" pos:end="261:204">core_file</name><operator pos:start="261:205" pos:end="261:205">.</operator><name pos:start="261:206" pos:end="261:224">getElementAttribute</name></name><argument_list pos:start="261:225" pos:end="261:249">(<argument pos:start="261:226" pos:end="261:248"><expr pos:start="261:226" pos:end="261:248"><literal type="string" pos:start="261:226" pos:end="261:248">"tracker_serial_number"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:251" pos:end="261:267"><expr pos:start="261:251" pos:end="261:267"><name pos:start="261:251" pos:end="261:267">session_date_time</name></expr></argument>,<argument pos:start="261:269" pos:end="261:285"><expr pos:start="261:269" pos:end="261:285"><name pos:start="261:269" pos:end="261:285">session_date_time</name></expr></argument>,<argument pos:start="261:287" pos:end="261:341"><expr pos:start="261:287" pos:end="261:341"><call pos:start="261:287" pos:end="261:341"><name pos:start="261:287" pos:end="261:315"><name pos:start="261:287" pos:end="261:295">core_file</name><operator pos:start="261:296" pos:end="261:296">.</operator><name pos:start="261:297" pos:end="261:315">getElementAttribute</name></name><argument_list pos:start="261:316" pos:end="261:341">(<argument pos:start="261:317" pos:end="261:340"><expr pos:start="261:317" pos:end="261:340"><literal type="string" pos:start="261:317" pos:end="261:340">"screen_recording_start"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="261:343" pos:end="261:351"><expr pos:start="261:343" pos:end="261:351"><name pos:start="261:343" pos:end="261:351">task_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="263:9" pos:end="271:9">else if<condition pos:start="263:16" pos:end="263:41">(<expr pos:start="263:17" pos:end="263:40"><name pos:start="263:17" pos:end="263:23">element</name> <operator pos:start="263:25" pos:end="263:26">==</operator> <literal type="string" pos:start="263:28" pos:end="263:40">"calibration"</literal></expr>)</condition> <block pos:start="263:43" pos:end="271:9">{<block_content pos:start="264:13" pos:end="270:44">
            <expr_stmt pos:start="264:13" pos:end="264:72"><expr pos:start="264:13" pos:end="264:71"><name pos:start="264:13" pos:end="264:26">calibration_id</name> <operator pos:start="264:28" pos:end="264:28">=</operator> <call pos:start="264:30" pos:end="264:71"><name pos:start="264:30" pos:end="264:58"><name pos:start="264:30" pos:end="264:38">core_file</name><operator pos:start="264:39" pos:end="264:39">.</operator><name pos:start="264:40" pos:end="264:58">getElementAttribute</name></name><argument_list pos:start="264:59" pos:end="264:71">(<argument pos:start="264:60" pos:end="264:70"><expr pos:start="264:60" pos:end="264:70"><literal type="string" pos:start="264:60" pos:end="264:70">"timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="265:13" pos:end="270:44"><if pos:start="265:13" pos:end="269:13">if<condition pos:start="265:15" pos:end="265:54">(<expr pos:start="265:16" pos:end="265:53"><operator pos:start="265:16" pos:end="265:16">!</operator><call pos:start="265:17" pos:end="265:53"><name pos:start="265:17" pos:end="265:37"><name pos:start="265:17" pos:end="265:19">idb</name><operator pos:start="265:20" pos:end="265:20">.</operator><name pos:start="265:21" pos:end="265:37">calibrationExists</name></name><argument_list pos:start="265:38" pos:end="265:53">(<argument pos:start="265:39" pos:end="265:52"><expr pos:start="265:39" pos:end="265:52"><name pos:start="265:39" pos:end="265:52">calibration_id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="265:56" pos:end="269:13">{<block_content pos:start="267:17" pos:end="268:40">
                <comment type="line" pos:start="266:17" pos:end="266:37">// Insert calibration</comment>
                <expr_stmt pos:start="267:17" pos:end="267:54"><expr pos:start="267:17" pos:end="267:53"><call pos:start="267:17" pos:end="267:53"><name pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:19">idb</name><operator pos:start="267:20" pos:end="267:20">.</operator><name pos:start="267:21" pos:end="267:37">insertCalibration</name></name><argument_list pos:start="267:38" pos:end="267:53">(<argument pos:start="267:39" pos:end="267:52"><expr pos:start="267:39" pos:end="267:52"><name pos:start="267:39" pos:end="267:52">calibration_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="268:17" pos:end="268:40"><expr pos:start="268:17" pos:end="268:39"><name pos:start="268:17" pos:end="268:31">skipCalibration</name> <operator pos:start="268:33" pos:end="268:33">=</operator> <literal type="boolean" pos:start="268:35" pos:end="268:39">false</literal></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="270:13" pos:end="270:44">else <block pos:start="270:18" pos:end="270:44">{<block_content pos:start="270:20" pos:end="270:42"> <expr_stmt pos:start="270:20" pos:end="270:42"><expr pos:start="270:20" pos:end="270:41"><name pos:start="270:20" pos:end="270:34">skipCalibration</name> <operator pos:start="270:36" pos:end="270:36">=</operator> <literal type="boolean" pos:start="270:38" pos:end="270:41">true</literal></expr>;</expr_stmt> </block_content>}</block></else></if_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="272:9" pos:end="279:9">else if<condition pos:start="272:16" pos:end="272:67">(<expr pos:start="272:17" pos:end="272:66"><name pos:start="272:17" pos:end="272:23">element</name> <operator pos:start="272:25" pos:end="272:26">==</operator> <literal type="string" pos:start="272:28" pos:end="272:46">"calibration_point"</literal> <operator pos:start="272:48" pos:end="272:49">&amp;&amp;</operator> <operator pos:start="272:51" pos:end="272:51">!</operator><name pos:start="272:52" pos:end="272:66">skipCalibration</name></expr>)</condition> <block pos:start="272:69" pos:end="279:9">{<block_content pos:start="274:13" pos:end="278:104">
            <comment type="line" pos:start="273:13" pos:end="273:97">// Ternary operators convert "0" to "0.0" for better formating and consistent hashing</comment>
            <expr_stmt pos:start="274:13" pos:end="274:115"><expr pos:start="274:13" pos:end="274:114"><name pos:start="274:13" pos:end="274:25">calibration_x</name> <operator pos:start="274:27" pos:end="274:27">=</operator> <ternary pos:start="274:29" pos:end="274:114"><condition pos:start="274:29" pos:end="274:71"><expr pos:start="274:29" pos:end="274:69"><call pos:start="274:29" pos:end="274:62"><name pos:start="274:29" pos:end="274:57"><name pos:start="274:29" pos:end="274:37">core_file</name><operator pos:start="274:38" pos:end="274:38">.</operator><name pos:start="274:39" pos:end="274:57">getElementAttribute</name></name><argument_list pos:start="274:58" pos:end="274:62">(<argument pos:start="274:59" pos:end="274:61"><expr pos:start="274:59" pos:end="274:61"><literal type="string" pos:start="274:59" pos:end="274:61">"x"</literal></expr></argument>)</argument_list></call> <operator pos:start="274:64" pos:end="274:65">==</operator> <literal type="string" pos:start="274:67" pos:end="274:69">"0"</literal></expr> ?</condition><then pos:start="274:73" pos:end="274:77"> <expr pos:start="274:73" pos:end="274:77"><literal type="string" pos:start="274:73" pos:end="274:77">"0.0"</literal></expr> </then><else pos:start="274:79" pos:end="274:114">: <expr pos:start="274:81" pos:end="274:114"><call pos:start="274:81" pos:end="274:114"><name pos:start="274:81" pos:end="274:109"><name pos:start="274:81" pos:end="274:89">core_file</name><operator pos:start="274:90" pos:end="274:90">.</operator><name pos:start="274:91" pos:end="274:109">getElementAttribute</name></name><argument_list pos:start="274:110" pos:end="274:114">(<argument pos:start="274:111" pos:end="274:113"><expr pos:start="274:111" pos:end="274:113"><literal type="string" pos:start="274:111" pos:end="274:113">"x"</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="275:13" pos:end="275:115"><expr pos:start="275:13" pos:end="275:114"><name pos:start="275:13" pos:end="275:25">calibration_y</name> <operator pos:start="275:27" pos:end="275:27">=</operator> <ternary pos:start="275:29" pos:end="275:114"><condition pos:start="275:29" pos:end="275:71"><expr pos:start="275:29" pos:end="275:69"><call pos:start="275:29" pos:end="275:62"><name pos:start="275:29" pos:end="275:57"><name pos:start="275:29" pos:end="275:37">core_file</name><operator pos:start="275:38" pos:end="275:38">.</operator><name pos:start="275:39" pos:end="275:57">getElementAttribute</name></name><argument_list pos:start="275:58" pos:end="275:62">(<argument pos:start="275:59" pos:end="275:61"><expr pos:start="275:59" pos:end="275:61"><literal type="string" pos:start="275:59" pos:end="275:61">"y"</literal></expr></argument>)</argument_list></call> <operator pos:start="275:64" pos:end="275:65">==</operator> <literal type="string" pos:start="275:67" pos:end="275:69">"0"</literal></expr> ?</condition><then pos:start="275:73" pos:end="275:77"> <expr pos:start="275:73" pos:end="275:77"><literal type="string" pos:start="275:73" pos:end="275:77">"0.0"</literal></expr> </then><else pos:start="275:79" pos:end="275:114">: <expr pos:start="275:81" pos:end="275:114"><call pos:start="275:81" pos:end="275:114"><name pos:start="275:81" pos:end="275:109"><name pos:start="275:81" pos:end="275:89">core_file</name><operator pos:start="275:90" pos:end="275:90">.</operator><name pos:start="275:91" pos:end="275:109">getElementAttribute</name></name><argument_list pos:start="275:110" pos:end="275:114">(<argument pos:start="275:111" pos:end="275:113"><expr pos:start="275:111" pos:end="275:113"><literal type="string" pos:start="275:111" pos:end="275:113">"y"</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="276:13" pos:end="276:160"><expr pos:start="276:13" pos:end="276:159"><name pos:start="276:13" pos:end="276:32">calibration_point_id</name> <operator pos:start="276:34" pos:end="276:34">=</operator> <call pos:start="276:36" pos:end="276:151"><name pos:start="276:36" pos:end="276:59"><name pos:start="276:36" pos:end="276:53">QCryptographicHash</name><operator pos:start="276:54" pos:end="276:55">::</operator><name pos:start="276:56" pos:end="276:59">hash</name></name><argument_list pos:start="276:60" pos:end="276:151">(<argument pos:start="276:61" pos:end="276:125"><expr pos:start="276:61" pos:end="276:125"><operator pos:start="276:61" pos:end="276:61">(</operator><name pos:start="276:62" pos:end="276:75">calibration_id</name><operator pos:start="276:76" pos:end="276:76">+</operator><name pos:start="276:77" pos:end="276:89">calibration_x</name><operator pos:start="276:90" pos:end="276:90">+</operator><name pos:start="276:91" pos:end="276:103">calibration_y</name><operator pos:start="276:104" pos:end="276:104">)</operator><operator pos:start="276:105" pos:end="276:105">.</operator><call pos:start="276:106" pos:end="276:113"><name pos:start="276:106" pos:end="276:111">toUtf8</name><argument_list pos:start="276:112" pos:end="276:113">()</argument_list></call><operator pos:start="276:114" pos:end="276:114">.</operator><call pos:start="276:115" pos:end="276:125"><name pos:start="276:115" pos:end="276:123">constData</name><argument_list pos:start="276:124" pos:end="276:125">()</argument_list></call></expr></argument>,<argument pos:start="276:127" pos:end="276:150"><expr pos:start="276:127" pos:end="276:150"><name pos:start="276:127" pos:end="276:150"><name pos:start="276:127" pos:end="276:144">QCryptographicHash</name><operator pos:start="276:145" pos:end="276:146">::</operator><name pos:start="276:147" pos:end="276:150">Sha1</name></name></expr></argument>)</argument_list></call><operator pos:start="276:152" pos:end="276:152">.</operator><call pos:start="276:153" pos:end="276:159"><name pos:start="276:153" pos:end="276:157">toHex</name><argument_list pos:start="276:158" pos:end="276:159">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="277:13" pos:end="277:39">// Insert calibration_point</comment>
            <expr_stmt pos:start="278:13" pos:end="278:104"><expr pos:start="278:13" pos:end="278:103"><call pos:start="278:13" pos:end="278:103"><name pos:start="278:13" pos:end="278:38"><name pos:start="278:13" pos:end="278:15">idb</name><operator pos:start="278:16" pos:end="278:16">.</operator><name pos:start="278:17" pos:end="278:38">insertCalibrationPoint</name></name><argument_list pos:start="278:39" pos:end="278:103">(<argument pos:start="278:40" pos:end="278:59"><expr pos:start="278:40" pos:end="278:59"><name pos:start="278:40" pos:end="278:59">calibration_point_id</name></expr></argument>,<argument pos:start="278:61" pos:end="278:74"><expr pos:start="278:61" pos:end="278:74"><name pos:start="278:61" pos:end="278:74">calibration_id</name></expr></argument>,<argument pos:start="278:76" pos:end="278:88"><expr pos:start="278:76" pos:end="278:88"><name pos:start="278:76" pos:end="278:88">calibration_x</name></expr></argument>,<argument pos:start="278:90" pos:end="278:102"><expr pos:start="278:90" pos:end="278:102"><name pos:start="278:90" pos:end="278:102">calibration_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="280:9" pos:end="283:9">else if<condition pos:start="280:16" pos:end="280:56">(<expr pos:start="280:17" pos:end="280:55"><name pos:start="280:17" pos:end="280:23">element</name> <operator pos:start="280:25" pos:end="280:26">==</operator> <literal type="string" pos:start="280:28" pos:end="280:35">"sample"</literal> <operator pos:start="280:37" pos:end="280:38">&amp;&amp;</operator> <operator pos:start="280:40" pos:end="280:40">!</operator><name pos:start="280:41" pos:end="280:55">skipCalibration</name></expr>)</condition> <block pos:start="280:58" pos:end="283:9">{<block_content pos:start="282:13" pos:end="282:319">
            <comment type="line" pos:start="281:13" pos:end="281:40">// Insert calibration_sample</comment>
            <expr_stmt pos:start="282:13" pos:end="282:319"><expr pos:start="282:13" pos:end="282:318"><call pos:start="282:13" pos:end="282:318"><name pos:start="282:13" pos:end="282:39"><name pos:start="282:13" pos:end="282:15">idb</name><operator pos:start="282:16" pos:end="282:16">.</operator><name pos:start="282:17" pos:end="282:39">insertCalibrationSample</name></name><argument_list pos:start="282:40" pos:end="282:318">(<argument pos:start="282:41" pos:end="282:60"><expr pos:start="282:41" pos:end="282:60"><name pos:start="282:41" pos:end="282:60">calibration_point_id</name></expr></argument>,<argument pos:start="282:62" pos:end="282:100"><expr pos:start="282:62" pos:end="282:100"><call pos:start="282:62" pos:end="282:100"><name pos:start="282:62" pos:end="282:90"><name pos:start="282:62" pos:end="282:70">core_file</name><operator pos:start="282:71" pos:end="282:71">.</operator><name pos:start="282:72" pos:end="282:90">getElementAttribute</name></name><argument_list pos:start="282:91" pos:end="282:100">(<argument pos:start="282:92" pos:end="282:99"><expr pos:start="282:92" pos:end="282:99"><literal type="string" pos:start="282:92" pos:end="282:99">"left_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="282:102" pos:end="282:140"><expr pos:start="282:102" pos:end="282:140"><call pos:start="282:102" pos:end="282:140"><name pos:start="282:102" pos:end="282:130"><name pos:start="282:102" pos:end="282:110">core_file</name><operator pos:start="282:111" pos:end="282:111">.</operator><name pos:start="282:112" pos:end="282:130">getElementAttribute</name></name><argument_list pos:start="282:131" pos:end="282:140">(<argument pos:start="282:132" pos:end="282:139"><expr pos:start="282:132" pos:end="282:139"><literal type="string" pos:start="282:132" pos:end="282:139">"left_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="282:142" pos:end="282:187"><expr pos:start="282:142" pos:end="282:187"><call pos:start="282:142" pos:end="282:187"><name pos:start="282:142" pos:end="282:170"><name pos:start="282:142" pos:end="282:150">core_file</name><operator pos:start="282:151" pos:end="282:151">.</operator><name pos:start="282:152" pos:end="282:170">getElementAttribute</name></name><argument_list pos:start="282:171" pos:end="282:187">(<argument pos:start="282:172" pos:end="282:186"><expr pos:start="282:172" pos:end="282:186"><literal type="string" pos:start="282:172" pos:end="282:186">"left_validity"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="282:189" pos:end="282:228"><expr pos:start="282:189" pos:end="282:228"><call pos:start="282:189" pos:end="282:228"><name pos:start="282:189" pos:end="282:217"><name pos:start="282:189" pos:end="282:197">core_file</name><operator pos:start="282:198" pos:end="282:198">.</operator><name pos:start="282:199" pos:end="282:217">getElementAttribute</name></name><argument_list pos:start="282:218" pos:end="282:228">(<argument pos:start="282:219" pos:end="282:227"><expr pos:start="282:219" pos:end="282:227"><literal type="string" pos:start="282:219" pos:end="282:227">"right_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="282:230" pos:end="282:269"><expr pos:start="282:230" pos:end="282:269"><call pos:start="282:230" pos:end="282:269"><name pos:start="282:230" pos:end="282:258"><name pos:start="282:230" pos:end="282:238">core_file</name><operator pos:start="282:239" pos:end="282:239">.</operator><name pos:start="282:240" pos:end="282:258">getElementAttribute</name></name><argument_list pos:start="282:259" pos:end="282:269">(<argument pos:start="282:260" pos:end="282:268"><expr pos:start="282:260" pos:end="282:268"><literal type="string" pos:start="282:260" pos:end="282:268">"right_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="282:271" pos:end="282:317"><expr pos:start="282:271" pos:end="282:317"><call pos:start="282:271" pos:end="282:317"><name pos:start="282:271" pos:end="282:299"><name pos:start="282:271" pos:end="282:279">core_file</name><operator pos:start="282:280" pos:end="282:280">.</operator><name pos:start="282:281" pos:end="282:299">getElementAttribute</name></name><argument_list pos:start="282:300" pos:end="282:317">(<argument pos:start="282:301" pos:end="282:316"><expr pos:start="282:301" pos:end="282:316"><literal type="string" pos:start="282:301" pos:end="282:316">"right_validity"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="284:9" pos:end="287:9">else if<condition pos:start="284:16" pos:end="284:38">(<expr pos:start="284:17" pos:end="284:37"><name pos:start="284:17" pos:end="284:23">element</name> <operator pos:start="284:25" pos:end="284:26">==</operator> <literal type="string" pos:start="284:28" pos:end="284:37">"response"</literal></expr>)</condition> <block pos:start="284:40" pos:end="287:9">{<block_content pos:start="286:13" pos:end="286:911">
            <comment type="line" pos:start="285:13" pos:end="285:26">// Insert gaze</comment>
            <expr_stmt pos:start="286:13" pos:end="286:911"><expr pos:start="286:13" pos:end="286:910"><call pos:start="286:13" pos:end="286:910"><name pos:start="286:13" pos:end="286:26"><name pos:start="286:13" pos:end="286:15">idb</name><operator pos:start="286:16" pos:end="286:16">.</operator><name pos:start="286:17" pos:end="286:26">insertGaze</name></name><argument_list pos:start="286:27" pos:end="286:910">(<argument pos:start="286:28" pos:end="286:68"><expr pos:start="286:28" pos:end="286:68"><call pos:start="286:28" pos:end="286:68"><name pos:start="286:28" pos:end="286:56"><name pos:start="286:28" pos:end="286:36">core_file</name><operator pos:start="286:37" pos:end="286:37">.</operator><name pos:start="286:38" pos:end="286:56">getElementAttribute</name></name><argument_list pos:start="286:57" pos:end="286:68">(<argument pos:start="286:58" pos:end="286:67"><expr pos:start="286:58" pos:end="286:67"><literal type="string" pos:start="286:58" pos:end="286:67">"event_id"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:70" pos:end="286:79"><expr pos:start="286:70" pos:end="286:79"><name pos:start="286:70" pos:end="286:79">session_id</name></expr></argument>,<argument pos:start="286:81" pos:end="286:94"><expr pos:start="286:81" pos:end="286:94"><name pos:start="286:81" pos:end="286:94">calibration_id</name></expr></argument>,<argument pos:start="286:96" pos:end="286:109"><expr pos:start="286:96" pos:end="286:109"><name pos:start="286:96" pos:end="286:109">participant_id</name></expr></argument>,<argument pos:start="286:111" pos:end="286:155"><expr pos:start="286:111" pos:end="286:155"><call pos:start="286:111" pos:end="286:155"><name pos:start="286:111" pos:end="286:139"><name pos:start="286:111" pos:end="286:119">core_file</name><operator pos:start="286:120" pos:end="286:120">.</operator><name pos:start="286:121" pos:end="286:139">getElementAttribute</name></name><argument_list pos:start="286:140" pos:end="286:155">(<argument pos:start="286:141" pos:end="286:154"><expr pos:start="286:141" pos:end="286:154"><literal type="string" pos:start="286:141" pos:end="286:154">"tracker_time"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:157" pos:end="286:198"><expr pos:start="286:157" pos:end="286:198"><call pos:start="286:157" pos:end="286:198"><name pos:start="286:157" pos:end="286:185"><name pos:start="286:157" pos:end="286:165">core_file</name><operator pos:start="286:166" pos:end="286:166">.</operator><name pos:start="286:167" pos:end="286:185">getElementAttribute</name></name><argument_list pos:start="286:186" pos:end="286:198">(<argument pos:start="286:187" pos:end="286:197"><expr pos:start="286:187" pos:end="286:197"><literal type="string" pos:start="286:187" pos:end="286:197">"core_time"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:200" pos:end="286:233"><expr pos:start="286:200" pos:end="286:233"><call pos:start="286:200" pos:end="286:233"><name pos:start="286:200" pos:end="286:228"><name pos:start="286:200" pos:end="286:208">core_file</name><operator pos:start="286:209" pos:end="286:209">.</operator><name pos:start="286:210" pos:end="286:228">getElementAttribute</name></name><argument_list pos:start="286:229" pos:end="286:233">(<argument pos:start="286:230" pos:end="286:232"><expr pos:start="286:230" pos:end="286:232"><literal type="string" pos:start="286:230" pos:end="286:232">"x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:235" pos:end="286:268"><expr pos:start="286:235" pos:end="286:268"><call pos:start="286:235" pos:end="286:268"><name pos:start="286:235" pos:end="286:263"><name pos:start="286:235" pos:end="286:243">core_file</name><operator pos:start="286:244" pos:end="286:244">.</operator><name pos:start="286:245" pos:end="286:263">getElementAttribute</name></name><argument_list pos:start="286:264" pos:end="286:268">(<argument pos:start="286:265" pos:end="286:267"><expr pos:start="286:265" pos:end="286:267"><literal type="string" pos:start="286:265" pos:end="286:267">"y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:270" pos:end="286:308"><expr pos:start="286:270" pos:end="286:308"><call pos:start="286:270" pos:end="286:308"><name pos:start="286:270" pos:end="286:298"><name pos:start="286:270" pos:end="286:278">core_file</name><operator pos:start="286:279" pos:end="286:279">.</operator><name pos:start="286:280" pos:end="286:298">getElementAttribute</name></name><argument_list pos:start="286:299" pos:end="286:308">(<argument pos:start="286:300" pos:end="286:307"><expr pos:start="286:300" pos:end="286:307"><literal type="string" pos:start="286:300" pos:end="286:307">"left_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:310" pos:end="286:348"><expr pos:start="286:310" pos:end="286:348"><call pos:start="286:310" pos:end="286:348"><name pos:start="286:310" pos:end="286:338"><name pos:start="286:310" pos:end="286:318">core_file</name><operator pos:start="286:319" pos:end="286:319">.</operator><name pos:start="286:320" pos:end="286:338">getElementAttribute</name></name><argument_list pos:start="286:339" pos:end="286:348">(<argument pos:start="286:340" pos:end="286:347"><expr pos:start="286:340" pos:end="286:347"><literal type="string" pos:start="286:340" pos:end="286:347">"left_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:350" pos:end="286:401"><expr pos:start="286:350" pos:end="286:401"><call pos:start="286:350" pos:end="286:401"><name pos:start="286:350" pos:end="286:378"><name pos:start="286:350" pos:end="286:358">core_file</name><operator pos:start="286:359" pos:end="286:359">.</operator><name pos:start="286:360" pos:end="286:378">getElementAttribute</name></name><argument_list pos:start="286:379" pos:end="286:401">(<argument pos:start="286:380" pos:end="286:400"><expr pos:start="286:380" pos:end="286:400"><literal type="string" pos:start="286:380" pos:end="286:400">"left_pupil_diameter"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:403" pos:end="286:450"><expr pos:start="286:403" pos:end="286:450"><call pos:start="286:403" pos:end="286:450"><name pos:start="286:403" pos:end="286:431"><name pos:start="286:403" pos:end="286:411">core_file</name><operator pos:start="286:412" pos:end="286:412">.</operator><name pos:start="286:413" pos:end="286:431">getElementAttribute</name></name><argument_list pos:start="286:432" pos:end="286:450">(<argument pos:start="286:433" pos:end="286:449"><expr pos:start="286:433" pos:end="286:449"><literal type="string" pos:start="286:433" pos:end="286:449">"left_validation"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:452" pos:end="286:491"><expr pos:start="286:452" pos:end="286:491"><call pos:start="286:452" pos:end="286:491"><name pos:start="286:452" pos:end="286:480"><name pos:start="286:452" pos:end="286:460">core_file</name><operator pos:start="286:461" pos:end="286:461">.</operator><name pos:start="286:462" pos:end="286:480">getElementAttribute</name></name><argument_list pos:start="286:481" pos:end="286:491">(<argument pos:start="286:482" pos:end="286:490"><expr pos:start="286:482" pos:end="286:490"><literal type="string" pos:start="286:482" pos:end="286:490">"right_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:493" pos:end="286:532"><expr pos:start="286:493" pos:end="286:532"><call pos:start="286:493" pos:end="286:532"><name pos:start="286:493" pos:end="286:521"><name pos:start="286:493" pos:end="286:501">core_file</name><operator pos:start="286:502" pos:end="286:502">.</operator><name pos:start="286:503" pos:end="286:521">getElementAttribute</name></name><argument_list pos:start="286:522" pos:end="286:532">(<argument pos:start="286:523" pos:end="286:531"><expr pos:start="286:523" pos:end="286:531"><literal type="string" pos:start="286:523" pos:end="286:531">"right_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:534" pos:end="286:586"><expr pos:start="286:534" pos:end="286:586"><call pos:start="286:534" pos:end="286:586"><name pos:start="286:534" pos:end="286:562"><name pos:start="286:534" pos:end="286:542">core_file</name><operator pos:start="286:543" pos:end="286:543">.</operator><name pos:start="286:544" pos:end="286:562">getElementAttribute</name></name><argument_list pos:start="286:563" pos:end="286:586">(<argument pos:start="286:564" pos:end="286:585"><expr pos:start="286:564" pos:end="286:585"><literal type="string" pos:start="286:564" pos:end="286:585">"right_pupil_diameter"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:588" pos:end="286:636"><expr pos:start="286:588" pos:end="286:636"><call pos:start="286:588" pos:end="286:636"><name pos:start="286:588" pos:end="286:616"><name pos:start="286:588" pos:end="286:596">core_file</name><operator pos:start="286:597" pos:end="286:597">.</operator><name pos:start="286:598" pos:end="286:616">getElementAttribute</name></name><argument_list pos:start="286:617" pos:end="286:636">(<argument pos:start="286:618" pos:end="286:635"><expr pos:start="286:618" pos:end="286:635"><literal type="string" pos:start="286:618" pos:end="286:635">"right_validation"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:638" pos:end="286:681"><expr pos:start="286:638" pos:end="286:681"><call pos:start="286:638" pos:end="286:681"><name pos:start="286:638" pos:end="286:666"><name pos:start="286:638" pos:end="286:646">core_file</name><operator pos:start="286:647" pos:end="286:647">.</operator><name pos:start="286:648" pos:end="286:666">getElementAttribute</name></name><argument_list pos:start="286:667" pos:end="286:681">(<argument pos:start="286:668" pos:end="286:680"><expr pos:start="286:668" pos:end="286:680"><literal type="string" pos:start="286:668" pos:end="286:680">"user_left_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:683" pos:end="286:726"><expr pos:start="286:683" pos:end="286:726"><call pos:start="286:683" pos:end="286:726"><name pos:start="286:683" pos:end="286:711"><name pos:start="286:683" pos:end="286:691">core_file</name><operator pos:start="286:692" pos:end="286:692">.</operator><name pos:start="286:693" pos:end="286:711">getElementAttribute</name></name><argument_list pos:start="286:712" pos:end="286:726">(<argument pos:start="286:713" pos:end="286:725"><expr pos:start="286:713" pos:end="286:725"><literal type="string" pos:start="286:713" pos:end="286:725">"user_left_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:728" pos:end="286:771"><expr pos:start="286:728" pos:end="286:771"><call pos:start="286:728" pos:end="286:771"><name pos:start="286:728" pos:end="286:756"><name pos:start="286:728" pos:end="286:736">core_file</name><operator pos:start="286:737" pos:end="286:737">.</operator><name pos:start="286:738" pos:end="286:756">getElementAttribute</name></name><argument_list pos:start="286:757" pos:end="286:771">(<argument pos:start="286:758" pos:end="286:770"><expr pos:start="286:758" pos:end="286:770"><literal type="string" pos:start="286:758" pos:end="286:770">"user_left_z"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:773" pos:end="286:817"><expr pos:start="286:773" pos:end="286:817"><call pos:start="286:773" pos:end="286:817"><name pos:start="286:773" pos:end="286:801"><name pos:start="286:773" pos:end="286:781">core_file</name><operator pos:start="286:782" pos:end="286:782">.</operator><name pos:start="286:783" pos:end="286:801">getElementAttribute</name></name><argument_list pos:start="286:802" pos:end="286:817">(<argument pos:start="286:803" pos:end="286:816"><expr pos:start="286:803" pos:end="286:816"><literal type="string" pos:start="286:803" pos:end="286:816">"user_right_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:819" pos:end="286:863"><expr pos:start="286:819" pos:end="286:863"><call pos:start="286:819" pos:end="286:863"><name pos:start="286:819" pos:end="286:847"><name pos:start="286:819" pos:end="286:827">core_file</name><operator pos:start="286:828" pos:end="286:828">.</operator><name pos:start="286:829" pos:end="286:847">getElementAttribute</name></name><argument_list pos:start="286:848" pos:end="286:863">(<argument pos:start="286:849" pos:end="286:862"><expr pos:start="286:849" pos:end="286:862"><literal type="string" pos:start="286:849" pos:end="286:862">"user_right_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="286:865" pos:end="286:909"><expr pos:start="286:865" pos:end="286:909"><call pos:start="286:865" pos:end="286:909"><name pos:start="286:865" pos:end="286:893"><name pos:start="286:865" pos:end="286:873">core_file</name><operator pos:start="286:874" pos:end="286:874">.</operator><name pos:start="286:875" pos:end="286:893">getElementAttribute</name></name><argument_list pos:start="286:894" pos:end="286:909">(<argument pos:start="286:895" pos:end="286:908"><expr pos:start="286:895" pos:end="286:908"><literal type="string" pos:start="286:895" pos:end="286:908">"user_right_z"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <decl_stmt pos:start="288:9" pos:end="288:51"><decl pos:start="288:9" pos:end="288:50"><type pos:start="288:9" pos:end="288:15"><name pos:start="288:9" pos:end="288:15">QString</name></type> <name pos:start="288:17" pos:end="288:22">report</name> <init pos:start="288:24" pos:end="288:50">= <expr pos:start="288:26" pos:end="288:50"><call pos:start="288:26" pos:end="288:50"><name pos:start="288:26" pos:end="288:48"><name pos:start="288:26" pos:end="288:28">idb</name><operator pos:start="288:29" pos:end="288:29">.</operator><name pos:start="288:30" pos:end="288:48">checkAndReturnError</name></name><argument_list pos:start="288:49" pos:end="288:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="289:9" pos:end="291:9"><if pos:start="289:9" pos:end="291:9">if<condition pos:start="289:11" pos:end="289:24">(<expr pos:start="289:12" pos:end="289:23"><name pos:start="289:12" pos:end="289:17">report</name> <operator pos:start="289:19" pos:end="289:20">!=</operator> <literal type="string" pos:start="289:22" pos:end="289:23">""</literal></expr>)</condition> <block pos:start="289:26" pos:end="291:9">{<block_content pos:start="290:13" pos:end="290:108">
            <expr_stmt pos:start="290:13" pos:end="290:108"><expr pos:start="290:13" pos:end="290:107"><call pos:start="290:13" pos:end="290:107"><name pos:start="290:13" pos:end="290:26"><name pos:start="290:13" pos:end="290:15">log</name><operator pos:start="290:16" pos:end="290:17">-&gt;</operator><name pos:start="290:18" pos:end="290:26">writeLine</name></name><argument_list pos:start="290:27" pos:end="290:107">(<argument pos:start="290:28" pos:end="290:36"><expr pos:start="290:28" pos:end="290:36"><literal type="string" pos:start="290:28" pos:end="290:36">"WARNING"</literal></expr></argument>,<argument pos:start="290:38" pos:end="290:106"><expr pos:start="290:38" pos:end="290:106"><literal type="string" pos:start="290:38" pos:end="290:99">"The followng SQLite Error occured while handling core file: "</literal><operator pos:start="290:100" pos:end="290:100">+</operator><name pos:start="290:101" pos:end="290:106">report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="292:9" pos:end="292:49"><expr pos:start="292:9" pos:end="292:48"><name pos:start="292:9" pos:end="292:14">report</name> <operator pos:start="292:16" pos:end="292:16">=</operator> <call pos:start="292:18" pos:end="292:48"><name pos:start="292:18" pos:end="292:46"><name pos:start="292:18" pos:end="292:26">core_file</name><operator pos:start="292:27" pos:end="292:27">.</operator><name pos:start="292:28" pos:end="292:46">checkAndReturnError</name></name><argument_list pos:start="292:47" pos:end="292:48">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="293:9" pos:end="295:9"><if pos:start="293:9" pos:end="295:9">if<condition pos:start="293:11" pos:end="293:24">(<expr pos:start="293:12" pos:end="293:23"><name pos:start="293:12" pos:end="293:17">report</name> <operator pos:start="293:19" pos:end="293:20">!=</operator> <literal type="string" pos:start="293:22" pos:end="293:23">""</literal></expr>)</condition> <block pos:start="293:26" pos:end="295:9">{<block_content pos:start="294:13" pos:end="294:106">
            <expr_stmt pos:start="294:13" pos:end="294:106"><expr pos:start="294:13" pos:end="294:105"><call pos:start="294:13" pos:end="294:105"><name pos:start="294:13" pos:end="294:26"><name pos:start="294:13" pos:end="294:15">log</name><operator pos:start="294:16" pos:end="294:17">-&gt;</operator><name pos:start="294:18" pos:end="294:26">writeLine</name></name><argument_list pos:start="294:27" pos:end="294:105">(<argument pos:start="294:28" pos:end="294:36"><expr pos:start="294:28" pos:end="294:36"><literal type="string" pos:start="294:28" pos:end="294:36">"WARNING"</literal></expr></argument>,<argument pos:start="294:38" pos:end="294:104"><expr pos:start="294:38" pos:end="294:104"><literal type="string" pos:start="294:38" pos:end="294:97">"The following XML Error occured while handling core file: "</literal><operator pos:start="294:98" pos:end="294:98">+</operator><name pos:start="294:99" pos:end="294:104">report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="296:9" pos:end="296:38"><expr pos:start="296:9" pos:end="296:37"><call pos:start="296:9" pos:end="296:37"><name pos:start="296:9" pos:end="296:35"><name pos:start="296:9" pos:end="296:20">QApplication</name><operator pos:start="296:21" pos:end="296:22">::</operator><name pos:start="296:23" pos:end="296:35">processEvents</name></name><argument_list pos:start="296:36" pos:end="296:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <expr_stmt pos:start="299:5" pos:end="299:17"><expr pos:start="299:5" pos:end="299:16"><call pos:start="299:5" pos:end="299:16"><name pos:start="299:5" pos:end="299:14"><name pos:start="299:5" pos:end="299:7">idb</name><operator pos:start="299:8" pos:end="299:8">.</operator><name pos:start="299:9" pos:end="299:14">commit</name></name><argument_list pos:start="299:15" pos:end="299:16">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:72"><expr pos:start="301:5" pos:end="301:71"><call pos:start="301:5" pos:end="301:71"><name pos:start="301:5" pos:end="301:18"><name pos:start="301:5" pos:end="301:7">log</name><operator pos:start="301:8" pos:end="301:9">-&gt;</operator><name pos:start="301:10" pos:end="301:18">writeLine</name></name><argument_list pos:start="301:19" pos:end="301:71">(<argument pos:start="301:20" pos:end="301:25"><expr pos:start="301:20" pos:end="301:25"><literal type="string" pos:start="301:20" pos:end="301:25">"INFO"</literal></expr></argument>,<argument pos:start="301:27" pos:end="301:70"><expr pos:start="301:27" pos:end="301:70"><literal type="string" pos:start="301:27" pos:end="301:60">"Core file successfully imported "</literal><operator pos:start="301:61" pos:end="301:61">+</operator><name pos:start="301:62" pos:end="301:70">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <emit pos:start="303:5" pos:end="303:55">emit <expr pos:start="303:10" pos:end="303:54"><call pos:start="303:10" pos:end="303:54"><name pos:start="303:10" pos:end="303:18">taskAdded</name><argument_list pos:start="303:19" pos:end="303:54">(<argument pos:start="303:20" pos:end="303:53"><expr pos:start="303:20" pos:end="303:53"><name pos:start="303:20" pos:end="303:33">participant_id</name> <operator pos:start="303:35" pos:end="303:35">+</operator> <literal type="string" pos:start="303:37" pos:end="303:41">" - "</literal> <operator pos:start="303:43" pos:end="303:43">+</operator> <name pos:start="303:45" pos:end="303:53">task_name</name></expr></argument>)</argument_list></call></expr>;</emit>
    <emit pos:start="304:5" pos:end="304:109">emit <expr pos:start="304:10" pos:end="304:108"><call pos:start="304:10" pos:end="304:108"><name pos:start="304:10" pos:end="304:23">outputToScreen</name><argument_list pos:start="304:24" pos:end="304:108">(<argument pos:start="304:25" pos:end="304:31"><expr pos:start="304:25" pos:end="304:31"><literal type="string" pos:start="304:25" pos:end="304:31">"black"</literal></expr></argument>,<argument pos:start="304:33" pos:end="304:107"><expr pos:start="304:33" pos:end="304:107"><call pos:start="304:33" pos:end="304:78"><name pos:start="304:33" pos:end="304:39">QString</name><argument_list pos:start="304:40" pos:end="304:78">(<argument pos:start="304:41" pos:end="304:77"><expr pos:start="304:41" pos:end="304:77"><literal type="string" pos:start="304:41" pos:end="304:77">"Core file imported. Took %1 seconds"</literal></expr></argument>)</argument_list></call><operator pos:start="304:79" pos:end="304:79">.</operator><call pos:start="304:80" pos:end="304:107"><name pos:start="304:80" pos:end="304:82">arg</name><argument_list pos:start="304:83" pos:end="304:107">(<argument pos:start="304:84" pos:end="304:106"><expr pos:start="304:84" pos:end="304:106"><call pos:start="304:84" pos:end="304:97"><name pos:start="304:84" pos:end="304:95"><name pos:start="304:84" pos:end="304:87">time</name><operator pos:start="304:88" pos:end="304:88">.</operator><name pos:start="304:89" pos:end="304:95">elapsed</name></name><argument_list pos:start="304:96" pos:end="304:97">()</argument_list></call> <operator pos:start="304:99" pos:end="304:99">/</operator> <literal type="number" pos:start="304:101" pos:end="304:106">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>

</block_content>}</block></function>

<function pos:start="308:1" pos:end="371:1"><type pos:start="308:1" pos:end="308:4"><name pos:start="308:1" pos:end="308:4">void</name></type> <name pos:start="308:6" pos:end="308:32"><name pos:start="308:6" pos:end="308:15">Controller</name><operator pos:start="308:16" pos:end="308:17">::</operator><name pos:start="308:18" pos:end="308:32">importPluginXML</name></name><parameter_list pos:start="308:33" pos:end="308:58">(<parameter pos:start="308:34" pos:end="308:57"><decl pos:start="308:34" pos:end="308:57"><type pos:start="308:34" pos:end="308:47"><specifier pos:start="308:34" pos:end="308:38">const</specifier> <name pos:start="308:40" pos:end="308:46">QString</name><modifier pos:start="308:47" pos:end="308:47">&amp;</modifier></type> <name pos:start="308:49" pos:end="308:57">file_path</name></decl></parameter>)</parameter_list> <block pos:start="308:60" pos:end="371:1">{<block_content pos:start="309:5" pos:end="370:111">
    <if_stmt pos:start="309:5" pos:end="313:5"><if pos:start="309:5" pos:end="313:5">if<condition pos:start="309:7" pos:end="309:29">(<expr pos:start="309:8" pos:end="309:28"><operator pos:start="309:8" pos:end="309:8">!</operator><call pos:start="309:9" pos:end="309:28"><name pos:start="309:9" pos:end="309:26"><name pos:start="309:9" pos:end="309:11">idb</name><operator pos:start="309:12" pos:end="309:12">.</operator><name pos:start="309:13" pos:end="309:26">isDatabaseOpen</name></name><argument_list pos:start="309:27" pos:end="309:28">()</argument_list></call></expr>)</condition> <block pos:start="309:31" pos:end="313:5">{<block_content pos:start="310:9" pos:end="312:15">
        <expr_stmt pos:start="310:9" pos:end="310:74"><expr pos:start="310:9" pos:end="310:73"><call pos:start="310:9" pos:end="310:73"><name pos:start="310:9" pos:end="310:22"><name pos:start="310:9" pos:end="310:11">log</name><operator pos:start="310:12" pos:end="310:13">-&gt;</operator><name pos:start="310:14" pos:end="310:22">writeLine</name></name><argument_list pos:start="310:23" pos:end="310:73">(<argument pos:start="310:24" pos:end="310:30"><expr pos:start="310:24" pos:end="310:30"><literal type="string" pos:start="310:24" pos:end="310:30">"ERROR"</literal></expr></argument>,<argument pos:start="310:32" pos:end="310:72"><expr pos:start="310:32" pos:end="310:72"><literal type="string" pos:start="310:32" pos:end="310:72">"Database not opened: Plugin File import"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <emit pos:start="311:9" pos:end="311:80">emit <expr pos:start="311:14" pos:end="311:79"><call pos:start="311:14" pos:end="311:79"><name pos:start="311:14" pos:end="311:20">warning</name><argument_list pos:start="311:21" pos:end="311:79">(<argument pos:start="311:22" pos:end="311:37"><expr pos:start="311:22" pos:end="311:37"><literal type="string" pos:start="311:22" pos:end="311:37">"Database Error"</literal></expr></argument>,<argument pos:start="311:39" pos:end="311:78"><expr pos:start="311:39" pos:end="311:78"><literal type="string" pos:start="311:39" pos:end="311:78">"There is no Database currently loaded."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="312:9" pos:end="312:15">return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="315:5" pos:end="315:23"><decl pos:start="315:5" pos:end="315:22"><type pos:start="315:5" pos:end="315:17"><name pos:start="315:5" pos:end="315:17">QElapsedTimer</name></type> <name pos:start="315:19" pos:end="315:22">time</name></decl>;</decl_stmt>
    <expr_stmt pos:start="316:5" pos:end="316:17"><expr pos:start="316:5" pos:end="316:16"><call pos:start="316:5" pos:end="316:16"><name pos:start="316:5" pos:end="316:14"><name pos:start="316:5" pos:end="316:8">time</name><operator pos:start="316:9" pos:end="316:9">.</operator><name pos:start="316:10" pos:end="316:14">start</name></name><argument_list pos:start="316:15" pos:end="316:16">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="318:5" pos:end="318:38"><decl pos:start="318:5" pos:end="318:37"><type pos:start="318:5" pos:end="318:14"><name pos:start="318:5" pos:end="318:14">XMLHandler</name></type> <name pos:start="318:16" pos:end="318:26">plugin_file</name><argument_list pos:start="318:27" pos:end="318:37">(<argument pos:start="318:28" pos:end="318:36"><expr pos:start="318:28" pos:end="318:36"><name pos:start="318:28" pos:end="318:36">file_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt pos:start="320:5" pos:end="320:27"><expr pos:start="320:5" pos:end="320:26"><call pos:start="320:5" pos:end="320:26"><name pos:start="320:5" pos:end="320:24"><name pos:start="320:5" pos:end="320:7">idb</name><operator pos:start="320:8" pos:end="320:8">.</operator><name pos:start="320:9" pos:end="320:24">startTransaction</name></name><argument_list pos:start="320:25" pos:end="320:26">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="322:5" pos:end="323:28"><decl pos:start="322:5" pos:end="322:22"><type pos:start="322:5" pos:end="322:11"><name pos:start="322:5" pos:end="322:11">QString</name></type> <name pos:start="322:13" pos:end="322:22">session_id</name></decl>,
            <decl pos:start="323:13" pos:end="323:27"><type ref="prev" pos:start="322:5" pos:end="322:11"/><name pos:start="323:13" pos:end="323:27">ide_plugin_type</name></decl>;</decl_stmt>

    <while pos:start="325:5" pos:end="365:5">while<condition pos:start="325:10" pos:end="325:33">(<expr pos:start="325:11" pos:end="325:32"><operator pos:start="325:11" pos:end="325:11">!</operator><call pos:start="325:12" pos:end="325:32"><name pos:start="325:12" pos:end="325:30"><name pos:start="325:12" pos:end="325:22">plugin_file</name><operator pos:start="325:23" pos:end="325:23">.</operator><name pos:start="325:24" pos:end="325:30">isAtEnd</name></name><argument_list pos:start="325:31" pos:end="325:32">()</argument_list></call></expr>)</condition> <block pos:start="325:35" pos:end="365:5">{<block_content pos:start="326:9" pos:end="364:38">
        <decl_stmt pos:start="326:9" pos:end="326:59"><decl pos:start="326:9" pos:end="326:58"><type pos:start="326:9" pos:end="326:15"><name pos:start="326:9" pos:end="326:15">QString</name></type> <name pos:start="326:17" pos:end="326:23">element</name> <init pos:start="326:25" pos:end="326:58">= <expr pos:start="326:27" pos:end="326:58"><call pos:start="326:27" pos:end="326:58"><name pos:start="326:27" pos:end="326:56"><name pos:start="326:27" pos:end="326:37">plugin_file</name><operator pos:start="326:38" pos:end="326:38">.</operator><name pos:start="326:39" pos:end="326:56">getNextElementName</name></name><argument_list pos:start="326:57" pos:end="326:58">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="328:9" pos:end="355:9"><if pos:start="328:9" pos:end="330:9">if<condition pos:start="328:11" pos:end="328:38">(<expr pos:start="328:12" pos:end="328:37"><name pos:start="328:12" pos:end="328:18">element</name> <operator pos:start="328:20" pos:end="328:21">==</operator> <literal type="string" pos:start="328:23" pos:end="328:37">"itrace_plugin"</literal></expr>)</condition> <block pos:start="328:40" pos:end="330:9">{<block_content pos:start="329:13" pos:end="329:71">
            <expr_stmt pos:start="329:13" pos:end="329:71"><expr pos:start="329:13" pos:end="329:70"><name pos:start="329:13" pos:end="329:22">session_id</name> <operator pos:start="329:24" pos:end="329:24">=</operator> <call pos:start="329:26" pos:end="329:70"><name pos:start="329:26" pos:end="329:56"><name pos:start="329:26" pos:end="329:36">plugin_file</name><operator pos:start="329:37" pos:end="329:37">.</operator><name pos:start="329:38" pos:end="329:56">getElementAttribute</name></name><argument_list pos:start="329:57" pos:end="329:70">(<argument pos:start="329:58" pos:end="329:69"><expr pos:start="329:58" pos:end="329:69"><literal type="string" pos:start="329:58" pos:end="329:69">"session_id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="331:9" pos:end="340:9">else if<condition pos:start="331:16" pos:end="331:41">(<expr pos:start="331:17" pos:end="331:40"><name pos:start="331:17" pos:end="331:23">element</name> <operator pos:start="331:25" pos:end="331:26">==</operator> <literal type="string" pos:start="331:28" pos:end="331:40">"environment"</literal></expr>)</condition> <block pos:start="331:43" pos:end="340:9">{<block_content pos:start="332:13" pos:end="339:197">
            <decl_stmt pos:start="332:13" pos:end="332:44"><decl pos:start="332:13" pos:end="332:43"><type pos:start="332:13" pos:end="332:37"><name pos:start="332:13" pos:end="332:37"><name pos:start="332:13" pos:end="332:15">std</name><operator pos:start="332:16" pos:end="332:17">::</operator><name pos:start="332:18" pos:end="332:20">map</name><argument_list type="generic" pos:start="332:21" pos:end="332:37">&lt;<argument pos:start="332:22" pos:end="332:28"><expr pos:start="332:22" pos:end="332:28"><name pos:start="332:22" pos:end="332:28">QString</name></expr></argument>,<argument pos:start="332:30" pos:end="332:36"><expr pos:start="332:30" pos:end="332:36"><name pos:start="332:30" pos:end="332:36">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="332:39" pos:end="332:43">types</name></decl>;</decl_stmt>
            <expr_stmt pos:start="333:13" pos:end="333:45"><expr pos:start="333:13" pos:end="333:44"><name pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:17">types</name><index pos:start="333:18" pos:end="333:25">[<expr pos:start="333:19" pos:end="333:24"><literal type="string" pos:start="333:19" pos:end="333:24">"msvs"</literal></expr>]</index></name> <operator pos:start="333:27" pos:end="333:27">=</operator> <literal type="string" pos:start="333:29" pos:end="333:44">"vstudio_plugin"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="334:13" pos:end="334:48"><expr pos:start="334:13" pos:end="334:47"><name pos:start="334:13" pos:end="334:28"><name pos:start="334:13" pos:end="334:17">types</name><index pos:start="334:18" pos:end="334:28">[<expr pos:start="334:19" pos:end="334:27"><literal type="string" pos:start="334:19" pos:end="334:27">"eclipse"</literal></expr>]</index></name> <operator pos:start="334:30" pos:end="334:30">=</operator> <literal type="string" pos:start="334:32" pos:end="334:47">"eclipse_plugin"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="335:13" pos:end="335:42"><expr pos:start="335:13" pos:end="335:41"><name pos:start="335:13" pos:end="335:25"><name pos:start="335:13" pos:end="335:17">types</name><index pos:start="335:18" pos:end="335:25">[<expr pos:start="335:19" pos:end="335:24"><literal type="string" pos:start="335:19" pos:end="335:24">"atom"</literal></expr>]</index></name> <operator pos:start="335:27" pos:end="335:27">=</operator> <literal type="string" pos:start="335:29" pos:end="335:41">"atom_plugin"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="336:13" pos:end="336:46"><expr pos:start="336:13" pos:end="336:45"><name pos:start="336:13" pos:end="336:27"><name pos:start="336:13" pos:end="336:17">types</name><index pos:start="336:18" pos:end="336:27">[<expr pos:start="336:19" pos:end="336:26"><literal type="string" pos:start="336:19" pos:end="336:26">"chrome"</literal></expr>]</index></name> <operator pos:start="336:29" pos:end="336:29">=</operator> <literal type="string" pos:start="336:31" pos:end="336:45">"chrome_plugin"</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="337:13" pos:end="337:87"><expr pos:start="337:13" pos:end="337:86"><name pos:start="337:13" pos:end="337:27">ide_plugin_type</name> <operator pos:start="337:29" pos:end="337:29">=</operator> <call pos:start="337:31" pos:end="337:76"><name pos:start="337:31" pos:end="337:61"><name pos:start="337:31" pos:end="337:41">plugin_file</name><operator pos:start="337:42" pos:end="337:42">.</operator><name pos:start="337:43" pos:end="337:61">getElementAttribute</name></name><argument_list pos:start="337:62" pos:end="337:76">(<argument pos:start="337:63" pos:end="337:75"><expr pos:start="337:63" pos:end="337:75"><literal type="string" pos:start="337:63" pos:end="337:75">"plugin_type"</literal></expr></argument>)</argument_list></call><operator pos:start="337:77" pos:end="337:77">.</operator><call pos:start="337:78" pos:end="337:86"><name pos:start="337:78" pos:end="337:84">toLower</name><argument_list pos:start="337:85" pos:end="337:86">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="338:13" pos:end="338:26">// Insert file</comment>
            <expr_stmt pos:start="339:13" pos:end="339:197"><expr pos:start="339:13" pos:end="339:196"><call pos:start="339:13" pos:end="339:196"><name pos:start="339:13" pos:end="339:26"><name pos:start="339:13" pos:end="339:15">idb</name><operator pos:start="339:16" pos:end="339:16">.</operator><name pos:start="339:17" pos:end="339:26">insertFile</name></name><argument_list pos:start="339:27" pos:end="339:196">(<argument pos:start="339:28" pos:end="339:132"><expr pos:start="339:28" pos:end="339:132"><call pos:start="339:28" pos:end="339:124"><name pos:start="339:28" pos:end="339:51"><name pos:start="339:28" pos:end="339:45">QCryptographicHash</name><operator pos:start="339:46" pos:end="339:47">::</operator><name pos:start="339:48" pos:end="339:51">hash</name></name><argument_list pos:start="339:52" pos:end="339:124">(<argument pos:start="339:53" pos:end="339:98"><expr pos:start="339:53" pos:end="339:98"><call pos:start="339:53" pos:end="339:77"><name pos:start="339:53" pos:end="339:75"><name pos:start="339:53" pos:end="339:63">plugin_file</name><operator pos:start="339:64" pos:end="339:64">.</operator><name pos:start="339:65" pos:end="339:75">getFilePath</name></name><argument_list pos:start="339:76" pos:end="339:77">()</argument_list></call><operator pos:start="339:78" pos:end="339:78">.</operator><call pos:start="339:79" pos:end="339:86"><name pos:start="339:79" pos:end="339:84">toUtf8</name><argument_list pos:start="339:85" pos:end="339:86">()</argument_list></call><operator pos:start="339:87" pos:end="339:87">.</operator><call pos:start="339:88" pos:end="339:98"><name pos:start="339:88" pos:end="339:96">constData</name><argument_list pos:start="339:97" pos:end="339:98">()</argument_list></call></expr></argument>,<argument pos:start="339:100" pos:end="339:123"><expr pos:start="339:100" pos:end="339:123"><name pos:start="339:100" pos:end="339:123"><name pos:start="339:100" pos:end="339:117">QCryptographicHash</name><operator pos:start="339:118" pos:end="339:119">::</operator><name pos:start="339:120" pos:end="339:123">Sha1</name></name></expr></argument>)</argument_list></call><operator pos:start="339:125" pos:end="339:125">.</operator><call pos:start="339:126" pos:end="339:132"><name pos:start="339:126" pos:end="339:130">toHex</name><argument_list pos:start="339:131" pos:end="339:132">()</argument_list></call></expr></argument>,<argument pos:start="339:134" pos:end="339:143"><expr pos:start="339:134" pos:end="339:143"><name pos:start="339:134" pos:end="339:143">session_id</name></expr></argument>,<argument pos:start="339:145" pos:end="339:169"><expr pos:start="339:145" pos:end="339:169"><call pos:start="339:145" pos:end="339:169"><name pos:start="339:145" pos:end="339:167"><name pos:start="339:145" pos:end="339:155">plugin_file</name><operator pos:start="339:156" pos:end="339:156">.</operator><name pos:start="339:157" pos:end="339:167">getFilePath</name></name><argument_list pos:start="339:168" pos:end="339:169">()</argument_list></call></expr></argument>,<argument pos:start="339:171" pos:end="339:195"><expr pos:start="339:171" pos:end="339:195"><call pos:start="339:171" pos:end="339:195"><name pos:start="339:171" pos:end="339:178"><name pos:start="339:171" pos:end="339:175">types</name><operator pos:start="339:176" pos:end="339:176">.</operator><name pos:start="339:177" pos:end="339:178">at</name></name><argument_list pos:start="339:179" pos:end="339:195">(<argument pos:start="339:180" pos:end="339:194"><expr pos:start="339:180" pos:end="339:194"><name pos:start="339:180" pos:end="339:194">ide_plugin_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="341:9" pos:end="355:9">else if<condition pos:start="341:16" pos:end="341:38">(<expr pos:start="341:17" pos:end="341:37"><name pos:start="341:17" pos:end="341:23">element</name> <operator pos:start="341:25" pos:end="341:26">==</operator> <literal type="string" pos:start="341:28" pos:end="341:37">"response"</literal></expr>)</condition> <block pos:start="341:40" pos:end="355:9">{<block_content pos:start="345:13" pos:end="354:697">
            <comment type="line" pos:start="342:13" pos:end="342:33">// Insert ide_context</comment>

            <comment type="line" pos:start="344:13" pos:end="344:55">// Check if we are inserting duplicate data</comment>
            <if_stmt pos:start="345:13" pos:end="351:13"><if pos:start="345:13" pos:end="351:13">if<condition pos:start="345:15" pos:end="345:87">(<expr pos:start="345:16" pos:end="345:86"><call pos:start="345:16" pos:end="345:86"><name pos:start="345:16" pos:end="345:39"><name pos:start="345:16" pos:end="345:18">idb</name><operator pos:start="345:19" pos:end="345:19">.</operator><name pos:start="345:20" pos:end="345:39">pluginResponseExists</name></name><argument_list pos:start="345:40" pos:end="345:86">(<argument pos:start="345:41" pos:end="345:85"><expr pos:start="345:41" pos:end="345:85"><call pos:start="345:41" pos:end="345:85"><name pos:start="345:41" pos:end="345:71"><name pos:start="345:41" pos:end="345:51">plugin_file</name><operator pos:start="345:52" pos:end="345:52">.</operator><name pos:start="345:53" pos:end="345:71">getElementAttribute</name></name><argument_list pos:start="345:72" pos:end="345:85">(<argument pos:start="345:73" pos:end="345:84"><expr pos:start="345:73" pos:end="345:84"><operator pos:start="345:73" pos:end="345:73">(</operator><literal type="string" pos:start="345:74" pos:end="345:83">"event_id"</literal><operator pos:start="345:84" pos:end="345:84">)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="345:89" pos:end="351:13">{<block_content pos:start="346:17" pos:end="350:25">
                <decl_stmt pos:start="346:17" pos:end="346:152"><decl pos:start="346:17" pos:end="346:151"><type pos:start="346:17" pos:end="346:23"><name pos:start="346:17" pos:end="346:23">QString</name></type> <name pos:start="346:25" pos:end="346:30">output</name> <init pos:start="346:32" pos:end="346:151">= <expr pos:start="346:34" pos:end="346:151"><literal type="string" pos:start="346:34" pos:end="346:74">"Duplicate Plugin Context data in file: "</literal><operator pos:start="346:75" pos:end="346:75">+</operator><name pos:start="346:76" pos:end="346:84">file_path</name><operator pos:start="346:85" pos:end="346:85">+</operator><literal type="string" pos:start="346:86" pos:end="346:103">" with event_id: "</literal> <operator pos:start="346:105" pos:end="346:105">+</operator> <call pos:start="346:107" pos:end="346:151"><name pos:start="346:107" pos:end="346:137"><name pos:start="346:107" pos:end="346:117">plugin_file</name><operator pos:start="346:118" pos:end="346:118">.</operator><name pos:start="346:119" pos:end="346:137">getElementAttribute</name></name><argument_list pos:start="346:138" pos:end="346:151">(<argument pos:start="346:139" pos:end="346:150"><expr pos:start="346:139" pos:end="346:150"><operator pos:start="346:139" pos:end="346:139">(</operator><literal type="string" pos:start="346:140" pos:end="346:149">"event_id"</literal><operator pos:start="346:150" pos:end="346:150">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <emit pos:start="347:17" pos:end="347:54">emit <expr pos:start="347:22" pos:end="347:53"><call pos:start="347:22" pos:end="347:53"><name pos:start="347:22" pos:end="347:35">outputToScreen</name><argument_list pos:start="347:36" pos:end="347:53">(<argument pos:start="347:37" pos:end="347:45"><expr pos:start="347:37" pos:end="347:45"><literal type="string" pos:start="347:37" pos:end="347:45">"#F55904"</literal></expr></argument>,<argument pos:start="347:47" pos:end="347:52"><expr pos:start="347:47" pos:end="347:52"><name pos:start="347:47" pos:end="347:52">output</name></expr></argument>)</argument_list></call></expr>;</emit>
                <emit pos:start="348:17" pos:end="348:93">emit <expr pos:start="348:22" pos:end="348:92"><call pos:start="348:22" pos:end="348:92"><name pos:start="348:22" pos:end="348:35">outputToScreen</name><argument_list pos:start="348:36" pos:end="348:92">(<argument pos:start="348:37" pos:end="348:45"><expr pos:start="348:37" pos:end="348:45"><literal type="string" pos:start="348:37" pos:end="348:45">"#F55904"</literal></expr></argument>,<argument pos:start="348:47" pos:end="348:91"><expr pos:start="348:47" pos:end="348:91"><call pos:start="348:47" pos:end="348:91"><name pos:start="348:47" pos:end="348:77"><name pos:start="348:47" pos:end="348:57">plugin_file</name><operator pos:start="348:58" pos:end="348:58">.</operator><name pos:start="348:59" pos:end="348:77">getElementAttribute</name></name><argument_list pos:start="348:78" pos:end="348:91">(<argument pos:start="348:79" pos:end="348:90"><expr pos:start="348:79" pos:end="348:90"><operator pos:start="348:79" pos:end="348:79">(</operator><literal type="string" pos:start="348:80" pos:end="348:89">"event_id"</literal><operator pos:start="348:90" pos:end="348:90">)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
                <expr_stmt pos:start="349:17" pos:end="349:49"><expr pos:start="349:17" pos:end="349:48"><call pos:start="349:17" pos:end="349:48"><name pos:start="349:17" pos:end="349:30"><name pos:start="349:17" pos:end="349:19">log</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:30">writeLine</name></name><argument_list pos:start="349:31" pos:end="349:48">(<argument pos:start="349:32" pos:end="349:40"><expr pos:start="349:32" pos:end="349:40"><literal type="string" pos:start="349:32" pos:end="349:40">"WARNING"</literal></expr></argument>,<argument pos:start="349:42" pos:end="349:47"><expr pos:start="349:42" pos:end="349:47"><name pos:start="349:42" pos:end="349:47">output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <continue pos:start="350:17" pos:end="350:25">continue;</continue>
            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="353:13" pos:end="353:62">// The last 4 parameters are unused for the moment</comment>
            <expr_stmt pos:start="354:13" pos:end="354:697"><expr pos:start="354:13" pos:end="354:696"><call pos:start="354:13" pos:end="354:696"><name pos:start="354:13" pos:end="354:32"><name pos:start="354:13" pos:end="354:15">idb</name><operator pos:start="354:16" pos:end="354:16">.</operator><name pos:start="354:17" pos:end="354:32">insertIDEContext</name></name><argument_list pos:start="354:33" pos:end="354:696">(<argument pos:start="354:34" pos:end="354:76"><expr pos:start="354:34" pos:end="354:76"><call pos:start="354:34" pos:end="354:76"><name pos:start="354:34" pos:end="354:64"><name pos:start="354:34" pos:end="354:44">plugin_file</name><operator pos:start="354:45" pos:end="354:45">.</operator><name pos:start="354:46" pos:end="354:64">getElementAttribute</name></name><argument_list pos:start="354:65" pos:end="354:76">(<argument pos:start="354:66" pos:end="354:75"><expr pos:start="354:66" pos:end="354:75"><literal type="string" pos:start="354:66" pos:end="354:75">"event_id"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:78" pos:end="354:123"><expr pos:start="354:78" pos:end="354:123"><call pos:start="354:78" pos:end="354:123"><name pos:start="354:78" pos:end="354:108"><name pos:start="354:78" pos:end="354:88">plugin_file</name><operator pos:start="354:89" pos:end="354:89">.</operator><name pos:start="354:90" pos:end="354:108">getElementAttribute</name></name><argument_list pos:start="354:109" pos:end="354:123">(<argument pos:start="354:110" pos:end="354:122"><expr pos:start="354:110" pos:end="354:122"><literal type="string" pos:start="354:110" pos:end="354:122">"plugin_time"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:125" pos:end="354:139"><expr pos:start="354:125" pos:end="354:139"><name pos:start="354:125" pos:end="354:139">ide_plugin_type</name></expr></argument>,<argument pos:start="354:141" pos:end="354:186"><expr pos:start="354:141" pos:end="354:186"><call pos:start="354:141" pos:end="354:186"><name pos:start="354:141" pos:end="354:171"><name pos:start="354:141" pos:end="354:151">plugin_file</name><operator pos:start="354:152" pos:end="354:152">.</operator><name pos:start="354:153" pos:end="354:171">getElementAttribute</name></name><argument_list pos:start="354:172" pos:end="354:186">(<argument pos:start="354:173" pos:end="354:185"><expr pos:start="354:173" pos:end="354:185"><literal type="string" pos:start="354:173" pos:end="354:185">"gaze_target"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:188" pos:end="354:238"><expr pos:start="354:188" pos:end="354:238"><call pos:start="354:188" pos:end="354:238"><name pos:start="354:188" pos:end="354:218"><name pos:start="354:188" pos:end="354:198">plugin_file</name><operator pos:start="354:199" pos:end="354:199">.</operator><name pos:start="354:200" pos:end="354:218">getElementAttribute</name></name><argument_list pos:start="354:219" pos:end="354:238">(<argument pos:start="354:220" pos:end="354:237"><expr pos:start="354:220" pos:end="354:237"><literal type="string" pos:start="354:220" pos:end="354:237">"gaze_target_type"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:240" pos:end="354:290"><expr pos:start="354:240" pos:end="354:290"><call pos:start="354:240" pos:end="354:290"><name pos:start="354:240" pos:end="354:270"><name pos:start="354:240" pos:end="354:250">plugin_file</name><operator pos:start="354:251" pos:end="354:251">.</operator><name pos:start="354:252" pos:end="354:270">getElementAttribute</name></name><argument_list pos:start="354:271" pos:end="354:290">(<argument pos:start="354:272" pos:end="354:289"><expr pos:start="354:272" pos:end="354:289"><literal type="string" pos:start="354:272" pos:end="354:289">"source_file_path"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:292" pos:end="354:342"><expr pos:start="354:292" pos:end="354:342"><call pos:start="354:292" pos:end="354:342"><name pos:start="354:292" pos:end="354:322"><name pos:start="354:292" pos:end="354:302">plugin_file</name><operator pos:start="354:303" pos:end="354:303">.</operator><name pos:start="354:304" pos:end="354:322">getElementAttribute</name></name><argument_list pos:start="354:323" pos:end="354:342">(<argument pos:start="354:324" pos:end="354:341"><expr pos:start="354:324" pos:end="354:341"><literal type="string" pos:start="354:324" pos:end="354:341">"source_file_line"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:344" pos:end="354:393"><expr pos:start="354:344" pos:end="354:393"><call pos:start="354:344" pos:end="354:393"><name pos:start="354:344" pos:end="354:374"><name pos:start="354:344" pos:end="354:354">plugin_file</name><operator pos:start="354:355" pos:end="354:355">.</operator><name pos:start="354:356" pos:end="354:374">getElementAttribute</name></name><argument_list pos:start="354:375" pos:end="354:393">(<argument pos:start="354:376" pos:end="354:392"><expr pos:start="354:376" pos:end="354:392"><literal type="string" pos:start="354:376" pos:end="354:392">"source_file_col"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:395" pos:end="354:447"><expr pos:start="354:395" pos:end="354:447"><call pos:start="354:395" pos:end="354:447"><name pos:start="354:395" pos:end="354:425"><name pos:start="354:395" pos:end="354:405">plugin_file</name><operator pos:start="354:406" pos:end="354:406">.</operator><name pos:start="354:407" pos:end="354:425">getElementAttribute</name></name><argument_list pos:start="354:426" pos:end="354:447">(<argument pos:start="354:427" pos:end="354:446"><expr pos:start="354:427" pos:end="354:446"><literal type="string" pos:start="354:427" pos:end="354:446">"editor_line_height"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:449" pos:end="354:501"><expr pos:start="354:449" pos:end="354:501"><call pos:start="354:449" pos:end="354:501"><name pos:start="354:449" pos:end="354:479"><name pos:start="354:449" pos:end="354:459">plugin_file</name><operator pos:start="354:460" pos:end="354:460">.</operator><name pos:start="354:461" pos:end="354:479">getElementAttribute</name></name><argument_list pos:start="354:480" pos:end="354:501">(<argument pos:start="354:481" pos:end="354:500"><expr pos:start="354:481" pos:end="354:500"><literal type="string" pos:start="354:481" pos:end="354:500">"editor_font_height"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:503" pos:end="354:555"><expr pos:start="354:503" pos:end="354:555"><call pos:start="354:503" pos:end="354:555"><name pos:start="354:503" pos:end="354:533"><name pos:start="354:503" pos:end="354:513">plugin_file</name><operator pos:start="354:514" pos:end="354:514">.</operator><name pos:start="354:515" pos:end="354:533">getElementAttribute</name></name><argument_list pos:start="354:534" pos:end="354:555">(<argument pos:start="354:535" pos:end="354:554"><expr pos:start="354:535" pos:end="354:554"><literal type="string" pos:start="354:535" pos:end="354:554">"editor_line_base_x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:557" pos:end="354:609"><expr pos:start="354:557" pos:end="354:609"><call pos:start="354:557" pos:end="354:609"><name pos:start="354:557" pos:end="354:587"><name pos:start="354:557" pos:end="354:567">plugin_file</name><operator pos:start="354:568" pos:end="354:568">.</operator><name pos:start="354:569" pos:end="354:587">getElementAttribute</name></name><argument_list pos:start="354:588" pos:end="354:609">(<argument pos:start="354:589" pos:end="354:608"><expr pos:start="354:589" pos:end="354:608"><literal type="string" pos:start="354:589" pos:end="354:608">"editor_line_base_y"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:611" pos:end="354:612"><expr pos:start="354:611" pos:end="354:612"><literal type="string" pos:start="354:611" pos:end="354:612">""</literal></expr></argument>,<argument pos:start="354:614" pos:end="354:615"><expr pos:start="354:614" pos:end="354:615"><literal type="string" pos:start="354:614" pos:end="354:615">""</literal></expr></argument>,<argument pos:start="354:617" pos:end="354:618"><expr pos:start="354:617" pos:end="354:618"><literal type="string" pos:start="354:617" pos:end="354:618">""</literal></expr></argument>,<argument pos:start="354:620" pos:end="354:621"><expr pos:start="354:620" pos:end="354:621"><literal type="string" pos:start="354:620" pos:end="354:621">""</literal></expr></argument>,<argument pos:start="354:623" pos:end="354:658"><expr pos:start="354:623" pos:end="354:658"><call pos:start="354:623" pos:end="354:658"><name pos:start="354:623" pos:end="354:653"><name pos:start="354:623" pos:end="354:633">plugin_file</name><operator pos:start="354:634" pos:end="354:634">.</operator><name pos:start="354:635" pos:end="354:653">getElementAttribute</name></name><argument_list pos:start="354:654" pos:end="354:658">(<argument pos:start="354:655" pos:end="354:657"><expr pos:start="354:655" pos:end="354:657"><literal type="string" pos:start="354:655" pos:end="354:657">"x"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="354:660" pos:end="354:695"><expr pos:start="354:660" pos:end="354:695"><call pos:start="354:660" pos:end="354:695"><name pos:start="354:660" pos:end="354:690"><name pos:start="354:660" pos:end="354:670">plugin_file</name><operator pos:start="354:671" pos:end="354:671">.</operator><name pos:start="354:672" pos:end="354:690">getElementAttribute</name></name><argument_list pos:start="354:691" pos:end="354:695">(<argument pos:start="354:692" pos:end="354:694"><expr pos:start="354:692" pos:end="354:694"><literal type="string" pos:start="354:692" pos:end="354:694">"y"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <decl_stmt pos:start="356:9" pos:end="356:51"><decl pos:start="356:9" pos:end="356:50"><type pos:start="356:9" pos:end="356:15"><name pos:start="356:9" pos:end="356:15">QString</name></type> <name pos:start="356:17" pos:end="356:22">report</name> <init pos:start="356:24" pos:end="356:50">= <expr pos:start="356:26" pos:end="356:50"><call pos:start="356:26" pos:end="356:50"><name pos:start="356:26" pos:end="356:48"><name pos:start="356:26" pos:end="356:28">idb</name><operator pos:start="356:29" pos:end="356:29">.</operator><name pos:start="356:30" pos:end="356:48">checkAndReturnError</name></name><argument_list pos:start="356:49" pos:end="356:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="357:9" pos:end="359:9"><if pos:start="357:9" pos:end="359:9">if<condition pos:start="357:11" pos:end="357:24">(<expr pos:start="357:12" pos:end="357:23"><name pos:start="357:12" pos:end="357:17">report</name> <operator pos:start="357:19" pos:end="357:20">!=</operator> <literal type="string" pos:start="357:22" pos:end="357:23">""</literal></expr>)</condition> <block pos:start="357:26" pos:end="359:9">{<block_content pos:start="358:13" pos:end="358:110">
            <expr_stmt pos:start="358:13" pos:end="358:110"><expr pos:start="358:13" pos:end="358:109"><call pos:start="358:13" pos:end="358:109"><name pos:start="358:13" pos:end="358:26"><name pos:start="358:13" pos:end="358:15">log</name><operator pos:start="358:16" pos:end="358:17">-&gt;</operator><name pos:start="358:18" pos:end="358:26">writeLine</name></name><argument_list pos:start="358:27" pos:end="358:109">(<argument pos:start="358:28" pos:end="358:36"><expr pos:start="358:28" pos:end="358:36"><literal type="string" pos:start="358:28" pos:end="358:36">"WARNING"</literal></expr></argument>,<argument pos:start="358:38" pos:end="358:108"><expr pos:start="358:38" pos:end="358:108"><literal type="string" pos:start="358:38" pos:end="358:101">"The followng SQLite Error occured while handling plugin file: "</literal><operator pos:start="358:102" pos:end="358:102">+</operator><name pos:start="358:103" pos:end="358:108">report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="360:9" pos:end="360:51"><expr pos:start="360:9" pos:end="360:50"><name pos:start="360:9" pos:end="360:14">report</name> <operator pos:start="360:16" pos:end="360:16">=</operator> <call pos:start="360:18" pos:end="360:50"><name pos:start="360:18" pos:end="360:48"><name pos:start="360:18" pos:end="360:28">plugin_file</name><operator pos:start="360:29" pos:end="360:29">.</operator><name pos:start="360:30" pos:end="360:48">checkAndReturnError</name></name><argument_list pos:start="360:49" pos:end="360:50">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="361:9" pos:end="363:9"><if pos:start="361:9" pos:end="363:9">if<condition pos:start="361:11" pos:end="361:24">(<expr pos:start="361:12" pos:end="361:23"><name pos:start="361:12" pos:end="361:17">report</name> <operator pos:start="361:19" pos:end="361:20">!=</operator> <literal type="string" pos:start="361:22" pos:end="361:23">""</literal></expr>)</condition> <block pos:start="361:26" pos:end="363:9">{<block_content pos:start="362:13" pos:end="362:108">
            <expr_stmt pos:start="362:13" pos:end="362:108"><expr pos:start="362:13" pos:end="362:107"><call pos:start="362:13" pos:end="362:107"><name pos:start="362:13" pos:end="362:26"><name pos:start="362:13" pos:end="362:15">log</name><operator pos:start="362:16" pos:end="362:17">-&gt;</operator><name pos:start="362:18" pos:end="362:26">writeLine</name></name><argument_list pos:start="362:27" pos:end="362:107">(<argument pos:start="362:28" pos:end="362:36"><expr pos:start="362:28" pos:end="362:36"><literal type="string" pos:start="362:28" pos:end="362:36">"WARNING"</literal></expr></argument>,<argument pos:start="362:38" pos:end="362:106"><expr pos:start="362:38" pos:end="362:106"><literal type="string" pos:start="362:38" pos:end="362:99">"The following XML Error occured while handling plugin file: "</literal><operator pos:start="362:100" pos:end="362:100">+</operator><name pos:start="362:101" pos:end="362:106">report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="364:9" pos:end="364:38"><expr pos:start="364:9" pos:end="364:37"><call pos:start="364:9" pos:end="364:37"><name pos:start="364:9" pos:end="364:35"><name pos:start="364:9" pos:end="364:20">QApplication</name><operator pos:start="364:21" pos:end="364:22">::</operator><name pos:start="364:23" pos:end="364:35">processEvents</name></name><argument_list pos:start="364:36" pos:end="364:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <expr_stmt pos:start="367:5" pos:end="367:17"><expr pos:start="367:5" pos:end="367:16"><call pos:start="367:5" pos:end="367:16"><name pos:start="367:5" pos:end="367:14"><name pos:start="367:5" pos:end="367:7">idb</name><operator pos:start="367:8" pos:end="367:8">.</operator><name pos:start="367:9" pos:end="367:14">commit</name></name><argument_list pos:start="367:15" pos:end="367:16">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:63"><expr pos:start="369:5" pos:end="369:62"><call pos:start="369:5" pos:end="369:62"><name pos:start="369:5" pos:end="369:18"><name pos:start="369:5" pos:end="369:7">log</name><operator pos:start="369:8" pos:end="369:9">-&gt;</operator><name pos:start="369:10" pos:end="369:18">writeLine</name></name><argument_list pos:start="369:19" pos:end="369:62">(<argument pos:start="369:20" pos:end="369:25"><expr pos:start="369:20" pos:end="369:25"><literal type="string" pos:start="369:20" pos:end="369:25">"INFO"</literal></expr></argument>,<argument pos:start="369:27" pos:end="369:61"><expr pos:start="369:27" pos:end="369:61"><literal type="string" pos:start="369:27" pos:end="369:61">"Plugin file successfully imported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <emit pos:start="370:5" pos:end="370:111">emit <expr pos:start="370:10" pos:end="370:110"><call pos:start="370:10" pos:end="370:110"><name pos:start="370:10" pos:end="370:23">outputToScreen</name><argument_list pos:start="370:24" pos:end="370:110">(<argument pos:start="370:25" pos:end="370:31"><expr pos:start="370:25" pos:end="370:31"><literal type="string" pos:start="370:25" pos:end="370:31">"black"</literal></expr></argument>,<argument pos:start="370:33" pos:end="370:109"><expr pos:start="370:33" pos:end="370:109"><call pos:start="370:33" pos:end="370:80"><name pos:start="370:33" pos:end="370:39">QString</name><argument_list pos:start="370:40" pos:end="370:80">(<argument pos:start="370:41" pos:end="370:79"><expr pos:start="370:41" pos:end="370:79"><literal type="string" pos:start="370:41" pos:end="370:79">"Plugin file imported. Took %1 seconds"</literal></expr></argument>)</argument_list></call><operator pos:start="370:81" pos:end="370:81">.</operator><call pos:start="370:82" pos:end="370:109"><name pos:start="370:82" pos:end="370:84">arg</name><argument_list pos:start="370:85" pos:end="370:109">(<argument pos:start="370:86" pos:end="370:108"><expr pos:start="370:86" pos:end="370:108"><call pos:start="370:86" pos:end="370:99"><name pos:start="370:86" pos:end="370:97"><name pos:start="370:86" pos:end="370:89">time</name><operator pos:start="370:90" pos:end="370:90">.</operator><name pos:start="370:91" pos:end="370:97">elapsed</name></name><argument_list pos:start="370:98" pos:end="370:99">()</argument_list></call> <operator pos:start="370:101" pos:end="370:101">/</operator> <literal type="number" pos:start="370:103" pos:end="370:108">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<function pos:start="373:1" pos:end="455:1"><type pos:start="373:1" pos:end="373:4"><name pos:start="373:1" pos:end="373:4">void</name></type> <name pos:start="373:6" pos:end="373:37"><name pos:start="373:6" pos:end="373:15">Controller</name><operator pos:start="373:16" pos:end="373:17">::</operator><name pos:start="373:18" pos:end="373:37">generateFixationData</name></name><parameter_list pos:start="373:38" pos:end="373:82">(<parameter pos:start="373:39" pos:end="373:60"><decl pos:start="373:39" pos:end="373:60"><type pos:start="373:39" pos:end="373:60"><name pos:start="373:39" pos:end="373:54"><name pos:start="373:39" pos:end="373:45">QVector</name><argument_list type="generic" pos:start="373:46" pos:end="373:54">&lt;<argument pos:start="373:47" pos:end="373:53"><expr pos:start="373:47" pos:end="373:53"><name pos:start="373:47" pos:end="373:53">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="373:56" pos:end="373:60">tasks</name></decl></parameter>, <parameter pos:start="373:63" pos:end="373:81"><decl pos:start="373:63" pos:end="373:81"><type pos:start="373:63" pos:end="373:81"><name pos:start="373:63" pos:end="373:69">QString</name></type> <name pos:start="373:71" pos:end="373:81">algSettings</name></decl></parameter>)</parameter_list> <block pos:start="373:84" pos:end="455:1">{<block_content pos:start="374:5" pos:end="454:115">
    <expr_stmt pos:start="374:5" pos:end="374:78"><expr pos:start="374:5" pos:end="374:77"><call pos:start="374:5" pos:end="374:77"><name pos:start="374:5" pos:end="374:18"><name pos:start="374:5" pos:end="374:7">log</name><operator pos:start="374:8" pos:end="374:9">-&gt;</operator><name pos:start="374:10" pos:end="374:18">writeLine</name></name><argument_list pos:start="374:19" pos:end="374:77">(<argument pos:start="374:20" pos:end="374:25"><expr pos:start="374:20" pos:end="374:25"><literal type="string" pos:start="374:20" pos:end="374:25">"INFO"</literal></expr></argument>,<argument pos:start="374:27" pos:end="374:76"><expr pos:start="374:27" pos:end="374:76"><literal type="string" pos:start="374:27" pos:end="374:64">"Generating fixations with settings: "</literal><operator pos:start="374:65" pos:end="374:65">+</operator><name pos:start="374:66" pos:end="374:76">algSettings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="376:5" pos:end="376:23"><decl pos:start="376:5" pos:end="376:22"><type pos:start="376:5" pos:end="376:17"><name pos:start="376:5" pos:end="376:17">QElapsedTimer</name></type> <name pos:start="376:19" pos:end="376:22">time</name></decl>;</decl_stmt>
    <expr_stmt pos:start="377:5" pos:end="377:17"><expr pos:start="377:5" pos:end="377:16"><call pos:start="377:5" pos:end="377:16"><name pos:start="377:5" pos:end="377:14"><name pos:start="377:5" pos:end="377:8">time</name><operator pos:start="377:9" pos:end="377:9">.</operator><name pos:start="377:10" pos:end="377:14">start</name></name><argument_list pos:start="377:15" pos:end="377:16">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="379:5" pos:end="379:20"><decl pos:start="379:5" pos:end="379:19"><type pos:start="379:5" pos:end="379:7"><name pos:start="379:5" pos:end="379:7">int</name></type> <name pos:start="379:9" pos:end="379:15">counter</name> <init pos:start="379:17" pos:end="379:19">= <expr pos:start="379:19" pos:end="379:19"><literal type="number" pos:start="379:19" pos:end="379:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="381:5" pos:end="381:34"><decl pos:start="381:5" pos:end="381:33"><type pos:start="381:5" pos:end="381:24"><name pos:start="381:5" pos:end="381:24"><name pos:start="381:5" pos:end="381:7">std</name><operator pos:start="381:8" pos:end="381:9">::</operator><name pos:start="381:10" pos:end="381:15">vector</name><argument_list type="generic" pos:start="381:16" pos:end="381:24">&lt;<argument pos:start="381:17" pos:end="381:23"><expr pos:start="381:17" pos:end="381:23"><name pos:start="381:17" pos:end="381:23">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="381:26" pos:end="381:33">sessions</name></decl>;</decl_stmt>
    <for pos:start="382:5" pos:end="388:5">for<control pos:start="382:8" pos:end="382:23">(<init pos:start="382:9" pos:end="382:22"><decl pos:start="382:9" pos:end="382:22"><type pos:start="382:9" pos:end="382:12"><name pos:start="382:9" pos:end="382:12">auto</name></type> <name pos:start="382:14" pos:end="382:14">i</name> <range pos:start="382:16" pos:end="382:22">: <expr pos:start="382:18" pos:end="382:22"><name pos:start="382:18" pos:end="382:22">tasks</name></expr></range></decl></init>)</control> <block pos:start="382:25" pos:end="388:5">{<block_content pos:start="383:9" pos:end="387:9"> <comment type="line" pos:start="382:27" pos:end="382:72">// Get the sessions that the user wants to use</comment>
        <decl_stmt pos:start="383:9" pos:end="383:44"><decl pos:start="383:9" pos:end="383:43"><type pos:start="383:9" pos:end="383:19"><name pos:start="383:9" pos:end="383:19">QStringList</name></type> <name pos:start="383:21" pos:end="383:26">values</name> <init pos:start="383:28" pos:end="383:43">= <expr pos:start="383:30" pos:end="383:43"><call pos:start="383:30" pos:end="383:43"><name pos:start="383:30" pos:end="383:36"><name pos:start="383:30" pos:end="383:30">i</name><operator pos:start="383:31" pos:end="383:31">.</operator><name pos:start="383:32" pos:end="383:36">split</name></name><argument_list pos:start="383:37" pos:end="383:43">(<argument pos:start="383:38" pos:end="383:42"><expr pos:start="383:38" pos:end="383:42"><literal type="string" pos:start="383:38" pos:end="383:42">" - "</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="384:9" pos:end="387:9"><if pos:start="384:9" pos:end="387:9">if<condition pos:start="384:11" pos:end="384:28">(<expr pos:start="384:12" pos:end="384:27"><name pos:start="384:12" pos:end="384:20"><name pos:start="384:12" pos:end="384:17">values</name><index pos:start="384:18" pos:end="384:20">[<expr pos:start="384:19" pos:end="384:19"><literal type="number" pos:start="384:19" pos:end="384:19">2</literal></expr>]</index></name> <operator pos:start="384:22" pos:end="384:23">==</operator> <literal type="string" pos:start="384:25" pos:end="384:27">"1"</literal></expr>)</condition> <block pos:start="384:30" pos:end="387:9">{<block_content pos:start="385:13" pos:end="386:77">
            <expr_stmt pos:start="385:13" pos:end="385:90"><expr pos:start="385:13" pos:end="385:89"><call pos:start="385:13" pos:end="385:89"><name pos:start="385:13" pos:end="385:30"><name pos:start="385:13" pos:end="385:20">sessions</name><operator pos:start="385:21" pos:end="385:21">.</operator><name pos:start="385:22" pos:end="385:30">push_back</name></name><argument_list pos:start="385:31" pos:end="385:89">(<argument pos:start="385:32" pos:end="385:88"><expr pos:start="385:32" pos:end="385:88"><call pos:start="385:32" pos:end="385:88"><name pos:start="385:32" pos:end="385:67"><name pos:start="385:32" pos:end="385:34">idb</name><operator pos:start="385:35" pos:end="385:35">.</operator><name pos:start="385:36" pos:end="385:67">getSessionFromParticipantAndTask</name></name><argument_list pos:start="385:68" pos:end="385:88">(<argument pos:start="385:69" pos:end="385:77"><expr pos:start="385:69" pos:end="385:77"><name pos:start="385:69" pos:end="385:77"><name pos:start="385:69" pos:end="385:74">values</name><index pos:start="385:75" pos:end="385:77">[<expr pos:start="385:76" pos:end="385:76"><literal type="number" pos:start="385:76" pos:end="385:76">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="385:79" pos:end="385:87"><expr pos:start="385:79" pos:end="385:87"><name pos:start="385:79" pos:end="385:87"><name pos:start="385:79" pos:end="385:84">values</name><index pos:start="385:85" pos:end="385:87">[<expr pos:start="385:86" pos:end="385:86"><literal type="number" pos:start="385:86" pos:end="385:86">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="386:13" pos:end="386:77"><expr pos:start="386:13" pos:end="386:76"><name pos:start="386:13" pos:end="386:19">counter</name> <operator pos:start="386:21" pos:end="386:22">+=</operator> <call pos:start="386:24" pos:end="386:69"><name pos:start="386:24" pos:end="386:52"><name pos:start="386:24" pos:end="386:26">idb</name><operator pos:start="386:27" pos:end="386:27">.</operator><name pos:start="386:28" pos:end="386:52">getGazeTargetsFromSession</name></name><argument_list pos:start="386:53" pos:end="386:69">(<argument pos:start="386:54" pos:end="386:68"><expr pos:start="386:54" pos:end="386:68"><call pos:start="386:54" pos:end="386:68"><name pos:start="386:54" pos:end="386:66"><name pos:start="386:54" pos:end="386:61">sessions</name><operator pos:start="386:62" pos:end="386:62">.</operator><name pos:start="386:63" pos:end="386:66">back</name></name><argument_list pos:start="386:67" pos:end="386:68">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="386:70" pos:end="386:70">.</operator><call pos:start="386:71" pos:end="386:76"><name pos:start="386:71" pos:end="386:74">size</name><argument_list pos:start="386:75" pos:end="386:76">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

    <emit pos:start="390:5" pos:end="390:37">emit <expr pos:start="390:10" pos:end="390:36"><call pos:start="390:10" pos:end="390:36"><name pos:start="390:10" pos:end="390:25">startProgressBar</name><argument_list pos:start="390:26" pos:end="390:36">(<argument pos:start="390:27" pos:end="390:27"><expr pos:start="390:27" pos:end="390:27"><literal type="number" pos:start="390:27" pos:end="390:27">0</literal></expr></argument>,<argument pos:start="390:29" pos:end="390:35"><expr pos:start="390:29" pos:end="390:35"><name pos:start="390:29" pos:end="390:35">counter</name></expr></argument>)</argument_list></call></expr>;</emit>

    <expr_stmt pos:start="392:5" pos:end="392:27"><expr pos:start="392:5" pos:end="392:26"><call pos:start="392:5" pos:end="392:26"><name pos:start="392:5" pos:end="392:24"><name pos:start="392:5" pos:end="392:7">idb</name><operator pos:start="392:8" pos:end="392:8">.</operator><name pos:start="392:9" pos:end="392:24">startTransaction</name></name><argument_list pos:start="392:25" pos:end="392:26">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="393:5" pos:end="393:16"><expr pos:start="393:5" pos:end="393:15"><name pos:start="393:5" pos:end="393:11">counter</name> <operator pos:start="393:13" pos:end="393:13">=</operator> <literal type="number" pos:start="393:15" pos:end="393:15">1</literal></expr>;</expr_stmt>

    <for pos:start="395:5" pos:end="451:5">for<control pos:start="395:8" pos:end="395:35">(<init pos:start="395:9" pos:end="395:34"><decl pos:start="395:9" pos:end="395:34"><type pos:start="395:9" pos:end="395:12"><name pos:start="395:9" pos:end="395:12">auto</name></type> <name pos:start="395:14" pos:end="395:23">session_id</name> <range pos:start="395:25" pos:end="395:34">: <expr pos:start="395:27" pos:end="395:34"><name pos:start="395:27" pos:end="395:34">sessions</name></expr></range></decl></init>)</control> <block pos:start="395:37" pos:end="451:5">{<block_content pos:start="397:9" pos:end="450:38">
        <comment type="line" pos:start="396:9" pos:end="396:40">//std::cout &lt;&lt; "?" &lt;&lt; std::endl;</comment>
        <decl_stmt pos:start="397:9" pos:end="397:44"><decl pos:start="397:9" pos:end="397:43"><type pos:start="397:9" pos:end="397:25"><name pos:start="397:9" pos:end="397:25"><name pos:start="397:9" pos:end="397:15">QVector</name><argument_list type="generic" pos:start="397:16" pos:end="397:25">&lt;<argument pos:start="397:17" pos:end="397:24"><expr pos:start="397:17" pos:end="397:24"><name pos:start="397:17" pos:end="397:24">Fixation</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="397:27" pos:end="397:43">session_fixations</name></decl>;</decl_stmt>
        <decl_stmt pos:start="398:9" pos:end="398:82"><decl pos:start="398:9" pos:end="398:81"><type pos:start="398:9" pos:end="398:24"><name pos:start="398:9" pos:end="398:24"><name pos:start="398:9" pos:end="398:15">QVector</name><argument_list type="generic" pos:start="398:16" pos:end="398:24">&lt;<argument pos:start="398:17" pos:end="398:23"><expr pos:start="398:17" pos:end="398:23"><name pos:start="398:17" pos:end="398:23">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="398:26" pos:end="398:37">gaze_targets</name> <init pos:start="398:39" pos:end="398:81">= <expr pos:start="398:41" pos:end="398:81"><call pos:start="398:41" pos:end="398:81"><name pos:start="398:41" pos:end="398:69"><name pos:start="398:41" pos:end="398:43">idb</name><operator pos:start="398:44" pos:end="398:44">.</operator><name pos:start="398:45" pos:end="398:69">getGazeTargetsFromSession</name></name><argument_list pos:start="398:70" pos:end="398:81">(<argument pos:start="398:71" pos:end="398:80"><expr pos:start="398:71" pos:end="398:80"><name pos:start="398:71" pos:end="398:80">session_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="399:9" pos:end="399:41"><decl pos:start="399:9" pos:end="399:40"><type pos:start="399:9" pos:end="399:15"><name pos:start="399:9" pos:end="399:15">QString</name></type> <name pos:start="399:17" pos:end="399:40">fixation_filter_settings</name></decl>;</decl_stmt>
        <for pos:start="400:9" pos:end="426:9">for<control pos:start="400:12" pos:end="400:44">(<init pos:start="400:13" pos:end="400:43"><decl pos:start="400:13" pos:end="400:43"><type pos:start="400:13" pos:end="400:16"><name pos:start="400:13" pos:end="400:16">auto</name></type> <name pos:start="400:18" pos:end="400:28">gaze_target</name> <range pos:start="400:30" pos:end="400:43">: <expr pos:start="400:32" pos:end="400:43"><name pos:start="400:32" pos:end="400:43">gaze_targets</name></expr></range></decl></init>)</control> <block pos:start="400:46" pos:end="426:9">{<block_content pos:start="402:13" pos:end="425:29">
            <comment type="line" pos:start="401:13" pos:end="401:96">//emit outputToScreen("black","Generating fixations for gaze_target: "+gaze_target);</comment>
            <decl_stmt pos:start="402:13" pos:end="402:91"><decl pos:start="402:13" pos:end="402:90"><type pos:start="402:13" pos:end="402:25"><name pos:start="402:13" pos:end="402:25"><name pos:start="402:13" pos:end="402:19">QVector</name><argument_list type="generic" pos:start="402:20" pos:end="402:25">&lt;<argument pos:start="402:21" pos:end="402:24"><expr pos:start="402:21" pos:end="402:24"><name pos:start="402:21" pos:end="402:24">Gaze</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="402:27" pos:end="402:31">gazes</name> <init pos:start="402:33" pos:end="402:90">= <expr pos:start="402:35" pos:end="402:90"><call pos:start="402:35" pos:end="402:90"><name pos:start="402:35" pos:end="402:66"><name pos:start="402:35" pos:end="402:37">idb</name><operator pos:start="402:38" pos:end="402:38">.</operator><name pos:start="402:39" pos:end="402:66">getGazesFromSessionAndTarget</name></name><argument_list pos:start="402:67" pos:end="402:90">(<argument pos:start="402:68" pos:end="402:77"><expr pos:start="402:68" pos:end="402:77"><name pos:start="402:68" pos:end="402:77">session_id</name></expr></argument>,<argument pos:start="402:79" pos:end="402:89"><expr pos:start="402:79" pos:end="402:89"><name pos:start="402:79" pos:end="402:89">gaze_target</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="403:13" pos:end="405:13"><if pos:start="403:13" pos:end="405:13">if<condition pos:start="403:15" pos:end="403:35">(<expr pos:start="403:16" pos:end="403:34"><call pos:start="403:16" pos:end="403:29"><name pos:start="403:16" pos:end="403:27"><name pos:start="403:16" pos:end="403:20">gazes</name><operator pos:start="403:21" pos:end="403:21">.</operator><name pos:start="403:22" pos:end="403:27">length</name></name><argument_list pos:start="403:28" pos:end="403:29">()</argument_list></call> <operator pos:start="403:31" pos:end="403:32">==</operator> <literal type="number" pos:start="403:34" pos:end="403:34">0</literal></expr>)</condition> <block pos:start="403:37" pos:end="405:13">{<block_content pos:start="404:17" pos:end="404:25">
                <continue pos:start="404:17" pos:end="404:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <decl_stmt pos:start="406:13" pos:end="406:41"><decl pos:start="406:13" pos:end="406:40"><type pos:start="406:13" pos:end="406:30"><name pos:start="406:13" pos:end="406:29">FixationAlgorithm</name><modifier pos:start="406:30" pos:end="406:30">*</modifier></type> <name pos:start="406:32" pos:end="406:40">algorithm</name></decl>;</decl_stmt>
            <decl_stmt pos:start="407:13" pos:end="407:58"><decl pos:start="407:13" pos:end="407:57"><type pos:start="407:13" pos:end="407:23"><name pos:start="407:13" pos:end="407:23">QStringList</name></type> <name pos:start="407:25" pos:end="407:32">settings</name> <init pos:start="407:34" pos:end="407:57">= <expr pos:start="407:36" pos:end="407:57"><call pos:start="407:36" pos:end="407:57"><name pos:start="407:36" pos:end="407:52"><name pos:start="407:36" pos:end="407:46">algSettings</name><operator pos:start="407:47" pos:end="407:47">.</operator><name pos:start="407:48" pos:end="407:52">split</name></name><argument_list pos:start="407:53" pos:end="407:57">(<argument pos:start="407:54" pos:end="407:56"><expr pos:start="407:54" pos:end="407:56"><literal type="string" pos:start="407:54" pos:end="407:56">"-"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="408:13" pos:end="420:118"><if pos:start="408:13" pos:end="411:13">if<condition pos:start="408:15" pos:end="408:38">(<expr pos:start="408:16" pos:end="408:37"><name pos:start="408:16" pos:end="408:26"><name pos:start="408:16" pos:end="408:23">settings</name><index pos:start="408:24" pos:end="408:26">[<expr pos:start="408:25" pos:end="408:25"><literal type="number" pos:start="408:25" pos:end="408:25">0</literal></expr>]</index></name> <operator pos:start="408:28" pos:end="408:29">==</operator> <literal type="string" pos:start="408:31" pos:end="408:37">"BASIC"</literal></expr>)</condition> <block pos:start="408:40" pos:end="411:13">{<block_content pos:start="410:17" pos:end="410:132">
                <comment type="line" pos:start="409:17" pos:end="409:63">//BASIC-4-35-40 = BASIC-window_size-radius-peak</comment>
                <expr_stmt pos:start="410:17" pos:end="410:132"><expr pos:start="410:17" pos:end="410:131"><name pos:start="410:17" pos:end="410:25">algorithm</name> <operator pos:start="410:27" pos:end="410:27">=</operator> <operator pos:start="410:29" pos:end="410:31">new</operator> <call pos:start="410:33" pos:end="410:131"><name pos:start="410:33" pos:end="410:46">BasicAlgorithm</name><argument_list pos:start="410:47" pos:end="410:131">(<argument pos:start="410:48" pos:end="410:52"><expr pos:start="410:48" pos:end="410:52"><name pos:start="410:48" pos:end="410:52">gazes</name></expr></argument>,<argument pos:start="410:54" pos:end="410:82"><expr pos:start="410:54" pos:end="410:82"><name pos:start="410:54" pos:end="410:74"><name pos:start="410:54" pos:end="410:61">settings</name><index pos:start="410:62" pos:end="410:74">[<expr pos:start="410:63" pos:end="410:73"><name pos:start="410:63" pos:end="410:73">window_size</name></expr>]</index></name><operator pos:start="410:75" pos:end="410:75">.</operator><call pos:start="410:76" pos:end="410:82"><name pos:start="410:76" pos:end="410:80">toInt</name><argument_list pos:start="410:81" pos:end="410:82">()</argument_list></call></expr></argument>,<argument pos:start="410:84" pos:end="410:107"><expr pos:start="410:84" pos:end="410:107"><name pos:start="410:84" pos:end="410:99"><name pos:start="410:84" pos:end="410:91">settings</name><index pos:start="410:92" pos:end="410:99">[<expr pos:start="410:93" pos:end="410:98"><name pos:start="410:93" pos:end="410:98">radius</name></expr>]</index></name><operator pos:start="410:100" pos:end="410:100">.</operator><call pos:start="410:101" pos:end="410:107"><name pos:start="410:101" pos:end="410:105">toInt</name><argument_list pos:start="410:106" pos:end="410:107">()</argument_list></call></expr></argument>,<argument pos:start="410:109" pos:end="410:130"><expr pos:start="410:109" pos:end="410:130"><name pos:start="410:109" pos:end="410:122"><name pos:start="410:109" pos:end="410:116">settings</name><index pos:start="410:117" pos:end="410:122">[<expr pos:start="410:118" pos:end="410:121"><name pos:start="410:118" pos:end="410:121">peak</name></expr>]</index></name><operator pos:start="410:123" pos:end="410:123">.</operator><call pos:start="410:124" pos:end="410:130"><name pos:start="410:124" pos:end="410:128">toInt</name><argument_list pos:start="410:129" pos:end="410:130">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="412:13" pos:end="415:13">else if<condition pos:start="412:20" pos:end="412:41">(<expr pos:start="412:21" pos:end="412:40"><name pos:start="412:21" pos:end="412:31"><name pos:start="412:21" pos:end="412:28">settings</name><index pos:start="412:29" pos:end="412:31">[<expr pos:start="412:30" pos:end="412:30"><literal type="number" pos:start="412:30" pos:end="412:30">0</literal></expr>]</index></name> <operator pos:start="412:33" pos:end="412:34">==</operator> <literal type="string" pos:start="412:36" pos:end="412:40">"IDT"</literal></expr>)</condition> <block pos:start="412:43" pos:end="415:13">{<block_content pos:start="414:17" pos:end="414:115">
                <comment type="line" pos:start="413:17" pos:end="413:61">//IDT-10-125 = IDT-duration_window-dispersion</comment>
                <expr_stmt pos:start="414:17" pos:end="414:115"><expr pos:start="414:17" pos:end="414:114"><name pos:start="414:17" pos:end="414:25">algorithm</name> <operator pos:start="414:27" pos:end="414:27">=</operator> <operator pos:start="414:29" pos:end="414:31">new</operator> <call pos:start="414:33" pos:end="414:114"><name pos:start="414:33" pos:end="414:44">IDTAlgorithm</name><argument_list pos:start="414:45" pos:end="414:114">(<argument pos:start="414:46" pos:end="414:50"><expr pos:start="414:46" pos:end="414:50"><name pos:start="414:46" pos:end="414:50">gazes</name></expr></argument>,<argument pos:start="414:52" pos:end="414:84"><expr pos:start="414:52" pos:end="414:84"><name pos:start="414:52" pos:end="414:76"><name pos:start="414:52" pos:end="414:59">settings</name><index pos:start="414:60" pos:end="414:76">[<expr pos:start="414:61" pos:end="414:75"><name pos:start="414:61" pos:end="414:75">duration_window</name></expr>]</index></name><operator pos:start="414:77" pos:end="414:77">.</operator><call pos:start="414:78" pos:end="414:84"><name pos:start="414:78" pos:end="414:82">toInt</name><argument_list pos:start="414:83" pos:end="414:84">()</argument_list></call></expr></argument>,<argument pos:start="414:86" pos:end="414:113"><expr pos:start="414:86" pos:end="414:113"><name pos:start="414:86" pos:end="414:105"><name pos:start="414:86" pos:end="414:93">settings</name><index pos:start="414:94" pos:end="414:105">[<expr pos:start="414:95" pos:end="414:104"><name pos:start="414:95" pos:end="414:104">dispersion</name></expr>]</index></name><operator pos:start="414:106" pos:end="414:106">.</operator><call pos:start="414:107" pos:end="414:113"><name pos:start="414:107" pos:end="414:111">toInt</name><argument_list pos:start="414:112" pos:end="414:113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <if type="elseif" pos:start="416:13" pos:end="419:13">else if<condition pos:start="416:20" pos:end="416:41">(<expr pos:start="416:21" pos:end="416:40"><name pos:start="416:21" pos:end="416:31"><name pos:start="416:21" pos:end="416:28">settings</name><index pos:start="416:29" pos:end="416:31">[<expr pos:start="416:30" pos:end="416:30"><literal type="number" pos:start="416:30" pos:end="416:30">0</literal></expr>]</index></name> <operator pos:start="416:33" pos:end="416:34">==</operator> <literal type="string" pos:start="416:36" pos:end="416:40">"IVT"</literal></expr>)</condition> <block pos:start="416:43" pos:end="419:13">{<block_content pos:start="418:17" pos:end="418:106">
                <comment type="line" pos:start="417:17" pos:end="417:51">//IVT-50-80 = IVT-velocity-duration</comment>
                <expr_stmt pos:start="418:17" pos:end="418:106"><expr pos:start="418:17" pos:end="418:105"><name pos:start="418:17" pos:end="418:25">algorithm</name> <operator pos:start="418:27" pos:end="418:27">=</operator> <operator pos:start="418:29" pos:end="418:31">new</operator> <call pos:start="418:33" pos:end="418:105"><name pos:start="418:33" pos:end="418:44">IVTAlgorithm</name><argument_list pos:start="418:45" pos:end="418:105">(<argument pos:start="418:46" pos:end="418:50"><expr pos:start="418:46" pos:end="418:50"><name pos:start="418:46" pos:end="418:50">gazes</name></expr></argument>,<argument pos:start="418:52" pos:end="418:77"><expr pos:start="418:52" pos:end="418:77"><name pos:start="418:52" pos:end="418:69"><name pos:start="418:52" pos:end="418:59">settings</name><index pos:start="418:60" pos:end="418:69">[<expr pos:start="418:61" pos:end="418:68"><name pos:start="418:61" pos:end="418:68">velocity</name></expr>]</index></name><operator pos:start="418:70" pos:end="418:70">.</operator><call pos:start="418:71" pos:end="418:77"><name pos:start="418:71" pos:end="418:75">toInt</name><argument_list pos:start="418:76" pos:end="418:77">()</argument_list></call></expr></argument>,<argument pos:start="418:79" pos:end="418:104"><expr pos:start="418:79" pos:end="418:104"><name pos:start="418:79" pos:end="418:96"><name pos:start="418:79" pos:end="418:86">settings</name><index pos:start="418:87" pos:end="418:96">[<expr pos:start="418:88" pos:end="418:95"><name pos:start="418:88" pos:end="418:95">duration</name></expr>]</index></name><operator pos:start="418:97" pos:end="418:97">.</operator><call pos:start="418:98" pos:end="418:104"><name pos:start="418:98" pos:end="418:102">toInt</name><argument_list pos:start="418:103" pos:end="418:104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if>
            <else pos:start="420:13" pos:end="420:118">else <block pos:start="420:18" pos:end="420:118">{<block_content pos:start="420:20" pos:end="420:116"> <emit pos:start="420:20" pos:end="420:108">emit <expr pos:start="420:25" pos:end="420:107"><call pos:start="420:25" pos:end="420:107"><name pos:start="420:25" pos:end="420:31">warning</name><argument_list pos:start="420:32" pos:end="420:107">(<argument pos:start="420:33" pos:end="420:49"><expr pos:start="420:33" pos:end="420:49"><literal type="string" pos:start="420:33" pos:end="420:49">"Algorithm Error"</literal></expr></argument>,<argument pos:start="420:51" pos:end="420:106"><expr pos:start="420:51" pos:end="420:106"><literal type="string" pos:start="420:51" pos:end="420:92">"An invalid algorithm type was supplied: "</literal> <operator pos:start="420:94" pos:end="420:94">+</operator> <name pos:start="420:96" pos:end="420:106"><name pos:start="420:96" pos:end="420:103">settings</name><index pos:start="420:104" pos:end="420:106">[<expr pos:start="420:105" pos:end="420:105"><literal type="number" pos:start="420:105" pos:end="420:105">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</emit> <return pos:start="420:110" pos:end="420:116">return;</return> </block_content>}</block></else></if_stmt> <comment type="line" pos:start="420:120" pos:end="420:135">// Error handler</comment>
            <expr_stmt pos:start="421:13" pos:end="421:69"><expr pos:start="421:13" pos:end="421:68"><call pos:start="421:13" pos:end="421:68"><name pos:start="421:13" pos:end="421:36"><name pos:start="421:13" pos:end="421:29">session_fixations</name><operator pos:start="421:30" pos:end="421:30">.</operator><name pos:start="421:31" pos:end="421:36">append</name></name><argument_list pos:start="421:37" pos:end="421:68">(<argument pos:start="421:38" pos:end="421:67"><expr pos:start="421:38" pos:end="421:67"><call pos:start="421:38" pos:end="421:67"><name pos:start="421:38" pos:end="421:65"><name pos:start="421:38" pos:end="421:46">algorithm</name><operator pos:start="421:47" pos:end="421:48">-&gt;</operator><name pos:start="421:49" pos:end="421:65">generateFixations</name></name><argument_list pos:start="421:66" pos:end="421:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="422:13" pos:end="422:77"><expr pos:start="422:13" pos:end="422:76"><name pos:start="422:13" pos:end="422:36">fixation_filter_settings</name> <operator pos:start="422:38" pos:end="422:38">=</operator> <call pos:start="422:40" pos:end="422:76"><name pos:start="422:40" pos:end="422:74"><name pos:start="422:40" pos:end="422:48">algorithm</name><operator pos:start="422:49" pos:end="422:50">-&gt;</operator><name pos:start="422:51" pos:end="422:74">generateFixationSettings</name></name><argument_list pos:start="422:75" pos:end="422:76">()</argument_list></call></expr>;</expr_stmt>
            <emit pos:start="423:13" pos:end="423:46">emit <expr pos:start="423:18" pos:end="423:45"><call pos:start="423:18" pos:end="423:45"><name pos:start="423:18" pos:end="423:36">setProgressBarValue</name><argument_list pos:start="423:37" pos:end="423:45">(<argument pos:start="423:38" pos:end="423:44"><expr pos:start="423:38" pos:end="423:44"><name pos:start="423:38" pos:end="423:44">counter</name></expr></argument>)</argument_list></call></expr>;</emit> <expr_stmt pos:start="423:48" pos:end="423:57"><expr pos:start="423:48" pos:end="423:56"><operator pos:start="423:48" pos:end="423:49">++</operator><name pos:start="423:50" pos:end="423:56">counter</name></expr>;</expr_stmt>
            <expr_stmt pos:start="424:13" pos:end="424:42"><expr pos:start="424:13" pos:end="424:41"><call pos:start="424:13" pos:end="424:41"><name pos:start="424:13" pos:end="424:39"><name pos:start="424:13" pos:end="424:24">QApplication</name><operator pos:start="424:25" pos:end="424:26">::</operator><name pos:start="424:27" pos:end="424:39">processEvents</name></name><argument_list pos:start="424:40" pos:end="424:41">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="425:13" pos:end="425:29"><expr pos:start="425:13" pos:end="425:28"><operator pos:start="425:13" pos:end="425:18">delete</operator> <name pos:start="425:20" pos:end="425:28">algorithm</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="427:9" pos:end="429:9">for<control pos:start="427:12" pos:end="427:91">(<init pos:start="427:13" pos:end="427:50"><decl pos:start="427:13" pos:end="427:49"><type pos:start="427:13" pos:end="427:16"><name pos:start="427:13" pos:end="427:16">auto</name></type> <name pos:start="427:18" pos:end="427:21">item</name> <init pos:start="427:23" pos:end="427:49">= <expr pos:start="427:25" pos:end="427:49"><call pos:start="427:25" pos:end="427:49"><name pos:start="427:25" pos:end="427:47"><name pos:start="427:25" pos:end="427:41">session_fixations</name><operator pos:start="427:42" pos:end="427:42">.</operator><name pos:start="427:43" pos:end="427:47">begin</name></name><argument_list pos:start="427:48" pos:end="427:49">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="427:52" pos:end="427:83"><expr pos:start="427:52" pos:end="427:82"><name pos:start="427:52" pos:end="427:55">item</name> <operator pos:start="427:57" pos:end="427:58">!=</operator> <call pos:start="427:60" pos:end="427:82"><name pos:start="427:60" pos:end="427:80"><name pos:start="427:60" pos:end="427:76">session_fixations</name><operator pos:start="427:77" pos:end="427:77">.</operator><name pos:start="427:78" pos:end="427:80">end</name></name><argument_list pos:start="427:81" pos:end="427:82">()</argument_list></call></expr>;</condition> <incr pos:start="427:85" pos:end="427:90"><expr pos:start="427:85" pos:end="427:90"><operator pos:start="427:85" pos:end="427:86">++</operator><name pos:start="427:87" pos:end="427:90">item</name></expr></incr>)</control> <block pos:start="427:93" pos:end="429:9">{<block_content pos:start="428:13" pos:end="428:44">
            <expr_stmt pos:start="428:13" pos:end="428:44"><expr pos:start="428:13" pos:end="428:43"><call pos:start="428:13" pos:end="428:43"><name pos:start="428:13" pos:end="428:41"><name pos:start="428:13" pos:end="428:16">item</name><operator pos:start="428:17" pos:end="428:18">-&gt;</operator><name pos:start="428:19" pos:end="428:41">calculateDatabaseFields</name></name><argument_list pos:start="428:42" pos:end="428:43">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="430:9" pos:end="430:178"><expr pos:start="430:9" pos:end="430:177"><call pos:start="430:9" pos:end="430:177"><name pos:start="430:9" pos:end="430:17"><name pos:start="430:9" pos:end="430:11">std</name><operator pos:start="430:12" pos:end="430:13">::</operator><name pos:start="430:14" pos:end="430:17">sort</name></name><argument_list pos:start="430:18" pos:end="430:177">(<argument pos:start="430:19" pos:end="430:43"><expr pos:start="430:19" pos:end="430:43"><call pos:start="430:19" pos:end="430:43"><name pos:start="430:19" pos:end="430:41"><name pos:start="430:19" pos:end="430:35">session_fixations</name><operator pos:start="430:36" pos:end="430:36">.</operator><name pos:start="430:37" pos:end="430:41">begin</name></name><argument_list pos:start="430:42" pos:end="430:43">()</argument_list></call></expr></argument>, <argument pos:start="430:46" pos:end="430:68"><expr pos:start="430:46" pos:end="430:68"><call pos:start="430:46" pos:end="430:68"><name pos:start="430:46" pos:end="430:66"><name pos:start="430:46" pos:end="430:62">session_fixations</name><operator pos:start="430:63" pos:end="430:63">.</operator><name pos:start="430:64" pos:end="430:66">end</name></name><argument_list pos:start="430:67" pos:end="430:68">()</argument_list></call></expr></argument>, <argument pos:start="430:71" pos:end="430:176"><expr pos:start="430:71" pos:end="430:176"><lambda pos:start="430:71" pos:end="430:176"><capture pos:start="430:71" pos:end="430:72">[]</capture><parameter_list pos:start="430:73" pos:end="430:110">(<parameter pos:start="430:74" pos:end="430:90"><decl pos:start="430:74" pos:end="430:90"><type pos:start="430:74" pos:end="430:90"><specifier pos:start="430:74" pos:end="430:78">const</specifier> <name pos:start="430:80" pos:end="430:87">Fixation</name><modifier pos:start="430:88" pos:end="430:88">&amp;</modifier></type> <name pos:start="430:90" pos:end="430:90">a</name></decl></parameter>, <parameter pos:start="430:93" pos:end="430:109"><decl pos:start="430:93" pos:end="430:109"><type pos:start="430:93" pos:end="430:109"><specifier pos:start="430:93" pos:end="430:97">const</specifier> <name pos:start="430:99" pos:end="430:106">Fixation</name><modifier pos:start="430:107" pos:end="430:107">&amp;</modifier></type> <name pos:start="430:109" pos:end="430:109">b</name></decl></parameter>)</parameter_list> -&gt; <type pos:start="430:115" pos:end="430:118"><name pos:start="430:115" pos:end="430:118">bool</name></type> <block pos:start="430:120" pos:end="430:176">{<block_content pos:start="430:122" pos:end="430:174"> <return pos:start="430:122" pos:end="430:174">return <expr pos:start="430:129" pos:end="430:173"><name pos:start="430:129" pos:end="430:149"><name pos:start="430:129" pos:end="430:129">a</name><operator pos:start="430:130" pos:end="430:130">.</operator><name pos:start="430:131" pos:end="430:149">fixation_event_time</name></name> <operator pos:start="430:151" pos:end="430:151">&gt;</operator> <name pos:start="430:153" pos:end="430:173"><name pos:start="430:153" pos:end="430:153">b</name><operator pos:start="430:154" pos:end="430:154">.</operator><name pos:start="430:155" pos:end="430:173">fixation_event_time</name></name></expr>;</return> </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="431:9" pos:end="431:146"><decl pos:start="431:9" pos:end="431:145"><type pos:start="431:9" pos:end="431:33"><name pos:start="431:9" pos:end="431:33"><name pos:start="431:9" pos:end="431:11">std</name><operator pos:start="431:12" pos:end="431:13">::</operator><name pos:start="431:14" pos:end="431:19">chrono</name><operator pos:start="431:20" pos:end="431:21">::</operator><name pos:start="431:22" pos:end="431:33">milliseconds</name></name></type> <name pos:start="431:35" pos:end="431:36">ms</name> <init pos:start="431:38" pos:end="431:145">= <expr pos:start="431:40" pos:end="431:145"><call pos:start="431:40" pos:end="431:145"><name pos:start="431:40" pos:end="431:92"><name pos:start="431:40" pos:end="431:42">std</name><operator pos:start="431:43" pos:end="431:44">::</operator><name pos:start="431:45" pos:end="431:50">chrono</name><operator pos:start="431:51" pos:end="431:52">::</operator><name pos:start="431:53" pos:end="431:65">duration_cast</name><argument_list type="generic" pos:start="431:66" pos:end="431:92">&lt;<argument pos:start="431:67" pos:end="431:91"><expr pos:start="431:67" pos:end="431:91"><name pos:start="431:67" pos:end="431:91"><name pos:start="431:67" pos:end="431:69">std</name><operator pos:start="431:70" pos:end="431:71">::</operator><name pos:start="431:72" pos:end="431:77">chrono</name><operator pos:start="431:78" pos:end="431:79">::</operator><name pos:start="431:80" pos:end="431:91">milliseconds</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:start="431:93" pos:end="431:145">(<argument pos:start="431:94" pos:end="431:144"><expr pos:start="431:94" pos:end="431:144"><call pos:start="431:94" pos:end="431:125"><name pos:start="431:94" pos:end="431:123"><name pos:start="431:94" pos:end="431:96">std</name><operator pos:start="431:97" pos:end="431:98">::</operator><name pos:start="431:99" pos:end="431:104">chrono</name><operator pos:start="431:105" pos:end="431:106">::</operator><name pos:start="431:107" pos:end="431:118">system_clock</name><operator pos:start="431:119" pos:end="431:120">::</operator><name pos:start="431:121" pos:end="431:123">now</name></name><argument_list pos:start="431:124" pos:end="431:125">()</argument_list></call><operator pos:start="431:126" pos:end="431:126">.</operator><call pos:start="431:127" pos:end="431:144"><name pos:start="431:127" pos:end="431:142">time_since_epoch</name><argument_list pos:start="431:143" pos:end="431:144">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="432:9" pos:end="432:62"><decl pos:start="432:9" pos:end="432:61"><type pos:start="432:9" pos:end="432:15"><name pos:start="432:9" pos:end="432:15">QString</name></type> <name pos:start="432:17" pos:end="432:31">fixation_run_id</name> <init pos:start="432:33" pos:end="432:61">= <expr pos:start="432:35" pos:end="432:61"><call pos:start="432:35" pos:end="432:61"><name pos:start="432:35" pos:end="432:49"><name pos:start="432:35" pos:end="432:41">QString</name><operator pos:start="432:42" pos:end="432:43">::</operator><name pos:start="432:44" pos:end="432:49">number</name></name><argument_list pos:start="432:50" pos:end="432:61">(<argument pos:start="432:51" pos:end="432:60"><expr pos:start="432:51" pos:end="432:60"><call pos:start="432:51" pos:end="432:60"><name pos:start="432:51" pos:end="432:58"><name pos:start="432:51" pos:end="432:52">ms</name><operator pos:start="432:53" pos:end="432:53">.</operator><name pos:start="432:54" pos:end="432:58">count</name></name><argument_list pos:start="432:59" pos:end="432:60">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="433:9" pos:end="433:53"><decl pos:start="433:9" pos:end="433:52"><type pos:start="433:9" pos:end="433:15"><name pos:start="433:9" pos:end="433:15">QString</name></type> <name pos:start="433:17" pos:end="433:34">fixation_date_time</name> <init pos:start="433:36" pos:end="433:52">= <expr pos:start="433:38" pos:end="433:52"><name pos:start="433:38" pos:end="433:52">fixation_run_id</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="433:55" pos:end="433:100">// This will probably be changed in the future</comment>
        <expr_stmt pos:start="434:9" pos:end="434:102"><expr pos:start="434:9" pos:end="434:101"><call pos:start="434:9" pos:end="434:101"><name pos:start="434:9" pos:end="434:29"><name pos:start="434:9" pos:end="434:11">idb</name><operator pos:start="434:12" pos:end="434:12">.</operator><name pos:start="434:13" pos:end="434:29">insertFixationRun</name></name><argument_list pos:start="434:30" pos:end="434:101">(<argument pos:start="434:31" pos:end="434:45"><expr pos:start="434:31" pos:end="434:45"><name pos:start="434:31" pos:end="434:45">fixation_run_id</name></expr></argument>,<argument pos:start="434:47" pos:end="434:56"><expr pos:start="434:47" pos:end="434:56"><name pos:start="434:47" pos:end="434:56">session_id</name></expr></argument>,<argument pos:start="434:58" pos:end="434:75"><expr pos:start="434:58" pos:end="434:75"><name pos:start="434:58" pos:end="434:75">fixation_date_time</name></expr></argument>,<argument pos:start="434:77" pos:end="434:100"><expr pos:start="434:77" pos:end="434:100"><name pos:start="434:77" pos:end="434:100">fixation_filter_settings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt pos:start="436:9" pos:end="436:31"><decl pos:start="436:9" pos:end="436:30"><type pos:start="436:9" pos:end="436:11"><name pos:start="436:9" pos:end="436:11">int</name></type> <name pos:start="436:13" pos:end="436:26">fixation_order</name> <init pos:start="436:28" pos:end="436:30">= <expr pos:start="436:30" pos:end="436:30"><literal type="number" pos:start="436:30" pos:end="436:30">1</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="437:9" pos:end="449:9">for<control pos:start="437:12" pos:end="437:88">(<init pos:start="437:13" pos:end="437:49"><decl pos:start="437:13" pos:end="437:48"><type pos:start="437:13" pos:end="437:16"><name pos:start="437:13" pos:end="437:16">auto</name></type> <name pos:start="437:18" pos:end="437:20">fix</name> <init pos:start="437:22" pos:end="437:48">= <expr pos:start="437:24" pos:end="437:48"><call pos:start="437:24" pos:end="437:48"><name pos:start="437:24" pos:end="437:46"><name pos:start="437:24" pos:end="437:40">session_fixations</name><operator pos:start="437:41" pos:end="437:41">.</operator><name pos:start="437:42" pos:end="437:46">begin</name></name><argument_list pos:start="437:47" pos:end="437:48">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="437:51" pos:end="437:81"><expr pos:start="437:51" pos:end="437:80"><name pos:start="437:51" pos:end="437:53">fix</name> <operator pos:start="437:55" pos:end="437:56">!=</operator> <call pos:start="437:58" pos:end="437:80"><name pos:start="437:58" pos:end="437:78"><name pos:start="437:58" pos:end="437:74">session_fixations</name><operator pos:start="437:75" pos:end="437:75">.</operator><name pos:start="437:76" pos:end="437:78">end</name></name><argument_list pos:start="437:79" pos:end="437:80">()</argument_list></call></expr>;</condition> <incr pos:start="437:83" pos:end="437:87"><expr pos:start="437:83" pos:end="437:87"><operator pos:start="437:83" pos:end="437:84">++</operator><name pos:start="437:85" pos:end="437:87">fix</name></expr></incr>)</control> <block pos:start="437:90" pos:end="449:9">{<block_content pos:start="438:13" pos:end="448:13">
            <decl_stmt pos:start="438:13" pos:end="438:65"><decl pos:start="438:13" pos:end="438:64"><type pos:start="438:13" pos:end="438:19"><name pos:start="438:13" pos:end="438:19">QString</name></type> <name pos:start="438:21" pos:end="438:31">fixation_id</name> <init pos:start="438:33" pos:end="438:64">= <expr pos:start="438:35" pos:end="438:64"><call pos:start="438:35" pos:end="438:53"><name pos:start="438:35" pos:end="438:51"><name pos:start="438:35" pos:end="438:39">QUuid</name><operator pos:start="438:40" pos:end="438:41">::</operator><name pos:start="438:42" pos:end="438:51">createUuid</name></name><argument_list pos:start="438:52" pos:end="438:53">()</argument_list></call><operator pos:start="438:54" pos:end="438:54">.</operator><call pos:start="438:55" pos:end="438:64"><name pos:start="438:55" pos:end="438:62">toString</name><argument_list pos:start="438:63" pos:end="438:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="439:13" pos:end="439:36"><expr pos:start="439:13" pos:end="439:35"><call pos:start="439:13" pos:end="439:35"><name pos:start="439:13" pos:end="439:30"><name pos:start="439:13" pos:end="439:23">fixation_id</name><operator pos:start="439:24" pos:end="439:24">.</operator><name pos:start="439:25" pos:end="439:30">remove</name></name><argument_list pos:start="439:31" pos:end="439:35">(<argument pos:start="439:32" pos:end="439:34"><expr pos:start="439:32" pos:end="439:34"><literal type="string" pos:start="439:32" pos:end="439:34">"{"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="439:38" pos:end="439:61"><expr pos:start="439:38" pos:end="439:60"><call pos:start="439:38" pos:end="439:60"><name pos:start="439:38" pos:end="439:55"><name pos:start="439:38" pos:end="439:48">fixation_id</name><operator pos:start="439:49" pos:end="439:49">.</operator><name pos:start="439:50" pos:end="439:55">remove</name></name><argument_list pos:start="439:56" pos:end="439:60">(<argument pos:start="439:57" pos:end="439:59"><expr pos:start="439:57" pos:end="439:59"><literal type="string" pos:start="439:57" pos:end="439:59">"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="440:13" pos:end="440:560"><expr pos:start="440:13" pos:end="440:559"><call pos:start="440:13" pos:end="440:559"><name pos:start="440:13" pos:end="440:30"><name pos:start="440:13" pos:end="440:15">idb</name><operator pos:start="440:16" pos:end="440:16">.</operator><name pos:start="440:17" pos:end="440:30">insertFixation</name></name><argument_list pos:start="440:31" pos:end="440:559">(<argument pos:start="440:32" pos:end="440:42"><expr pos:start="440:32" pos:end="440:42"><name pos:start="440:32" pos:end="440:42">fixation_id</name></expr></argument>,<argument pos:start="440:44" pos:end="440:58"><expr pos:start="440:44" pos:end="440:58"><name pos:start="440:44" pos:end="440:58">fixation_run_id</name></expr></argument>,<argument pos:start="440:60" pos:end="440:100"><expr pos:start="440:60" pos:end="440:100"><call pos:start="440:60" pos:end="440:100"><name pos:start="440:60" pos:end="440:74"><name pos:start="440:60" pos:end="440:66">QString</name><operator pos:start="440:67" pos:end="440:68">::</operator><name pos:start="440:69" pos:end="440:74">number</name></name><argument_list pos:start="440:75" pos:end="440:100">(<argument pos:start="440:76" pos:end="440:99"><expr pos:start="440:76" pos:end="440:99"><name pos:start="440:76" pos:end="440:99"><name pos:start="440:76" pos:end="440:78">fix</name><operator pos:start="440:79" pos:end="440:80">-&gt;</operator><name pos:start="440:81" pos:end="440:99">fixation_event_time</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:102" pos:end="440:132"><expr pos:start="440:102" pos:end="440:132"><call pos:start="440:102" pos:end="440:132"><name pos:start="440:102" pos:end="440:116"><name pos:start="440:102" pos:end="440:108">QString</name><operator pos:start="440:109" pos:end="440:110">::</operator><name pos:start="440:111" pos:end="440:116">number</name></name><argument_list pos:start="440:117" pos:end="440:132">(<argument pos:start="440:118" pos:end="440:131"><expr pos:start="440:118" pos:end="440:131"><name pos:start="440:118" pos:end="440:131">fixation_order</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:134" pos:end="440:156"><expr pos:start="440:134" pos:end="440:156"><call pos:start="440:134" pos:end="440:156"><name pos:start="440:134" pos:end="440:148"><name pos:start="440:134" pos:end="440:140">QString</name><operator pos:start="440:141" pos:end="440:142">::</operator><name pos:start="440:143" pos:end="440:148">number</name></name><argument_list pos:start="440:149" pos:end="440:156">(<argument pos:start="440:150" pos:end="440:155"><expr pos:start="440:150" pos:end="440:155"><name pos:start="440:150" pos:end="440:155"><name pos:start="440:150" pos:end="440:152">fix</name><operator pos:start="440:153" pos:end="440:154">-&gt;</operator><name pos:start="440:155" pos:end="440:155">x</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:158" pos:end="440:180"><expr pos:start="440:158" pos:end="440:180"><call pos:start="440:158" pos:end="440:180"><name pos:start="440:158" pos:end="440:172"><name pos:start="440:158" pos:end="440:164">QString</name><operator pos:start="440:165" pos:end="440:166">::</operator><name pos:start="440:167" pos:end="440:172">number</name></name><argument_list pos:start="440:173" pos:end="440:180">(<argument pos:start="440:174" pos:end="440:179"><expr pos:start="440:174" pos:end="440:179"><name pos:start="440:174" pos:end="440:179"><name pos:start="440:174" pos:end="440:176">fix</name><operator pos:start="440:177" pos:end="440:178">-&gt;</operator><name pos:start="440:179" pos:end="440:179">y</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:182" pos:end="440:192"><expr pos:start="440:182" pos:end="440:192"><name pos:start="440:182" pos:end="440:192"><name pos:start="440:182" pos:end="440:184">fix</name><operator pos:start="440:185" pos:end="440:186">-&gt;</operator><name pos:start="440:187" pos:end="440:192">target</name></name></expr></argument>,<argument pos:start="440:194" pos:end="440:231"><expr pos:start="440:194" pos:end="440:231"><call pos:start="440:194" pos:end="440:231"><name pos:start="440:194" pos:end="440:208"><name pos:start="440:194" pos:end="440:200">QString</name><operator pos:start="440:201" pos:end="440:202">::</operator><name pos:start="440:203" pos:end="440:208">number</name></name><argument_list pos:start="440:209" pos:end="440:231">(<argument pos:start="440:210" pos:end="440:230"><expr pos:start="440:210" pos:end="440:230"><name pos:start="440:210" pos:end="440:230"><name pos:start="440:210" pos:end="440:212">fix</name><operator pos:start="440:213" pos:end="440:214">-&gt;</operator><name pos:start="440:215" pos:end="440:230">source_file_line</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:233" pos:end="440:269"><expr pos:start="440:233" pos:end="440:269"><call pos:start="440:233" pos:end="440:269"><name pos:start="440:233" pos:end="440:247"><name pos:start="440:233" pos:end="440:239">QString</name><operator pos:start="440:240" pos:end="440:241">::</operator><name pos:start="440:242" pos:end="440:247">number</name></name><argument_list pos:start="440:248" pos:end="440:269">(<argument pos:start="440:249" pos:end="440:268"><expr pos:start="440:249" pos:end="440:268"><name pos:start="440:249" pos:end="440:268"><name pos:start="440:249" pos:end="440:251">fix</name><operator pos:start="440:252" pos:end="440:253">-&gt;</operator><name pos:start="440:254" pos:end="440:268">source_file_col</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:271" pos:end="440:318"><expr pos:start="440:271" pos:end="440:318"><ternary pos:start="440:271" pos:end="440:318"><condition pos:start="440:271" pos:end="440:288"><expr pos:start="440:271" pos:end="440:286"><name pos:start="440:271" pos:end="440:280"><name pos:start="440:271" pos:end="440:273">fix</name><operator pos:start="440:274" pos:end="440:275">-&gt;</operator><name pos:start="440:276" pos:end="440:280">token</name></name> <operator pos:start="440:282" pos:end="440:283">==</operator> <literal type="string" pos:start="440:285" pos:end="440:286">""</literal></expr> ?</condition><then pos:start="440:290" pos:end="440:295"> <expr pos:start="440:290" pos:end="440:295"><literal type="string" pos:start="440:290" pos:end="440:295">"null"</literal></expr> </then><else pos:start="440:297" pos:end="440:318">: <expr pos:start="440:299" pos:end="440:318"><literal type="string" pos:start="440:299" pos:end="440:302">"\""</literal><operator pos:start="440:303" pos:end="440:303">+</operator><name pos:start="440:304" pos:end="440:313"><name pos:start="440:304" pos:end="440:306">fix</name><operator pos:start="440:307" pos:end="440:308">-&gt;</operator><name pos:start="440:309" pos:end="440:313">token</name></name><operator pos:start="440:314" pos:end="440:314">+</operator><literal type="string" pos:start="440:315" pos:end="440:318">"\""</literal></expr></else></ternary></expr></argument>,<argument pos:start="440:320" pos:end="440:393"><expr pos:start="440:320" pos:end="440:393"><ternary pos:start="440:320" pos:end="440:393"><condition pos:start="440:320" pos:end="440:350"><expr pos:start="440:320" pos:end="440:348"><name pos:start="440:320" pos:end="440:342"><name pos:start="440:320" pos:end="440:322">fix</name><operator pos:start="440:323" pos:end="440:324">-&gt;</operator><name pos:start="440:325" pos:end="440:342">syntactic_category</name></name> <operator pos:start="440:344" pos:end="440:345">==</operator> <literal type="string" pos:start="440:347" pos:end="440:348">""</literal></expr> ?</condition><then pos:start="440:352" pos:end="440:357"> <expr pos:start="440:352" pos:end="440:357"><literal type="string" pos:start="440:352" pos:end="440:357">"null"</literal></expr> </then><else pos:start="440:359" pos:end="440:393">: <expr pos:start="440:361" pos:end="440:393"><literal type="string" pos:start="440:361" pos:end="440:364">"\""</literal><operator pos:start="440:365" pos:end="440:365">+</operator><name pos:start="440:366" pos:end="440:388"><name pos:start="440:366" pos:end="440:368">fix</name><operator pos:start="440:369" pos:end="440:370">-&gt;</operator><name pos:start="440:371" pos:end="440:388">syntactic_category</name></name><operator pos:start="440:389" pos:end="440:389">+</operator><literal type="string" pos:start="440:390" pos:end="440:393">"\""</literal></expr></else></ternary></expr></argument>,<argument pos:start="440:395" pos:end="440:442"><expr pos:start="440:395" pos:end="440:442"><ternary pos:start="440:395" pos:end="440:442"><condition pos:start="440:395" pos:end="440:412"><expr pos:start="440:395" pos:end="440:410"><name pos:start="440:395" pos:end="440:404"><name pos:start="440:395" pos:end="440:397">fix</name><operator pos:start="440:398" pos:end="440:399">-&gt;</operator><name pos:start="440:400" pos:end="440:404">xpath</name></name> <operator pos:start="440:406" pos:end="440:407">==</operator> <literal type="string" pos:start="440:409" pos:end="440:410">""</literal></expr> ?</condition><then pos:start="440:414" pos:end="440:419"> <expr pos:start="440:414" pos:end="440:419"><literal type="string" pos:start="440:414" pos:end="440:419">"null"</literal></expr> </then><else pos:start="440:421" pos:end="440:442">: <expr pos:start="440:423" pos:end="440:442"><literal type="string" pos:start="440:423" pos:end="440:426">"\""</literal><operator pos:start="440:427" pos:end="440:427">+</operator><name pos:start="440:428" pos:end="440:437"><name pos:start="440:428" pos:end="440:430">fix</name><operator pos:start="440:431" pos:end="440:432">-&gt;</operator><name pos:start="440:433" pos:end="440:437">xpath</name></name><operator pos:start="440:438" pos:end="440:438">+</operator><literal type="string" pos:start="440:439" pos:end="440:442">"\""</literal></expr></else></ternary></expr></argument>,<argument pos:start="440:444" pos:end="440:484"><expr pos:start="440:444" pos:end="440:484"><call pos:start="440:444" pos:end="440:484"><name pos:start="440:444" pos:end="440:458"><name pos:start="440:444" pos:end="440:450">QString</name><operator pos:start="440:451" pos:end="440:452">::</operator><name pos:start="440:453" pos:end="440:458">number</name></name><argument_list pos:start="440:459" pos:end="440:484">(<argument pos:start="440:460" pos:end="440:483"><expr pos:start="440:460" pos:end="440:483"><name pos:start="440:460" pos:end="440:483"><name pos:start="440:460" pos:end="440:462">fix</name><operator pos:start="440:463" pos:end="440:464">-&gt;</operator><name pos:start="440:465" pos:end="440:483">left_pupil_diameter</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:486" pos:end="440:527"><expr pos:start="440:486" pos:end="440:527"><call pos:start="440:486" pos:end="440:527"><name pos:start="440:486" pos:end="440:500"><name pos:start="440:486" pos:end="440:492">QString</name><operator pos:start="440:493" pos:end="440:494">::</operator><name pos:start="440:495" pos:end="440:500">number</name></name><argument_list pos:start="440:501" pos:end="440:527">(<argument pos:start="440:502" pos:end="440:526"><expr pos:start="440:502" pos:end="440:526"><name pos:start="440:502" pos:end="440:526"><name pos:start="440:502" pos:end="440:504">fix</name><operator pos:start="440:505" pos:end="440:506">-&gt;</operator><name pos:start="440:507" pos:end="440:526">right_pupil_diameter</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="440:529" pos:end="440:558"><expr pos:start="440:529" pos:end="440:558"><call pos:start="440:529" pos:end="440:558"><name pos:start="440:529" pos:end="440:543"><name pos:start="440:529" pos:end="440:535">QString</name><operator pos:start="440:536" pos:end="440:537">::</operator><name pos:start="440:538" pos:end="440:543">number</name></name><argument_list pos:start="440:544" pos:end="440:558">(<argument pos:start="440:545" pos:end="440:557"><expr pos:start="440:545" pos:end="440:557"><name pos:start="440:545" pos:end="440:557"><name pos:start="440:545" pos:end="440:547">fix</name><operator pos:start="440:548" pos:end="440:549">-&gt;</operator><name pos:start="440:550" pos:end="440:557">duration</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="443:13" pos:end="443:29"><expr pos:start="443:13" pos:end="443:28"><operator pos:start="443:13" pos:end="443:14">++</operator><name pos:start="443:15" pos:end="443:28">fixation_order</name></expr>;</expr_stmt>
            <decl_stmt pos:start="444:13" pos:end="444:45"><decl pos:start="444:13" pos:end="444:44"><type pos:start="444:13" pos:end="444:31"><name pos:start="444:13" pos:end="444:31"><name pos:start="444:13" pos:end="444:15">std</name><operator pos:start="444:16" pos:end="444:17">::</operator><name pos:start="444:18" pos:end="444:20">set</name><argument_list type="generic" pos:start="444:21" pos:end="444:31">&lt;<argument pos:start="444:22" pos:end="444:30"><expr pos:start="444:22" pos:end="444:30"><name pos:start="444:22" pos:end="444:25">long</name> <name pos:start="444:27" pos:end="444:30">long</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="444:33" pos:end="444:44">unique_gazes</name></decl>;</decl_stmt> <comment type="line" pos:start="444:47" pos:end="444:85">// What does this even do? Check the py</comment>
            <for pos:start="445:13" pos:end="448:13">for<control pos:start="445:16" pos:end="445:42">(<init pos:start="445:17" pos:end="445:41"><decl pos:start="445:17" pos:end="445:41"><type pos:start="445:17" pos:end="445:20"><name pos:start="445:17" pos:end="445:20">auto</name></type> <name pos:start="445:22" pos:end="445:25">gaze</name> <range pos:start="445:27" pos:end="445:41">: <expr pos:start="445:29" pos:end="445:41"><name pos:start="445:29" pos:end="445:41"><name pos:start="445:29" pos:end="445:31">fix</name><operator pos:start="445:32" pos:end="445:33">-&gt;</operator><name pos:start="445:34" pos:end="445:41">gaze_vec</name></name></expr></range></decl></init>)</control> <block pos:start="445:44" pos:end="448:13">{<block_content pos:start="446:17" pos:end="447:85">
                <if_stmt pos:start="446:17" pos:end="446:90"><if pos:start="446:17" pos:end="446:90">if<condition pos:start="446:19" pos:end="446:76">(<expr pos:start="446:20" pos:end="446:75"><call pos:start="446:20" pos:end="446:53"><name pos:start="446:20" pos:end="446:36"><name pos:start="446:20" pos:end="446:31">unique_gazes</name><operator pos:start="446:32" pos:end="446:32">.</operator><name pos:start="446:33" pos:end="446:36">find</name></name><argument_list pos:start="446:37" pos:end="446:53">(<argument pos:start="446:38" pos:end="446:52"><expr pos:start="446:38" pos:end="446:52"><name pos:start="446:38" pos:end="446:52"><name pos:start="446:38" pos:end="446:41">gaze</name><operator pos:start="446:42" pos:end="446:42">.</operator><name pos:start="446:43" pos:end="446:52">event_time</name></name></expr></argument>)</argument_list></call> <operator pos:start="446:55" pos:end="446:56">!=</operator> <call pos:start="446:58" pos:end="446:75"><name pos:start="446:58" pos:end="446:73"><name pos:start="446:58" pos:end="446:69">unique_gazes</name><operator pos:start="446:70" pos:end="446:70">.</operator><name pos:start="446:71" pos:end="446:73">end</name></name><argument_list pos:start="446:74" pos:end="446:75">()</argument_list></call></expr>)</condition> <block pos:start="446:78" pos:end="446:90">{<block_content pos:start="446:80" pos:end="446:88"> <continue pos:start="446:80" pos:end="446:88">continue;</continue> </block_content>}</block></if></if_stmt>
                <expr_stmt pos:start="447:17" pos:end="447:85"><expr pos:start="447:17" pos:end="447:84"><call pos:start="447:17" pos:end="447:84"><name pos:start="447:17" pos:end="447:38"><name pos:start="447:17" pos:end="447:19">idb</name><operator pos:start="447:20" pos:end="447:20">.</operator><name pos:start="447:21" pos:end="447:38">insertFixationGaze</name></name><argument_list pos:start="447:39" pos:end="447:84">(<argument pos:start="447:40" pos:end="447:50"><expr pos:start="447:40" pos:end="447:50"><name pos:start="447:40" pos:end="447:50">fixation_id</name></expr></argument>,<argument pos:start="447:52" pos:end="447:83"><expr pos:start="447:52" pos:end="447:83"><call pos:start="447:52" pos:end="447:83"><name pos:start="447:52" pos:end="447:66"><name pos:start="447:52" pos:end="447:58">QString</name><operator pos:start="447:59" pos:end="447:60">::</operator><name pos:start="447:61" pos:end="447:66">number</name></name><argument_list pos:start="447:67" pos:end="447:83">(<argument pos:start="447:68" pos:end="447:82"><expr pos:start="447:68" pos:end="447:82"><name pos:start="447:68" pos:end="447:82"><name pos:start="447:68" pos:end="447:71">gaze</name><operator pos:start="447:72" pos:end="447:72">.</operator><name pos:start="447:73" pos:end="447:82">event_time</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <expr_stmt pos:start="450:9" pos:end="450:38"><expr pos:start="450:9" pos:end="450:37"><call pos:start="450:9" pos:end="450:37"><name pos:start="450:9" pos:end="450:35"><name pos:start="450:9" pos:end="450:20">QApplication</name><operator pos:start="450:21" pos:end="450:22">::</operator><name pos:start="450:23" pos:end="450:35">processEvents</name></name><argument_list pos:start="450:36" pos:end="450:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="452:5" pos:end="452:17"><expr pos:start="452:5" pos:end="452:16"><call pos:start="452:5" pos:end="452:16"><name pos:start="452:5" pos:end="452:14"><name pos:start="452:5" pos:end="452:7">idb</name><operator pos:start="452:8" pos:end="452:8">.</operator><name pos:start="452:9" pos:end="452:14">commit</name></name><argument_list pos:start="452:15" pos:end="452:16">()</argument_list></call></expr>;</expr_stmt>
    <emit pos:start="453:5" pos:end="453:27">emit <expr pos:start="453:10" pos:end="453:26"><call pos:start="453:10" pos:end="453:26"><name pos:start="453:10" pos:end="453:24">stopProgressBar</name><argument_list pos:start="453:25" pos:end="453:26">()</argument_list></call></expr>;</emit>
    <emit pos:start="454:5" pos:end="454:115">emit <expr pos:start="454:10" pos:end="454:114"><call pos:start="454:10" pos:end="454:114"><name pos:start="454:10" pos:end="454:23">outputToScreen</name><argument_list pos:start="454:24" pos:end="454:114">(<argument pos:start="454:25" pos:end="454:31"><expr pos:start="454:25" pos:end="454:31"><literal type="string" pos:start="454:25" pos:end="454:31">"black"</literal></expr></argument>,<argument pos:start="454:33" pos:end="454:113"><expr pos:start="454:33" pos:end="454:113"><call pos:start="454:33" pos:end="454:84"><name pos:start="454:33" pos:end="454:39">QString</name><argument_list pos:start="454:40" pos:end="454:84">(<argument pos:start="454:41" pos:end="454:83"><expr pos:start="454:41" pos:end="454:83"><literal type="string" pos:start="454:41" pos:end="454:83">"Fixation data generated. Elapsed time: %1"</literal></expr></argument>)</argument_list></call><operator pos:start="454:85" pos:end="454:85">.</operator><call pos:start="454:86" pos:end="454:113"><name pos:start="454:86" pos:end="454:88">arg</name><argument_list pos:start="454:89" pos:end="454:113">(<argument pos:start="454:90" pos:end="454:112"><expr pos:start="454:90" pos:end="454:112"><call pos:start="454:90" pos:end="454:103"><name pos:start="454:90" pos:end="454:101"><name pos:start="454:90" pos:end="454:93">time</name><operator pos:start="454:94" pos:end="454:94">.</operator><name pos:start="454:95" pos:end="454:101">elapsed</name></name><argument_list pos:start="454:102" pos:end="454:103">()</argument_list></call> <operator pos:start="454:105" pos:end="454:105">/</operator> <literal type="number" pos:start="454:107" pos:end="454:112">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<function pos:start="457:1" pos:end="508:1"><type pos:start="457:1" pos:end="457:4"><name pos:start="457:1" pos:end="457:4">void</name></type> <name pos:start="457:6" pos:end="457:26"><name pos:start="457:6" pos:end="457:15">Controller</name><operator pos:start="457:16" pos:end="457:17">::</operator><name pos:start="457:18" pos:end="457:26">mapTokens</name></name><parameter_list pos:start="457:27" pos:end="457:74">(<parameter pos:start="457:28" pos:end="457:50"><decl pos:start="457:28" pos:end="457:50"><type pos:start="457:28" pos:end="457:50"><name pos:start="457:28" pos:end="457:34">QString</name></type> <name pos:start="457:36" pos:end="457:50">srcml_file_path</name></decl></parameter>, <parameter pos:start="457:53" pos:end="457:73"><decl pos:start="457:53" pos:end="457:73"><type pos:start="457:53" pos:end="457:66"><name pos:start="457:53" pos:end="457:56">bool</name></type> <name pos:start="457:58" pos:end="457:66">overwrite</name> <init pos:start="457:68" pos:end="457:73">= <expr pos:start="457:70" pos:end="457:73"><literal type="boolean" pos:start="457:70" pos:end="457:73">true</literal></expr></init></decl></parameter>)</parameter_list> <block pos:start="457:76" pos:end="508:1">{<block_content pos:start="458:5" pos:end="507:5">
    <decl_stmt pos:start="458:5" pos:end="458:24"><decl pos:start="458:5" pos:end="458:23"><type pos:start="458:5" pos:end="458:17"><name pos:start="458:5" pos:end="458:17">QElapsedTimer</name></type> <name pos:start="458:19" pos:end="458:23">timer</name></decl>;</decl_stmt>
    <expr_stmt pos:start="459:5" pos:end="459:18"><expr pos:start="459:5" pos:end="459:17"><call pos:start="459:5" pos:end="459:17"><name pos:start="459:5" pos:end="459:15"><name pos:start="459:5" pos:end="459:9">timer</name><operator pos:start="459:10" pos:end="459:10">.</operator><name pos:start="459:11" pos:end="459:15">start</name></name><argument_list pos:start="459:16" pos:end="459:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="461:38"><expr pos:start="461:5" pos:end="461:37"><call pos:start="461:5" pos:end="461:37"><name pos:start="461:5" pos:end="461:20">changeFilePathOS</name><argument_list pos:start="461:21" pos:end="461:37">(<argument pos:start="461:22" pos:end="461:36"><expr pos:start="461:22" pos:end="461:36"><name pos:start="461:22" pos:end="461:36">srcml_file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="463:5" pos:end="463:40"><decl pos:start="463:5" pos:end="463:39"><type pos:start="463:5" pos:end="463:16"><name pos:start="463:5" pos:end="463:16">SRCMLHandler</name></type> <name pos:start="463:18" pos:end="463:22">srcml</name><argument_list pos:start="463:23" pos:end="463:39">(<argument pos:start="463:24" pos:end="463:38"><expr pos:start="463:24" pos:end="463:38"><name pos:start="463:24" pos:end="463:38">srcml_file_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="465:5" pos:end="465:57"><decl pos:start="465:5" pos:end="465:56"><type pos:start="465:5" pos:end="465:20"><name pos:start="465:5" pos:end="465:20"><name pos:start="465:5" pos:end="465:11">QVector</name><argument_list type="generic" pos:start="465:12" pos:end="465:20">&lt;<argument pos:start="465:13" pos:end="465:19"><expr pos:start="465:13" pos:end="465:19"><name pos:start="465:13" pos:end="465:19">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="465:22" pos:end="465:30">all_files</name> <init pos:start="465:32" pos:end="465:56">= <expr pos:start="465:34" pos:end="465:56"><call pos:start="465:34" pos:end="465:56"><name pos:start="465:34" pos:end="465:54"><name pos:start="465:34" pos:end="465:38">srcml</name><operator pos:start="465:39" pos:end="465:39">.</operator><name pos:start="465:40" pos:end="465:54">getAllFilenames</name></name><argument_list pos:start="465:55" pos:end="465:56">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:27"><expr pos:start="467:5" pos:end="467:26"><call pos:start="467:5" pos:end="467:26"><name pos:start="467:5" pos:end="467:24"><name pos:start="467:5" pos:end="467:7">idb</name><operator pos:start="467:8" pos:end="467:8">.</operator><name pos:start="467:9" pos:end="467:24">startTransaction</name></name><argument_list pos:start="467:25" pos:end="467:26">()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="469:5" pos:end="469:76"><decl pos:start="469:5" pos:end="469:75"><type pos:start="469:5" pos:end="469:39"><name pos:start="469:5" pos:end="469:39"><name pos:start="469:5" pos:end="469:11">QVector</name><argument_list type="generic" pos:start="469:12" pos:end="469:39">&lt;<argument pos:start="469:13" pos:end="469:38"><expr pos:start="469:13" pos:end="469:38"><name pos:start="469:13" pos:end="469:38"><name pos:start="469:13" pos:end="469:15">std</name><operator pos:start="469:16" pos:end="469:17">::</operator><name pos:start="469:18" pos:end="469:21">pair</name><argument_list type="generic" pos:start="469:22" pos:end="469:38">&lt;<argument pos:start="469:23" pos:end="469:29"><expr pos:start="469:23" pos:end="469:29"><name pos:start="469:23" pos:end="469:29">QString</name></expr></argument>,<argument pos:start="469:31" pos:end="469:37"><expr pos:start="469:31" pos:end="469:37"><name pos:start="469:31" pos:end="469:37">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="469:41" pos:end="469:52">files_viewed</name> <init pos:start="469:54" pos:end="469:75">= <expr pos:start="469:56" pos:end="469:75"><call pos:start="469:56" pos:end="469:75"><name pos:start="469:56" pos:end="469:73"><name pos:start="469:56" pos:end="469:58">idb</name><operator pos:start="469:59" pos:end="469:59">.</operator><name pos:start="469:60" pos:end="469:73">getFilesViewed</name></name><argument_list pos:start="469:74" pos:end="469:75">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <emit pos:start="471:5" pos:end="471:49">emit <expr pos:start="471:10" pos:end="471:48"><call pos:start="471:10" pos:end="471:48"><name pos:start="471:10" pos:end="471:25">startProgressBar</name><argument_list pos:start="471:26" pos:end="471:48">(<argument pos:start="471:27" pos:end="471:27"><expr pos:start="471:27" pos:end="471:27"><literal type="number" pos:start="471:27" pos:end="471:27">0</literal></expr></argument>,<argument pos:start="471:29" pos:end="471:47"><expr pos:start="471:29" pos:end="471:47"><call pos:start="471:29" pos:end="471:47"><name pos:start="471:29" pos:end="471:45"><name pos:start="471:29" pos:end="471:40">files_viewed</name><operator pos:start="471:41" pos:end="471:41">.</operator><name pos:start="471:42" pos:end="471:45">size</name></name><argument_list pos:start="471:46" pos:end="471:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
    <decl_stmt pos:start="472:5" pos:end="472:20"><decl pos:start="472:5" pos:end="472:19"><type pos:start="472:5" pos:end="472:7"><name pos:start="472:5" pos:end="472:7">int</name></type> <name pos:start="472:9" pos:end="472:15">counter</name> <init pos:start="472:17" pos:end="472:19">= <expr pos:start="472:19" pos:end="472:19"><literal type="number" pos:start="472:19" pos:end="472:19">1</literal></expr></init></decl>;</decl_stmt>
    <emit pos:start="473:5" pos:end="473:109">emit <expr pos:start="473:10" pos:end="473:108"><call pos:start="473:10" pos:end="473:108"><name pos:start="473:10" pos:end="473:23">outputToScreen</name><argument_list pos:start="473:24" pos:end="473:108">(<argument pos:start="473:25" pos:end="473:31"><expr pos:start="473:25" pos:end="473:31"><literal type="string" pos:start="473:25" pos:end="473:31">"black"</literal></expr></argument>,<argument pos:start="473:33" pos:end="473:107"><expr pos:start="473:33" pos:end="473:107"><literal type="string" pos:start="473:33" pos:end="473:53">"Mapping tokens for "</literal><operator pos:start="473:54" pos:end="473:54">+</operator><call pos:start="473:55" pos:end="473:90"><name pos:start="473:55" pos:end="473:69"><name pos:start="473:55" pos:end="473:61">QString</name><operator pos:start="473:62" pos:end="473:63">::</operator><name pos:start="473:64" pos:end="473:69">number</name></name><argument_list pos:start="473:70" pos:end="473:90">(<argument pos:start="473:71" pos:end="473:89"><expr pos:start="473:71" pos:end="473:89"><call pos:start="473:71" pos:end="473:89"><name pos:start="473:71" pos:end="473:87"><name pos:start="473:71" pos:end="473:82">files_viewed</name><operator pos:start="473:83" pos:end="473:83">.</operator><name pos:start="473:84" pos:end="473:87">size</name></name><argument_list pos:start="473:88" pos:end="473:89">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="473:91" pos:end="473:91">+</operator><literal type="string" pos:start="473:92" pos:end="473:107">" gaze targets."</literal></expr></argument>)</argument_list></call></expr>;</emit>
    <emit pos:start="474:5" pos:end="474:73">emit <expr pos:start="474:10" pos:end="474:72"><call pos:start="474:10" pos:end="474:72"><name pos:start="474:10" pos:end="474:23">outputToScreen</name><argument_list pos:start="474:24" pos:end="474:72">(<argument pos:start="474:25" pos:end="474:31"><expr pos:start="474:25" pos:end="474:31"><literal type="string" pos:start="474:25" pos:end="474:31">"black"</literal></expr></argument>,<argument pos:start="474:33" pos:end="474:71"><expr pos:start="474:33" pos:end="474:71"><literal type="string" pos:start="474:33" pos:end="474:71">"This could take a while. Please wait."</literal></expr></argument>)</argument_list></call></expr>;</emit>

    <decl_stmt pos:start="476:5" pos:end="476:22"><decl pos:start="476:5" pos:end="476:21"><type pos:start="476:5" pos:end="476:11"><name pos:start="476:5" pos:end="476:11">QString</name></type> <name pos:start="476:13" pos:end="476:16">warn</name> <init pos:start="476:18" pos:end="476:21">= <expr pos:start="476:20" pos:end="476:21"><literal type="string" pos:start="476:20" pos:end="476:21">""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="477:5" pos:end="477:28"><decl pos:start="477:5" pos:end="477:27"><type pos:start="477:5" pos:end="477:15"><name pos:start="477:5" pos:end="477:15">SRCMLMapper</name></type> <name pos:start="477:17" pos:end="477:22">mapper</name><argument_list pos:start="477:23" pos:end="477:27">(<argument pos:start="477:24" pos:end="477:26"><expr pos:start="477:24" pos:end="477:26"><name pos:start="477:24" pos:end="477:26">idb</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for pos:start="478:5" pos:end="496:5">for<control pos:start="478:8" pos:end="478:77">(<init pos:start="478:9" pos:end="478:41"><decl pos:start="478:9" pos:end="478:40"><type pos:start="478:9" pos:end="478:12"><name pos:start="478:9" pos:end="478:12">auto</name></type> <name pos:start="478:14" pos:end="478:17">file</name> <init pos:start="478:19" pos:end="478:40">= <expr pos:start="478:21" pos:end="478:40"><call pos:start="478:21" pos:end="478:40"><name pos:start="478:21" pos:end="478:38"><name pos:start="478:21" pos:end="478:32">files_viewed</name><operator pos:start="478:33" pos:end="478:33">.</operator><name pos:start="478:34" pos:end="478:38">begin</name></name><argument_list pos:start="478:39" pos:end="478:40">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="478:43" pos:end="478:69"><expr pos:start="478:43" pos:end="478:68"><name pos:start="478:43" pos:end="478:46">file</name> <operator pos:start="478:48" pos:end="478:49">!=</operator> <call pos:start="478:51" pos:end="478:68"><name pos:start="478:51" pos:end="478:66"><name pos:start="478:51" pos:end="478:62">files_viewed</name><operator pos:start="478:63" pos:end="478:63">.</operator><name pos:start="478:64" pos:end="478:66">end</name></name><argument_list pos:start="478:67" pos:end="478:68">()</argument_list></call></expr>;</condition> <incr pos:start="478:71" pos:end="478:76"><expr pos:start="478:71" pos:end="478:76"><name pos:start="478:71" pos:end="478:74">file</name><operator pos:start="478:75" pos:end="478:76">++</operator></expr></incr>)</control> <block pos:start="478:79" pos:end="496:5">{<block_content pos:start="479:9" pos:end="495:38">
        <decl_stmt pos:start="479:9" pos:end="479:34"><decl pos:start="479:9" pos:end="479:33"><type pos:start="479:9" pos:end="479:21"><name pos:start="479:9" pos:end="479:21">QElapsedTimer</name></type> <name pos:start="479:23" pos:end="479:33">inner_timer</name></decl>;</decl_stmt>
        <expr_stmt pos:start="480:9" pos:end="480:28"><expr pos:start="480:9" pos:end="480:27"><call pos:start="480:9" pos:end="480:27"><name pos:start="480:9" pos:end="480:25"><name pos:start="480:9" pos:end="480:19">inner_timer</name><operator pos:start="480:20" pos:end="480:20">.</operator><name pos:start="480:21" pos:end="480:25">start</name></name><argument_list pos:start="480:26" pos:end="480:27">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="481:9" pos:end="492:9"><if pos:start="481:9" pos:end="492:9">if<condition pos:start="481:11" pos:end="481:61">(<expr pos:start="481:12" pos:end="481:60"><operator pos:start="481:12" pos:end="481:12">!</operator><call pos:start="481:13" pos:end="481:33"><name pos:start="481:13" pos:end="481:31"><name pos:start="481:13" pos:end="481:16">file</name><operator pos:start="481:17" pos:end="481:18">-&gt;</operator><name pos:start="481:19" pos:end="481:24">second</name><operator pos:start="481:25" pos:end="481:25">.</operator><name pos:start="481:26" pos:end="481:31">isNull</name></name><argument_list pos:start="481:32" pos:end="481:33">()</argument_list></call> <operator pos:start="481:35" pos:end="481:36">&amp;&amp;</operator> <operator pos:start="481:38" pos:end="481:38">!</operator><call pos:start="481:39" pos:end="481:60"><name pos:start="481:39" pos:end="481:58"><name pos:start="481:39" pos:end="481:42">file</name><operator pos:start="481:43" pos:end="481:44">-&gt;</operator><name pos:start="481:45" pos:end="481:50">second</name><operator pos:start="481:51" pos:end="481:51">.</operator><name pos:start="481:52" pos:end="481:58">isEmpty</name></name><argument_list pos:start="481:59" pos:end="481:60">()</argument_list></call></expr>)</condition> <block pos:start="481:63" pos:end="492:9">{<block_content pos:start="482:13" pos:end="491:68">
            <decl_stmt pos:start="482:13" pos:end="482:73"><decl pos:start="482:13" pos:end="482:72"><type pos:start="482:13" pos:end="482:19"><name pos:start="482:13" pos:end="482:19">QString</name></type> <name pos:start="482:21" pos:end="482:29">unit_path</name> <init pos:start="482:31" pos:end="482:72">= <expr pos:start="482:33" pos:end="482:72"><call pos:start="482:33" pos:end="482:72"><name pos:start="482:33" pos:end="482:48">findMatchingPath</name><argument_list pos:start="482:49" pos:end="482:72">(<argument pos:start="482:50" pos:end="482:58"><expr pos:start="482:50" pos:end="482:58"><name pos:start="482:50" pos:end="482:58">all_files</name></expr></argument>,<argument pos:start="482:60" pos:end="482:71"><expr pos:start="482:60" pos:end="482:71"><name pos:start="482:60" pos:end="482:71"><name pos:start="482:60" pos:end="482:63">file</name><operator pos:start="482:64" pos:end="482:65">-&gt;</operator><name pos:start="482:66" pos:end="482:71">second</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="483:13" pos:end="488:13"><if pos:start="483:13" pos:end="488:13">if<condition pos:start="483:15" pos:end="483:31">(<expr pos:start="483:16" pos:end="483:30"><name pos:start="483:16" pos:end="483:24">unit_path</name> <operator pos:start="483:26" pos:end="483:27">==</operator> <literal type="string" pos:start="483:29" pos:end="483:30">""</literal></expr>)</condition> <block pos:start="483:33" pos:end="488:13">{<block_content pos:start="484:17" pos:end="487:25">
                <expr_stmt pos:start="484:17" pos:end="484:44"><expr pos:start="484:17" pos:end="484:43"><name pos:start="484:17" pos:end="484:20">warn</name> <operator pos:start="484:22" pos:end="484:23">+=</operator> <literal type="string" pos:start="484:25" pos:end="484:28">"\n"</literal> <operator pos:start="484:30" pos:end="484:30">+</operator> <name pos:start="484:32" pos:end="484:43"><name pos:start="484:32" pos:end="484:35">file</name><operator pos:start="484:36" pos:end="484:37">-&gt;</operator><name pos:start="484:38" pos:end="484:43">second</name></name></expr>;</expr_stmt>
                <emit pos:start="485:17" pos:end="485:106">emit <expr pos:start="485:22" pos:end="485:105"><call pos:start="485:22" pos:end="485:105"><name pos:start="485:22" pos:end="485:35">outputToScreen</name><argument_list pos:start="485:36" pos:end="485:105">(<argument pos:start="485:37" pos:end="485:45"><expr pos:start="485:37" pos:end="485:45"><literal type="string" pos:start="485:37" pos:end="485:45">"#F55904"</literal></expr></argument>,<argument pos:start="485:47" pos:end="485:104"><expr pos:start="485:47" pos:end="485:104"><call pos:start="485:47" pos:end="485:91"><name pos:start="485:47" pos:end="485:53">QString</name><argument_list pos:start="485:54" pos:end="485:91">(<argument pos:start="485:55" pos:end="485:90"><expr pos:start="485:55" pos:end="485:90"><literal type="string" pos:start="485:55" pos:end="485:90">"Target %1 skipped - no valid unit."</literal></expr></argument>)</argument_list></call><operator pos:start="485:92" pos:end="485:92">.</operator><call pos:start="485:93" pos:end="485:104"><name pos:start="485:93" pos:end="485:95">arg</name><argument_list pos:start="485:96" pos:end="485:104">(<argument pos:start="485:97" pos:end="485:103"><expr pos:start="485:97" pos:end="485:103"><name pos:start="485:97" pos:end="485:103">counter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
                <emit pos:start="486:17" pos:end="486:50">emit <expr pos:start="486:22" pos:end="486:49"><call pos:start="486:22" pos:end="486:49"><name pos:start="486:22" pos:end="486:40">setProgressBarValue</name><argument_list pos:start="486:41" pos:end="486:49">(<argument pos:start="486:42" pos:end="486:48"><expr pos:start="486:42" pos:end="486:48"><name pos:start="486:42" pos:end="486:48">counter</name></expr></argument>)</argument_list></call></expr>;</emit> <expr_stmt pos:start="486:52" pos:end="486:61"><expr pos:start="486:52" pos:end="486:60"><operator pos:start="486:52" pos:end="486:53">++</operator><name pos:start="486:54" pos:end="486:60">counter</name></expr>;</expr_stmt>
                <continue pos:start="487:17" pos:end="487:25">continue;</continue>
            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="490:13" pos:end="490:69"><expr pos:start="490:13" pos:end="490:68"><call pos:start="490:13" pos:end="490:68"><name pos:start="490:13" pos:end="490:28"><name pos:start="490:13" pos:end="490:18">mapper</name><operator pos:start="490:19" pos:end="490:19">.</operator><name pos:start="490:20" pos:end="490:28">mapSyntax</name></name><argument_list pos:start="490:29" pos:end="490:68">(<argument pos:start="490:30" pos:end="490:34"><expr pos:start="490:30" pos:end="490:34"><name pos:start="490:30" pos:end="490:34">srcml</name></expr></argument>,<argument pos:start="490:36" pos:end="490:44"><expr pos:start="490:36" pos:end="490:44"><name pos:start="490:36" pos:end="490:44">unit_path</name></expr></argument>,<argument pos:start="490:46" pos:end="490:57"><expr pos:start="490:46" pos:end="490:57"><name pos:start="490:46" pos:end="490:57"><name pos:start="490:46" pos:end="490:49">file</name><operator pos:start="490:50" pos:end="490:51">-&gt;</operator><name pos:start="490:52" pos:end="490:57">second</name></name></expr></argument>,<argument pos:start="490:59" pos:end="490:67"><expr pos:start="490:59" pos:end="490:67"><name pos:start="490:59" pos:end="490:67">overwrite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="491:13" pos:end="491:68"><expr pos:start="491:13" pos:end="491:67"><call pos:start="491:13" pos:end="491:67"><name pos:start="491:13" pos:end="491:27"><name pos:start="491:13" pos:end="491:18">mapper</name><operator pos:start="491:19" pos:end="491:19">.</operator><name pos:start="491:20" pos:end="491:27">mapToken</name></name><argument_list pos:start="491:28" pos:end="491:67">(<argument pos:start="491:29" pos:end="491:33"><expr pos:start="491:29" pos:end="491:33"><name pos:start="491:29" pos:end="491:33">srcml</name></expr></argument>,<argument pos:start="491:35" pos:end="491:43"><expr pos:start="491:35" pos:end="491:43"><name pos:start="491:35" pos:end="491:43">unit_path</name></expr></argument>,<argument pos:start="491:45" pos:end="491:56"><expr pos:start="491:45" pos:end="491:56"><name pos:start="491:45" pos:end="491:56"><name pos:start="491:45" pos:end="491:48">file</name><operator pos:start="491:49" pos:end="491:50">-&gt;</operator><name pos:start="491:51" pos:end="491:56">second</name></name></expr></argument>,<argument pos:start="491:58" pos:end="491:66"><expr pos:start="491:58" pos:end="491:66"><name pos:start="491:58" pos:end="491:66">overwrite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <emit pos:start="493:9" pos:end="493:163">emit <expr pos:start="493:14" pos:end="493:162"><call pos:start="493:14" pos:end="493:162"><name pos:start="493:14" pos:end="493:27">outputToScreen</name><argument_list pos:start="493:28" pos:end="493:162">(<argument pos:start="493:29" pos:end="493:35"><expr pos:start="493:29" pos:end="493:35"><literal type="string" pos:start="493:29" pos:end="493:35">"black"</literal></expr></argument>,<argument pos:start="493:37" pos:end="493:161"><expr pos:start="493:37" pos:end="493:161"><call pos:start="493:37" pos:end="493:87"><name pos:start="493:37" pos:end="493:43">QString</name><argument_list pos:start="493:44" pos:end="493:87">(<argument pos:start="493:45" pos:end="493:86"><expr pos:start="493:45" pos:end="493:86"><literal type="string" pos:start="493:45" pos:end="493:86">"%1 / %2 Targets Mapped. Time elasped: %3"</literal></expr></argument>)</argument_list></call><operator pos:start="493:88" pos:end="493:88">.</operator><call pos:start="493:89" pos:end="493:100"><name pos:start="493:89" pos:end="493:91">arg</name><argument_list pos:start="493:92" pos:end="493:100">(<argument pos:start="493:93" pos:end="493:99"><expr pos:start="493:93" pos:end="493:99"><name pos:start="493:93" pos:end="493:99">counter</name></expr></argument>)</argument_list></call><operator pos:start="493:101" pos:end="493:101">.</operator><call pos:start="493:102" pos:end="493:125"><name pos:start="493:102" pos:end="493:104">arg</name><argument_list pos:start="493:105" pos:end="493:125">(<argument pos:start="493:106" pos:end="493:124"><expr pos:start="493:106" pos:end="493:124"><call pos:start="493:106" pos:end="493:124"><name pos:start="493:106" pos:end="493:122"><name pos:start="493:106" pos:end="493:117">files_viewed</name><operator pos:start="493:118" pos:end="493:118">.</operator><name pos:start="493:119" pos:end="493:122">size</name></name><argument_list pos:start="493:123" pos:end="493:124">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="493:126" pos:end="493:126">.</operator><call pos:start="493:127" pos:end="493:161"><name pos:start="493:127" pos:end="493:129">arg</name><argument_list pos:start="493:130" pos:end="493:161">(<argument pos:start="493:131" pos:end="493:160"><expr pos:start="493:131" pos:end="493:160"><call pos:start="493:131" pos:end="493:151"><name pos:start="493:131" pos:end="493:149"><name pos:start="493:131" pos:end="493:141">inner_timer</name><operator pos:start="493:142" pos:end="493:142">.</operator><name pos:start="493:143" pos:end="493:149">elapsed</name></name><argument_list pos:start="493:150" pos:end="493:151">()</argument_list></call> <operator pos:start="493:153" pos:end="493:153">/</operator> <literal type="number" pos:start="493:155" pos:end="493:160">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
        <emit pos:start="494:9" pos:end="494:42">emit <expr pos:start="494:14" pos:end="494:41"><call pos:start="494:14" pos:end="494:41"><name pos:start="494:14" pos:end="494:32">setProgressBarValue</name><argument_list pos:start="494:33" pos:end="494:41">(<argument pos:start="494:34" pos:end="494:40"><expr pos:start="494:34" pos:end="494:40"><name pos:start="494:34" pos:end="494:40">counter</name></expr></argument>)</argument_list></call></expr>;</emit> <expr_stmt pos:start="494:44" pos:end="494:53"><expr pos:start="494:44" pos:end="494:52"><operator pos:start="494:44" pos:end="494:45">++</operator><name pos:start="494:46" pos:end="494:52">counter</name></expr>;</expr_stmt>
        <expr_stmt pos:start="495:9" pos:end="495:38"><expr pos:start="495:9" pos:end="495:37"><call pos:start="495:9" pos:end="495:37"><name pos:start="495:9" pos:end="495:35"><name pos:start="495:9" pos:end="495:20">QApplication</name><operator pos:start="495:21" pos:end="495:22">::</operator><name pos:start="495:23" pos:end="495:35">processEvents</name></name><argument_list pos:start="495:36" pos:end="495:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt pos:start="498:5" pos:end="498:17"><expr pos:start="498:5" pos:end="498:16"><call pos:start="498:5" pos:end="498:16"><name pos:start="498:5" pos:end="498:14"><name pos:start="498:5" pos:end="498:7">idb</name><operator pos:start="498:8" pos:end="498:8">.</operator><name pos:start="498:9" pos:end="498:14">commit</name></name><argument_list pos:start="498:15" pos:end="498:16">()</argument_list></call></expr>;</expr_stmt>
    <emit pos:start="499:5" pos:end="499:27">emit <expr pos:start="499:10" pos:end="499:26"><call pos:start="499:10" pos:end="499:26"><name pos:start="499:10" pos:end="499:24">stopProgressBar</name><argument_list pos:start="499:25" pos:end="499:26">()</argument_list></call></expr>;</emit>
    <emit pos:start="500:5" pos:end="500:111">emit <expr pos:start="500:10" pos:end="500:110"><call pos:start="500:10" pos:end="500:110"><name pos:start="500:10" pos:end="500:23">outputToScreen</name><argument_list pos:start="500:24" pos:end="500:110">(<argument pos:start="500:25" pos:end="500:31"><expr pos:start="500:25" pos:end="500:31"><literal type="string" pos:start="500:25" pos:end="500:31">"black"</literal></expr></argument>,<argument pos:start="500:33" pos:end="500:109"><expr pos:start="500:33" pos:end="500:109"><call pos:start="500:33" pos:end="500:79"><name pos:start="500:33" pos:end="500:39">QString</name><argument_list pos:start="500:40" pos:end="500:79">(<argument pos:start="500:41" pos:end="500:78"><expr pos:start="500:41" pos:end="500:78"><literal type="string" pos:start="500:41" pos:end="500:78">"Token Mapping done. Time elasped: %1"</literal></expr></argument>)</argument_list></call><operator pos:start="500:80" pos:end="500:80">.</operator><call pos:start="500:81" pos:end="500:109"><name pos:start="500:81" pos:end="500:83">arg</name><argument_list pos:start="500:84" pos:end="500:109">(<argument pos:start="500:85" pos:end="500:108"><expr pos:start="500:85" pos:end="500:108"><call pos:start="500:85" pos:end="500:99"><name pos:start="500:85" pos:end="500:97"><name pos:start="500:85" pos:end="500:89">timer</name><operator pos:start="500:90" pos:end="500:90">.</operator><name pos:start="500:91" pos:end="500:97">elapsed</name></name><argument_list pos:start="500:98" pos:end="500:99">()</argument_list></call> <operator pos:start="500:101" pos:end="500:101">/</operator> <literal type="number" pos:start="500:103" pos:end="500:108">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
    <if_stmt pos:start="501:5" pos:end="507:5"><if pos:start="501:5" pos:end="504:5">if<condition pos:start="501:7" pos:end="501:18">(<expr pos:start="501:8" pos:end="501:17"><name pos:start="501:8" pos:end="501:11">warn</name> <operator pos:start="501:13" pos:end="501:14">!=</operator> <literal type="string" pos:start="501:16" pos:end="501:17">""</literal></expr>)</condition> <block pos:start="501:20" pos:end="504:5">{<block_content pos:start="502:9" pos:end="503:49">
        <expr_stmt pos:start="502:9" pos:end="502:73"><expr pos:start="502:9" pos:end="502:72"><name pos:start="502:9" pos:end="502:12">warn</name> <operator pos:start="502:14" pos:end="502:14">=</operator> <literal type="string" pos:start="502:16" pos:end="502:65">"The following gaze targets had no matching unit:"</literal> <operator pos:start="502:67" pos:end="502:67">+</operator> <name pos:start="502:69" pos:end="502:72">warn</name></expr>;</expr_stmt>
        <emit pos:start="503:9" pos:end="503:49">emit <expr pos:start="503:14" pos:end="503:48"><call pos:start="503:14" pos:end="503:48"><name pos:start="503:14" pos:end="503:20">warning</name><argument_list pos:start="503:21" pos:end="503:48">(<argument pos:start="503:22" pos:end="503:42"><expr pos:start="503:22" pos:end="503:42"><literal type="string" pos:start="503:22" pos:end="503:42">"Token Mapping Error"</literal></expr></argument>,<argument pos:start="503:44" pos:end="503:47"><expr pos:start="503:44" pos:end="503:47"><name pos:start="503:44" pos:end="503:47">warn</name></expr></argument>)</argument_list></call></expr>;</emit>
    </block_content>}</block></if>
    <else pos:start="505:5" pos:end="507:5">else <block pos:start="505:10" pos:end="507:5">{<block_content pos:start="506:9" pos:end="506:29">
        <expr_stmt pos:start="506:9" pos:end="506:29"><expr pos:start="506:9" pos:end="506:28"><call pos:start="506:9" pos:end="506:28"><name pos:start="506:9" pos:end="506:26"><name pos:start="506:9" pos:end="506:20">QApplication</name><operator pos:start="506:21" pos:end="506:22">::</operator><name pos:start="506:23" pos:end="506:26">beep</name></name><argument_list pos:start="506:27" pos:end="506:28">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<comment type="line" pos:start="510:1" pos:end="510:44">// This should probably be a helper function</comment>
<function pos:start="511:1" pos:end="546:1"><type pos:start="511:1" pos:end="511:7"><name pos:start="511:1" pos:end="511:7">QString</name></type> <name pos:start="511:9" pos:end="511:36"><name pos:start="511:9" pos:end="511:18">Controller</name><operator pos:start="511:19" pos:end="511:20">::</operator><name pos:start="511:21" pos:end="511:36">findMatchingPath</name></name><parameter_list pos:start="511:37" pos:end="511:78">(<parameter pos:start="511:38" pos:end="511:63"><decl pos:start="511:38" pos:end="511:63"><type pos:start="511:38" pos:end="511:63"><name pos:start="511:38" pos:end="511:53"><name pos:start="511:38" pos:end="511:44">QVector</name><argument_list type="generic" pos:start="511:45" pos:end="511:53">&lt;<argument pos:start="511:46" pos:end="511:52"><expr pos:start="511:46" pos:end="511:52"><name pos:start="511:46" pos:end="511:52">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="511:55" pos:end="511:63">all_files</name></decl></parameter>, <parameter pos:start="511:66" pos:end="511:77"><decl pos:start="511:66" pos:end="511:77"><type pos:start="511:66" pos:end="511:77"><name pos:start="511:66" pos:end="511:72">QString</name></type> <name pos:start="511:74" pos:end="511:77">file</name></decl></parameter>)</parameter_list> <block pos:start="511:80" pos:end="546:1">{<block_content pos:start="512:5" pos:end="545:35">
    <expr_stmt pos:start="512:5" pos:end="512:27"><expr pos:start="512:5" pos:end="512:26"><call pos:start="512:5" pos:end="512:26"><name pos:start="512:5" pos:end="512:16"><name pos:start="512:5" pos:end="512:8">file</name><operator pos:start="512:9" pos:end="512:9">.</operator><name pos:start="512:10" pos:end="512:16">replace</name></name><argument_list pos:start="512:17" pos:end="512:26">(<argument pos:start="512:18" pos:end="512:21"><expr pos:start="512:18" pos:end="512:21"><literal type="string" pos:start="512:18" pos:end="512:21">"\\"</literal></expr></argument>,<argument pos:start="512:23" pos:end="512:25"><expr pos:start="512:23" pos:end="512:25"><literal type="string" pos:start="512:23" pos:end="512:25">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="513:5" pos:end="513:26"><expr pos:start="513:5" pos:end="513:25"><name pos:start="513:5" pos:end="513:8">file</name> <operator pos:start="513:10" pos:end="513:10">=</operator> <call pos:start="513:12" pos:end="513:25"><name pos:start="513:12" pos:end="513:23"><name pos:start="513:12" pos:end="513:15">file</name><operator pos:start="513:16" pos:end="513:16">.</operator><name pos:start="513:17" pos:end="513:23">toLower</name></name><argument_list pos:start="513:24" pos:end="513:25">()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="514:5" pos:end="514:34"><decl pos:start="514:5" pos:end="514:33"><type pos:start="514:5" pos:end="514:24"><name pos:start="514:5" pos:end="514:24"><name pos:start="514:5" pos:end="514:11">QVector</name><argument_list type="generic" pos:start="514:12" pos:end="514:24">&lt;<argument pos:start="514:13" pos:end="514:23"><expr pos:start="514:13" pos:end="514:23"><name pos:start="514:13" pos:end="514:23">QStringList</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="514:26" pos:end="514:33">possible</name></decl>;</decl_stmt>
    <decl_stmt pos:start="515:5" pos:end="515:45"><decl pos:start="515:5" pos:end="515:44"><type pos:start="515:5" pos:end="515:15"><name pos:start="515:5" pos:end="515:15">QStringList</name></type> <name pos:start="515:17" pos:end="515:26">file_split</name> <init pos:start="515:28" pos:end="515:44">= <expr pos:start="515:30" pos:end="515:44"><call pos:start="515:30" pos:end="515:44"><name pos:start="515:30" pos:end="515:39"><name pos:start="515:30" pos:end="515:33">file</name><operator pos:start="515:34" pos:end="515:34">.</operator><name pos:start="515:35" pos:end="515:39">split</name></name><argument_list pos:start="515:40" pos:end="515:44">(<argument pos:start="515:41" pos:end="515:43"><expr pos:start="515:41" pos:end="515:43"><literal type="string" pos:start="515:41" pos:end="515:43">"/"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="516:5" pos:end="516:52"><decl pos:start="516:5" pos:end="516:51"><type pos:start="516:5" pos:end="516:11"><name pos:start="516:5" pos:end="516:11">QString</name></type> <name pos:start="516:13" pos:end="516:17">check</name> <init pos:start="516:19" pos:end="516:51">= <expr pos:start="516:21" pos:end="516:51"><name pos:start="516:21" pos:end="516:51"><name pos:start="516:21" pos:end="516:30">file_split</name><index pos:start="516:31" pos:end="516:51">[<expr pos:start="516:32" pos:end="516:50"><call pos:start="516:32" pos:end="516:48"><name pos:start="516:32" pos:end="516:46"><name pos:start="516:32" pos:end="516:41">file_split</name><operator pos:start="516:42" pos:end="516:42">.</operator><name pos:start="516:43" pos:end="516:46">size</name></name><argument_list pos:start="516:47" pos:end="516:48">()</argument_list></call><operator pos:start="516:49" pos:end="516:49">-</operator><literal type="number" pos:start="516:50" pos:end="516:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for pos:start="517:5" pos:end="519:5">for<control pos:start="517:8" pos:end="517:27">(<init pos:start="517:9" pos:end="517:26"><decl pos:start="517:9" pos:end="517:26"><type pos:start="517:9" pos:end="517:12"><name pos:start="517:9" pos:end="517:12">auto</name></type> <name pos:start="517:14" pos:end="517:14">i</name> <range pos:start="517:16" pos:end="517:26">: <expr pos:start="517:18" pos:end="517:26"><name pos:start="517:18" pos:end="517:26">all_files</name></expr></range></decl></init>)</control> <block pos:start="517:29" pos:end="519:5">{<block_content pos:start="518:9" pos:end="518:77">
        <if_stmt pos:start="518:9" pos:end="518:77"><if pos:start="518:9" pos:end="518:77">if<condition pos:start="518:11" pos:end="518:39">(<expr pos:start="518:12" pos:end="518:38"><call pos:start="518:12" pos:end="518:22"><name pos:start="518:12" pos:end="518:20"><name pos:start="518:12" pos:end="518:12">i</name><operator pos:start="518:13" pos:end="518:13">.</operator><name pos:start="518:14" pos:end="518:20">toLower</name></name><argument_list pos:start="518:21" pos:end="518:22">()</argument_list></call><operator pos:start="518:23" pos:end="518:23">.</operator><call pos:start="518:24" pos:end="518:38"><name pos:start="518:24" pos:end="518:31">endsWith</name><argument_list pos:start="518:32" pos:end="518:38">(<argument pos:start="518:33" pos:end="518:37"><expr pos:start="518:33" pos:end="518:37"><name pos:start="518:33" pos:end="518:37">check</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="518:41" pos:end="518:77">{<block_content pos:start="518:43" pos:end="518:75"> <expr_stmt pos:start="518:43" pos:end="518:75"><expr pos:start="518:43" pos:end="518:74"><call pos:start="518:43" pos:end="518:74"><name pos:start="518:43" pos:end="518:60"><name pos:start="518:43" pos:end="518:50">possible</name><operator pos:start="518:51" pos:end="518:51">.</operator><name pos:start="518:52" pos:end="518:60">push_back</name></name><argument_list pos:start="518:61" pos:end="518:74">(<argument pos:start="518:62" pos:end="518:73"><expr pos:start="518:62" pos:end="518:73"><call pos:start="518:62" pos:end="518:73"><name pos:start="518:62" pos:end="518:68"><name pos:start="518:62" pos:end="518:62">i</name><operator pos:start="518:63" pos:end="518:63">.</operator><name pos:start="518:64" pos:end="518:68">split</name></name><argument_list pos:start="518:69" pos:end="518:73">(<argument pos:start="518:70" pos:end="518:72"><expr pos:start="518:70" pos:end="518:72"><literal type="string" pos:start="518:70" pos:end="518:72">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="520:5" pos:end="521:67"><if pos:start="520:5" pos:end="520:43">if<condition pos:start="520:7" pos:end="520:28">(<expr pos:start="520:8" pos:end="520:27"><call pos:start="520:8" pos:end="520:22"><name pos:start="520:8" pos:end="520:20"><name pos:start="520:8" pos:end="520:15">possible</name><operator pos:start="520:16" pos:end="520:16">.</operator><name pos:start="520:17" pos:end="520:20">size</name></name><argument_list pos:start="520:21" pos:end="520:22">()</argument_list></call> <operator pos:start="520:24" pos:end="520:25">==</operator> <literal type="number" pos:start="520:27" pos:end="520:27">0</literal></expr>)</condition> <block pos:start="520:30" pos:end="520:43">{<block_content pos:start="520:32" pos:end="520:41"> <return pos:start="520:32" pos:end="520:41">return <expr pos:start="520:39" pos:end="520:40"><literal type="string" pos:start="520:39" pos:end="520:40">""</literal></expr>;</return> </block_content>}</block></if>
    <if type="elseif" pos:start="521:5" pos:end="521:67">else if<condition pos:start="521:12" pos:end="521:33">(<expr pos:start="521:13" pos:end="521:32"><call pos:start="521:13" pos:end="521:27"><name pos:start="521:13" pos:end="521:25"><name pos:start="521:13" pos:end="521:20">possible</name><operator pos:start="521:21" pos:end="521:21">.</operator><name pos:start="521:22" pos:end="521:25">size</name></name><argument_list pos:start="521:26" pos:end="521:27">()</argument_list></call> <operator pos:start="521:29" pos:end="521:30">==</operator> <literal type="number" pos:start="521:32" pos:end="521:32">1</literal></expr>)</condition> <block pos:start="521:35" pos:end="521:67">{<block_content pos:start="521:37" pos:end="521:65"> <return pos:start="521:37" pos:end="521:65">return <expr pos:start="521:44" pos:end="521:64"><name pos:start="521:44" pos:end="521:54"><name pos:start="521:44" pos:end="521:51">possible</name><index pos:start="521:52" pos:end="521:54">[<expr pos:start="521:53" pos:end="521:53"><literal type="number" pos:start="521:53" pos:end="521:53">0</literal></expr>]</index></name><operator pos:start="521:55" pos:end="521:55">.</operator><call pos:start="521:56" pos:end="521:64"><name pos:start="521:56" pos:end="521:59">join</name><argument_list pos:start="521:60" pos:end="521:64">(<argument pos:start="521:61" pos:end="521:63"><expr pos:start="521:61" pos:end="521:63"><literal type="string" pos:start="521:61" pos:end="521:63">"/"</literal></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="523:5" pos:end="523:26"><decl pos:start="523:5" pos:end="523:25"><type pos:start="523:5" pos:end="523:11"><name pos:start="523:5" pos:end="523:11">QString</name></type> <name pos:start="523:13" pos:end="523:20">shortest</name> <init pos:start="523:22" pos:end="523:25">= <expr pos:start="523:24" pos:end="523:25"><literal type="string" pos:start="523:24" pos:end="523:25">""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="524:5" pos:end="524:19"><decl pos:start="524:5" pos:end="524:18"><type pos:start="524:5" pos:end="524:7"><name pos:start="524:5" pos:end="524:7">int</name></type> <name pos:start="524:9" pos:end="524:14">passes</name> <init pos:start="524:16" pos:end="524:18">= <expr pos:start="524:18" pos:end="524:18"><literal type="number" pos:start="524:18" pos:end="524:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="526:5" pos:end="526:36"><decl pos:start="526:5" pos:end="526:35"><type pos:start="526:5" pos:end="526:24"><name pos:start="526:5" pos:end="526:24"><name pos:start="526:5" pos:end="526:11">QVector</name><argument_list type="generic" pos:start="526:12" pos:end="526:24">&lt;<argument pos:start="526:13" pos:end="526:23"><expr pos:start="526:13" pos:end="526:23"><name pos:start="526:13" pos:end="526:23">QStringList</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="526:26" pos:end="526:35">candidates</name></decl>;</decl_stmt>
    <while pos:start="527:5" pos:end="543:5">while<condition pos:start="527:10" pos:end="527:31">(<expr pos:start="527:11" pos:end="527:30"><call pos:start="527:11" pos:end="527:25"><name pos:start="527:11" pos:end="527:23"><name pos:start="527:11" pos:end="527:18">possible</name><operator pos:start="527:19" pos:end="527:19">.</operator><name pos:start="527:20" pos:end="527:23">size</name></name><argument_list pos:start="527:24" pos:end="527:25">()</argument_list></call> <operator pos:start="527:27" pos:end="527:28">!=</operator> <literal type="number" pos:start="527:30" pos:end="527:30">1</literal></expr>)</condition> <block pos:start="527:33" pos:end="543:5">{<block_content pos:start="528:9" pos:end="542:38">
        <if_stmt pos:start="528:9" pos:end="528:59"><if pos:start="528:9" pos:end="528:59">if<condition pos:start="528:11" pos:end="528:38">(<expr pos:start="528:12" pos:end="528:37"><name pos:start="528:12" pos:end="528:17">passes</name> <operator pos:start="528:19" pos:end="528:19">&gt;</operator> <call pos:start="528:21" pos:end="528:37"><name pos:start="528:21" pos:end="528:35"><name pos:start="528:21" pos:end="528:30">file_split</name><operator pos:start="528:31" pos:end="528:31">.</operator><name pos:start="528:32" pos:end="528:35">size</name></name><argument_list pos:start="528:36" pos:end="528:37">()</argument_list></call></expr>)</condition> <block pos:start="528:40" pos:end="528:59">{<block_content pos:start="528:42" pos:end="528:57"> <return pos:start="528:42" pos:end="528:57">return <expr pos:start="528:49" pos:end="528:56"><name pos:start="528:49" pos:end="528:56">shortest</name></expr>;</return> </block_content>}</block></if></if_stmt>
        <for pos:start="529:9" pos:end="539:9">for<control pos:start="529:12" pos:end="529:38">(<init pos:start="529:13" pos:end="529:37"><decl pos:start="529:13" pos:end="529:37"><type pos:start="529:13" pos:end="529:16"><name pos:start="529:13" pos:end="529:16">auto</name></type> <name pos:start="529:18" pos:end="529:26">unit_path</name> <range pos:start="529:28" pos:end="529:37">: <expr pos:start="529:30" pos:end="529:37"><name pos:start="529:30" pos:end="529:37">possible</name></expr></range></decl></init>)</control> <block pos:start="529:40" pos:end="539:9">{<block_content pos:start="530:13" pos:end="538:13">
            <if_stmt pos:start="530:13" pos:end="533:13"><if pos:start="530:13" pos:end="533:13">if<condition pos:start="530:15" pos:end="530:41">(<expr pos:start="530:16" pos:end="530:40"><name pos:start="530:16" pos:end="530:21">passes</name> <operator pos:start="530:23" pos:end="530:23">&gt;</operator> <call pos:start="530:25" pos:end="530:40"><name pos:start="530:25" pos:end="530:38"><name pos:start="530:25" pos:end="530:33">unit_path</name><operator pos:start="530:34" pos:end="530:34">.</operator><name pos:start="530:35" pos:end="530:38">size</name></name><argument_list pos:start="530:39" pos:end="530:40">()</argument_list></call></expr>)</condition> <block pos:start="530:43" pos:end="533:13">{<block_content pos:start="531:17" pos:end="532:25">
                <if_stmt pos:start="531:17" pos:end="531:70"><if pos:start="531:17" pos:end="531:70">if<condition pos:start="531:19" pos:end="531:34">(<expr pos:start="531:20" pos:end="531:33"><name pos:start="531:20" pos:end="531:27">shortest</name> <operator pos:start="531:29" pos:end="531:30">==</operator> <literal type="string" pos:start="531:32" pos:end="531:33">""</literal></expr>)</condition> <block pos:start="531:36" pos:end="531:70">{<block_content pos:start="531:38" pos:end="531:68"> <expr_stmt pos:start="531:38" pos:end="531:68"><expr pos:start="531:38" pos:end="531:67"><name pos:start="531:38" pos:end="531:45">shortest</name> <operator pos:start="531:47" pos:end="531:47">=</operator> <call pos:start="531:49" pos:end="531:67"><name pos:start="531:49" pos:end="531:62"><name pos:start="531:49" pos:end="531:57">unit_path</name><operator pos:start="531:58" pos:end="531:58">.</operator><name pos:start="531:59" pos:end="531:62">join</name></name><argument_list pos:start="531:63" pos:end="531:67">(<argument pos:start="531:64" pos:end="531:66"><expr pos:start="531:64" pos:end="531:66"><literal type="string" pos:start="531:64" pos:end="531:66">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
                <continue pos:start="532:17" pos:end="532:25">continue;</continue>
            </block_content>}</block></if></if_stmt>
            <decl_stmt pos:start="534:13" pos:end="534:80"><decl pos:start="534:13" pos:end="534:79"><type pos:start="534:13" pos:end="534:19"><name pos:start="534:13" pos:end="534:19">QString</name></type> <name pos:start="534:21" pos:end="534:30">unit_check</name> <init pos:start="534:32" pos:end="534:79">= <expr pos:start="534:34" pos:end="534:79"><name pos:start="534:34" pos:end="534:69"><name pos:start="534:34" pos:end="534:42">unit_path</name><index pos:start="534:43" pos:end="534:69">[<expr pos:start="534:44" pos:end="534:68"><call pos:start="534:44" pos:end="534:59"><name pos:start="534:44" pos:end="534:57"><name pos:start="534:44" pos:end="534:52">unit_path</name><operator pos:start="534:53" pos:end="534:53">.</operator><name pos:start="534:54" pos:end="534:57">size</name></name><argument_list pos:start="534:58" pos:end="534:59">()</argument_list></call> <operator pos:start="534:61" pos:end="534:61">-</operator> <name pos:start="534:63" pos:end="534:68">passes</name></expr>]</index></name><operator pos:start="534:70" pos:end="534:70">.</operator><call pos:start="534:71" pos:end="534:79"><name pos:start="534:71" pos:end="534:77">toLower</name><argument_list pos:start="534:78" pos:end="534:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="535:13" pos:end="535:67"><decl pos:start="535:13" pos:end="535:66"><type pos:start="535:13" pos:end="535:19"><name pos:start="535:13" pos:end="535:19">QString</name></type> <name pos:start="535:21" pos:end="535:30">file_check</name> <init pos:start="535:32" pos:end="535:66">= <expr pos:start="535:34" pos:end="535:66"><name pos:start="535:34" pos:end="535:66"><name pos:start="535:34" pos:end="535:43">file_split</name><index pos:start="535:44" pos:end="535:66">[<expr pos:start="535:45" pos:end="535:65"><call pos:start="535:45" pos:end="535:61"><name pos:start="535:45" pos:end="535:59"><name pos:start="535:45" pos:end="535:54">file_split</name><operator pos:start="535:55" pos:end="535:55">.</operator><name pos:start="535:56" pos:end="535:59">size</name></name><argument_list pos:start="535:60" pos:end="535:61">()</argument_list></call> <operator pos:start="535:63" pos:end="535:63">-</operator> <literal type="number" pos:start="535:65" pos:end="535:65">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="536:13" pos:end="538:13"><if pos:start="536:13" pos:end="538:13">if<condition pos:start="536:15" pos:end="536:40">(<expr pos:start="536:16" pos:end="536:39"><name pos:start="536:16" pos:end="536:25">unit_check</name> <operator pos:start="536:27" pos:end="536:28">==</operator> <name pos:start="536:30" pos:end="536:39">file_check</name></expr>)</condition> <block pos:start="536:42" pos:end="538:13">{<block_content pos:start="537:17" pos:end="537:48">
                <expr_stmt pos:start="537:17" pos:end="537:48"><expr pos:start="537:17" pos:end="537:47"><call pos:start="537:17" pos:end="537:47"><name pos:start="537:17" pos:end="537:36"><name pos:start="537:17" pos:end="537:26">candidates</name><operator pos:start="537:27" pos:end="537:27">.</operator><name pos:start="537:28" pos:end="537:36">push_back</name></name><argument_list pos:start="537:37" pos:end="537:47">(<argument pos:start="537:38" pos:end="537:46"><expr pos:start="537:38" pos:end="537:46"><name pos:start="537:38" pos:end="537:46">unit_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="540:9" pos:end="540:30"><expr pos:start="540:9" pos:end="540:29"><name pos:start="540:9" pos:end="540:16">possible</name> <operator pos:start="540:18" pos:end="540:18">=</operator> <name pos:start="540:20" pos:end="540:29">candidates</name></expr>;</expr_stmt>
        <expr_stmt pos:start="541:9" pos:end="541:17"><expr pos:start="541:9" pos:end="541:16"><operator pos:start="541:9" pos:end="541:10">++</operator><name pos:start="541:11" pos:end="541:16">passes</name></expr>;</expr_stmt>
        <expr_stmt pos:start="542:9" pos:end="542:38"><expr pos:start="542:9" pos:end="542:37"><call pos:start="542:9" pos:end="542:37"><name pos:start="542:9" pos:end="542:35"><name pos:start="542:9" pos:end="542:20">QApplication</name><operator pos:start="542:21" pos:end="542:22">::</operator><name pos:start="542:23" pos:end="542:35">processEvents</name></name><argument_list pos:start="542:36" pos:end="542:37">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="544:5" pos:end="544:45"><if pos:start="544:5" pos:end="544:45">if<condition pos:start="544:7" pos:end="544:30">(<expr pos:start="544:8" pos:end="544:29"><call pos:start="544:8" pos:end="544:24"><name pos:start="544:8" pos:end="544:22"><name pos:start="544:8" pos:end="544:17">candidates</name><operator pos:start="544:18" pos:end="544:18">.</operator><name pos:start="544:19" pos:end="544:22">size</name></name><argument_list pos:start="544:23" pos:end="544:24">()</argument_list></call> <operator pos:start="544:26" pos:end="544:27">==</operator> <literal type="number" pos:start="544:29" pos:end="544:29">0</literal></expr>)</condition> <block pos:start="544:32" pos:end="544:45">{<block_content pos:start="544:34" pos:end="544:43"> <return pos:start="544:34" pos:end="544:43">return <expr pos:start="544:41" pos:end="544:42"><literal type="string" pos:start="544:41" pos:end="544:42">""</literal></expr>;</return> </block_content>}</block></if></if_stmt>
    <return pos:start="545:5" pos:end="545:35">return <expr pos:start="545:12" pos:end="545:34"><name pos:start="545:12" pos:end="545:24"><name pos:start="545:12" pos:end="545:21">candidates</name><index pos:start="545:22" pos:end="545:24">[<expr pos:start="545:23" pos:end="545:23"><literal type="number" pos:start="545:23" pos:end="545:23">0</literal></expr>]</index></name><operator pos:start="545:25" pos:end="545:25">.</operator><call pos:start="545:26" pos:end="545:34"><name pos:start="545:26" pos:end="545:29">join</name><argument_list pos:start="545:30" pos:end="545:34">(<argument pos:start="545:31" pos:end="545:33"><expr pos:start="545:31" pos:end="545:33"><literal type="string" pos:start="545:31" pos:end="545:33">"/"</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function pos:start="549:1" pos:end="565:1"><type pos:start="549:1" pos:end="549:4"><name pos:start="549:1" pos:end="549:4">void</name></type> <name pos:start="549:6" pos:end="549:35"><name pos:start="549:6" pos:end="549:15">Controller</name><operator pos:start="549:16" pos:end="549:17">::</operator><name pos:start="549:18" pos:end="549:35">highlightFixations</name></name><parameter_list pos:start="549:36" pos:end="549:73">(<parameter pos:start="549:37" pos:end="549:47"><decl pos:start="549:37" pos:end="549:47"><type pos:start="549:37" pos:end="549:47"><name pos:start="549:37" pos:end="549:43">QString</name></type> <name pos:start="549:45" pos:end="549:47">dir</name></decl></parameter>, <parameter pos:start="549:50" pos:end="549:72"><decl pos:start="549:50" pos:end="549:72"><type pos:start="549:50" pos:end="549:72"><name pos:start="549:50" pos:end="549:56">QString</name></type> <name pos:start="549:58" pos:end="549:72">srcml_file_path</name></decl></parameter>)</parameter_list> <block pos:start="549:75" pos:end="565:1">{<block_content pos:start="550:5" pos:end="564:110">
    <if_stmt pos:start="550:5" pos:end="553:5"><if pos:start="550:5" pos:end="553:5">if<condition pos:start="550:7" pos:end="550:29">(<expr pos:start="550:8" pos:end="550:28"><operator pos:start="550:8" pos:end="550:8">!</operator><call pos:start="550:9" pos:end="550:28"><name pos:start="550:9" pos:end="550:26"><name pos:start="550:9" pos:end="550:11">idb</name><operator pos:start="550:12" pos:end="550:12">.</operator><name pos:start="550:13" pos:end="550:26">isDatabaseOpen</name></name><argument_list pos:start="550:27" pos:end="550:28">()</argument_list></call></expr>)</condition> <block pos:start="550:31" pos:end="553:5">{<block_content pos:start="551:9" pos:end="552:15">
        <emit pos:start="551:9" pos:end="551:80">emit <expr pos:start="551:14" pos:end="551:79"><call pos:start="551:14" pos:end="551:79"><name pos:start="551:14" pos:end="551:20">warning</name><argument_list pos:start="551:21" pos:end="551:79">(<argument pos:start="551:22" pos:end="551:37"><expr pos:start="551:22" pos:end="551:37"><literal type="string" pos:start="551:22" pos:end="551:37">"Database Error"</literal></expr></argument>,<argument pos:start="551:39" pos:end="551:78"><expr pos:start="551:39" pos:end="551:78"><literal type="string" pos:start="551:39" pos:end="551:78">"There is no Database currently loaded."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="552:9" pos:end="552:15">return;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="555:5" pos:end="555:24"><decl pos:start="555:5" pos:end="555:23"><type pos:start="555:5" pos:end="555:17"><name pos:start="555:5" pos:end="555:17">QElapsedTimer</name></type> <name pos:start="555:19" pos:end="555:23">timer</name></decl>;</decl_stmt>
    <expr_stmt pos:start="556:5" pos:end="556:18"><expr pos:start="556:5" pos:end="556:17"><call pos:start="556:5" pos:end="556:17"><name pos:start="556:5" pos:end="556:15"><name pos:start="556:5" pos:end="556:9">timer</name><operator pos:start="556:10" pos:end="556:10">.</operator><name pos:start="556:11" pos:end="556:15">start</name></name><argument_list pos:start="556:16" pos:end="556:17">()</argument_list></call></expr>;</expr_stmt>

    <emit pos:start="558:5" pos:end="558:61">emit <expr pos:start="558:10" pos:end="558:60"><call pos:start="558:10" pos:end="558:60"><name pos:start="558:10" pos:end="558:23">outputToScreen</name><argument_list pos:start="558:24" pos:end="558:60">(<argument pos:start="558:25" pos:end="558:31"><expr pos:start="558:25" pos:end="558:31"><literal type="string" pos:start="558:25" pos:end="558:31">"black"</literal></expr></argument>,<argument pos:start="558:33" pos:end="558:59"><expr pos:start="558:33" pos:end="558:59"><literal type="string" pos:start="558:33" pos:end="558:59">"Highlighting Fixations..."</literal></expr></argument>)</argument_list></call></expr>;</emit>
    <decl_stmt pos:start="559:5" pos:end="559:51"><decl pos:start="559:5" pos:end="559:50"><type pos:start="559:5" pos:end="559:20"><name pos:start="559:5" pos:end="559:20"><name pos:start="559:5" pos:end="559:11">QVector</name><argument_list type="generic" pos:start="559:12" pos:end="559:20">&lt;<argument pos:start="559:13" pos:end="559:19"><expr pos:start="559:13" pos:end="559:19"><name pos:start="559:13" pos:end="559:19">QString</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="559:22" pos:end="559:24">ids</name> <init pos:start="559:26" pos:end="559:50">= <expr pos:start="559:28" pos:end="559:50"><call pos:start="559:28" pos:end="559:50"><name pos:start="559:28" pos:end="559:48"><name pos:start="559:28" pos:end="559:30">idb</name><operator pos:start="559:31" pos:end="559:31">.</operator><name pos:start="559:32" pos:end="559:48">getFixationRunIDs</name></name><argument_list pos:start="559:49" pos:end="559:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="560:5" pos:end="563:5">for<control pos:start="560:8" pos:end="560:22">(<init pos:start="560:9" pos:end="560:21"><decl pos:start="560:9" pos:end="560:21"><type pos:start="560:9" pos:end="560:12"><name pos:start="560:9" pos:end="560:12">auto</name></type> <name pos:start="560:14" pos:end="560:15">id</name> <range pos:start="560:17" pos:end="560:21">: <expr pos:start="560:19" pos:end="560:21"><name pos:start="560:19" pos:end="560:21">ids</name></expr></range></decl></init>)</control> <block pos:start="560:24" pos:end="563:5">{<block_content pos:start="561:9" pos:end="562:92">
        <emit pos:start="561:9" pos:end="561:59">emit <expr pos:start="561:14" pos:end="561:58"><call pos:start="561:14" pos:end="561:58"><name pos:start="561:14" pos:end="561:27">outputToScreen</name><argument_list pos:start="561:28" pos:end="561:58">(<argument pos:start="561:29" pos:end="561:35"><expr pos:start="561:29" pos:end="561:35"><literal type="string" pos:start="561:29" pos:end="561:35">"black"</literal></expr></argument>,<argument pos:start="561:37" pos:end="561:57"><expr pos:start="561:37" pos:end="561:57"><literal type="string" pos:start="561:37" pos:end="561:52">"Fixation Run: "</literal> <operator pos:start="561:54" pos:end="561:54">+</operator> <name pos:start="561:56" pos:end="561:57">id</name></expr></argument>)</argument_list></call></expr>;</emit>
        <expr_stmt pos:start="562:9" pos:end="562:92"><expr pos:start="562:9" pos:end="562:91"><call pos:start="562:9" pos:end="562:91"><name pos:start="562:9" pos:end="562:23">highlightTokens</name><argument_list pos:start="562:24" pos:end="562:91">(<argument pos:start="562:25" pos:end="562:53"><expr pos:start="562:25" pos:end="562:53"><call pos:start="562:25" pos:end="562:53"><name pos:start="562:25" pos:end="562:49"><name pos:start="562:25" pos:end="562:27">idb</name><operator pos:start="562:28" pos:end="562:28">.</operator><name pos:start="562:29" pos:end="562:49">getFixationsFromRunID</name></name><argument_list pos:start="562:50" pos:end="562:53">(<argument pos:start="562:51" pos:end="562:52"><expr pos:start="562:51" pos:end="562:52"><name pos:start="562:51" pos:end="562:52">id</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="562:55" pos:end="562:83"><expr pos:start="562:55" pos:end="562:83"><call pos:start="562:55" pos:end="562:83"><name pos:start="562:55" pos:end="562:66">SRCMLHandler</name><argument_list pos:start="562:67" pos:end="562:83">(<argument pos:start="562:68" pos:end="562:82"><expr pos:start="562:68" pos:end="562:82"><name pos:start="562:68" pos:end="562:82">srcml_file_path</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="562:85" pos:end="562:87"><expr pos:start="562:85" pos:end="562:87"><name pos:start="562:85" pos:end="562:87">dir</name></expr></argument>,<argument pos:start="562:89" pos:end="562:90"><expr pos:start="562:89" pos:end="562:90"><name pos:start="562:89" pos:end="562:90">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <emit pos:start="564:5" pos:end="564:110">emit <expr pos:start="564:10" pos:end="564:109"><call pos:start="564:10" pos:end="564:109"><name pos:start="564:10" pos:end="564:23">outputToScreen</name><argument_list pos:start="564:24" pos:end="564:109">(<argument pos:start="564:25" pos:end="564:31"><expr pos:start="564:25" pos:end="564:31"><literal type="string" pos:start="564:25" pos:end="564:31">"black"</literal></expr></argument>,<argument pos:start="564:33" pos:end="564:108"><expr pos:start="564:33" pos:end="564:108"><call pos:start="564:33" pos:end="564:78"><name pos:start="564:33" pos:end="564:39">QString</name><argument_list pos:start="564:40" pos:end="564:78">(<argument pos:start="564:41" pos:end="564:77"><expr pos:start="564:41" pos:end="564:77"><literal type="string" pos:start="564:41" pos:end="564:77">"Done Highlighting! Time elapsed: %1"</literal></expr></argument>)</argument_list></call><operator pos:start="564:79" pos:end="564:79">.</operator><call pos:start="564:80" pos:end="564:108"><name pos:start="564:80" pos:end="564:82">arg</name><argument_list pos:start="564:83" pos:end="564:108">(<argument pos:start="564:84" pos:end="564:107"><expr pos:start="564:84" pos:end="564:107"><call pos:start="564:84" pos:end="564:98"><name pos:start="564:84" pos:end="564:96"><name pos:start="564:84" pos:end="564:88">timer</name><operator pos:start="564:89" pos:end="564:89">.</operator><name pos:start="564:90" pos:end="564:96">elapsed</name></name><argument_list pos:start="564:97" pos:end="564:98">()</argument_list></call> <operator pos:start="564:100" pos:end="564:100">/</operator> <literal type="number" pos:start="564:102" pos:end="564:107">1000.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</emit>
</block_content>}</block></function>

<comment type="line" pos:start="567:1" pos:end="567:6">// WIP</comment>
<function pos:start="568:1" pos:end="593:1"><type pos:start="568:1" pos:end="568:4"><name pos:start="568:1" pos:end="568:4">void</name></type> <name pos:start="568:6" pos:end="568:32"><name pos:start="568:6" pos:end="568:15">Controller</name><operator pos:start="568:16" pos:end="568:17">::</operator><name pos:start="568:18" pos:end="568:32">highlightTokens</name></name><parameter_list pos:start="568:33" pos:end="568:118">(<parameter pos:start="568:34" pos:end="568:68"><decl pos:start="568:34" pos:end="568:68"><type pos:start="568:34" pos:end="568:68"><name pos:start="568:34" pos:end="568:58"><name pos:start="568:34" pos:end="568:40">QVector</name><argument_list type="generic" pos:start="568:41" pos:end="568:58">&lt;<argument pos:start="568:42" pos:end="568:57"><expr pos:start="568:42" pos:end="568:57"><name pos:start="568:42" pos:end="568:57"><name pos:start="568:42" pos:end="568:48">QVector</name><argument_list type="generic" pos:start="568:49" pos:end="568:57">&lt;<argument pos:start="568:50" pos:end="568:56"><expr pos:start="568:50" pos:end="568:56"><name pos:start="568:50" pos:end="568:56">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="568:60" pos:end="568:68">fixations</name></decl></parameter>, <parameter pos:start="568:71" pos:end="568:88"><decl pos:start="568:71" pos:end="568:88"><type pos:start="568:71" pos:end="568:88"><name pos:start="568:71" pos:end="568:82">SRCMLHandler</name></type> <name pos:start="568:84" pos:end="568:88">srcml</name></decl></parameter>, <parameter pos:start="568:91" pos:end="568:101"><decl pos:start="568:91" pos:end="568:101"><type pos:start="568:91" pos:end="568:101"><name pos:start="568:91" pos:end="568:97">QString</name></type> <name pos:start="568:99" pos:end="568:101">dir</name></decl></parameter>, <parameter pos:start="568:104" pos:end="568:117"><decl pos:start="568:104" pos:end="568:117"><type pos:start="568:104" pos:end="568:117"><name pos:start="568:104" pos:end="568:110">QString</name></type> <name pos:start="568:112" pos:end="568:117">run_id</name></decl></parameter>)</parameter_list> <block pos:start="568:120" pos:end="593:1">{<block_content>
    <comment type="block" pos:start="569:5" pos:end="591:56">/*//xpath -&gt; [source_file_line,source_file_col,token]
    //mkdir((dir+"/"+run_id).toUtf8().constData());

    std::map&lt;QString,QVector&lt;QVector&lt;QString&gt;&gt;&gt; token_map;
    for(auto fixation : fixations) {
        QString unit_xpath = fixation[0].left(fixation[0].indexOf("]")) + "]";
        QVector&lt;QString&gt; extra = { fixation[1],fixation[2],fixation[3] };
        //token_map.insert(std::make_pair(unit_xpath,extra));
        if(token_map.count(unit_xpath) == 0) {
            token_map.insert(std::make_pair(unit_xpath,QVector&lt;QVector&lt;QString&gt;&gt;()));
        }
        token_map.find(unit_xpath)-&gt;second.push_back(extra);
        std::cout &lt;&lt; "("; for(auto i : extra) { std::cout &lt;&lt; i &lt;&lt; ","; } std::cout &lt;&lt; ")" &lt;&lt; std::endl;
    }
    for(auto unit : token_map) {
        std::sort(unit.second.begin(), unit.second.end(), [](const QVector&lt;QString&gt;&amp; a,const QVector&lt;QString&gt;&amp; b) -&gt; bool { return a[0].toInt() &lt; b[0].toInt() &amp;&amp; a[1].toInt() &lt; b[1].toInt(); });
        generateHighlightedFile(dir,getFilenameFromXpath(unit.first),srcml.getUnitText(unit.first).split("\n"),unit.second);
    }
    // TODO - Need to add the run_prettify.js file
    // Currently don't know how to have that work
    // with how C++ creates executables

    //emit outputToScreen("Finished Exporting Files");*/</comment>

</block_content>}</block></function>

<comment type="line" pos:start="595:1" pos:end="595:22">// TODO - NOT YET DONE</comment>
<function pos:start="596:1" pos:end="659:1"><type pos:start="596:1" pos:end="596:4"><name pos:start="596:1" pos:end="596:4">void</name></type> <name pos:start="596:6" pos:end="596:40"><name pos:start="596:6" pos:end="596:15">Controller</name><operator pos:start="596:16" pos:end="596:17">::</operator><name pos:start="596:18" pos:end="596:40">generateHighlightedFile</name></name><parameter_list pos:start="596:41" pos:end="596:137">(<parameter pos:start="596:42" pos:end="596:52"><decl pos:start="596:42" pos:end="596:52"><type pos:start="596:42" pos:end="596:52"><name pos:start="596:42" pos:end="596:48">QString</name></type> <name pos:start="596:50" pos:end="596:52">dir</name></decl></parameter>, <parameter pos:start="596:55" pos:end="596:70"><decl pos:start="596:55" pos:end="596:70"><type pos:start="596:55" pos:end="596:70"><name pos:start="596:55" pos:end="596:61">QString</name></type> <name pos:start="596:63" pos:end="596:70">filename</name></decl></parameter>, <parameter pos:start="596:73" pos:end="596:99"><decl pos:start="596:73" pos:end="596:99"><type pos:start="596:73" pos:end="596:99"><name pos:start="596:73" pos:end="596:83">QStringList</name></type> <name pos:start="596:85" pos:end="596:99">source_contents</name></decl></parameter>, <parameter pos:start="596:102" pos:end="596:136"><decl pos:start="596:102" pos:end="596:136"><type pos:start="596:102" pos:end="596:136"><name pos:start="596:102" pos:end="596:126"><name pos:start="596:102" pos:end="596:108">QVector</name><argument_list type="generic" pos:start="596:109" pos:end="596:126">&lt;<argument pos:start="596:110" pos:end="596:125"><expr pos:start="596:110" pos:end="596:125"><name pos:start="596:110" pos:end="596:125"><name pos:start="596:110" pos:end="596:116">QVector</name><argument_list type="generic" pos:start="596:117" pos:end="596:125">&lt;<argument pos:start="596:118" pos:end="596:124"><expr pos:start="596:118" pos:end="596:124"><name pos:start="596:118" pos:end="596:124">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="596:128" pos:end="596:136">locations</name></decl></parameter>)</parameter_list> <block pos:start="596:139" pos:end="659:1">{<block_content>
    <comment type="block" pos:start="597:5" pos:end="658:6">/*emit outputToScreen("Processing: " + filename);

    std::set&lt;QString&gt; set_keys;
    // This is a sin against man
    // Fix this later \/
    std::map&lt;int,QVector&lt;std::pair&lt;std::pair&lt;int,int&gt;,QString&gt;&gt;&gt; boundary_matches;
    
    for(auto location : locations) {
        int line_num = location[0].toInt() - 1,
            col_num = location[1].toInt() - 1;
        QString token = location[2],
                source_line = source_contents[line_num];
        std::cout &lt;&lt; "SOURCE LINE: " &lt;&lt; source_line &lt;&lt; std::endl;
        QString set_key = token + "L" + QString::number(line_num) + "C" + QString::number(col_num);

        if(set_keys.count(set_key) &gt; 0) { continue; }
        else { set_keys.insert(set_key); }
        
        bool bounds_hit = false;
        if(boundary_matches.count(line_num) &gt; 0) {
            for(auto matches : boundary_matches.at(line_num)) {
                bounds_hit = col_num &gt;= matches.first.first &amp;&amp; matches.first.second &amp;&amp; matches.second == token;
                if(bounds_hit) { break; }
            }
        }
        else { boundary_matches.insert(std::make_pair(line_num,QVector&lt;std::pair&lt;std::pair&lt;int,int&gt;,QString&gt;&gt;())); }
        
        if(bounds_hit) { continue; }
        
        if(token.size() == 1) {
            int token_index = source_line.indexOf(token,col_num);
            source_line = source_line.left(token_index) + "&lt;MARK&gt;" + token + "&lt;/MARK&gt;" + source_line.right(source_line.size() - token_index - 1);
            boundary_matches.at(line_num).push_back(std::make_pair(std::make_pair(token_index,token_index),token));
        }
        else {
            int start_index = source_line.indexOf(token),
                end_index = start_index + token.size() - 1;
            while(!(col_num &gt;= start_index &amp;&amp; col_num &lt;= end_index)) {
                start_index = source_line.indexOf(token,start_index+1);
                end_index = start_index + token.size() - 1;
            }
            boundary_matches.at(line_num).push_back(std::make_pair(std::make_pair(start_index,end_index),token));
            source_line = source_line.left(start_index) + "&lt;MARK&gt;" + token +  "&lt;/MARK&gt;" + source_line.right(source_line.size() - end_index);
        }
        source_contents[line_num] = source_line;
    }
    QString output = dir + filename.left(filename.lastIndexOf(".")) + "-" + QString::number(std::time(nullptr))+".html";
    //std::ifstream highlighted_file(output.toUtf8().constData());
    QFile highlighted_file(output);
    highlighted_file.open(QIODevice::WriteOnly | QIODevice::Text);
    QTextStream highlighted_file_stream(&amp;highlighted_file);
    highlighted_file_stream &lt;&lt; "&lt;HTML&gt;&lt;HEAD&gt;&lt;SCRIPT src=\"run_prettify.js\"&gt;&lt;/SCRIPT&gt;&lt;TITLE&gt;" &lt;&lt; filename
                            &lt;&lt; "&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;\n&lt;PRE&gt;&lt;CODE class=\"prettyprint\"&gt;\n";
    for(auto line_of_code : source_contents) {
        line_of_code.replace("&lt;","&amp;lt;");
        line_of_code.replace("&gt;","&amp;gt;");
        line_of_code.replace("&amp;lt;MARK&amp;gt;","&lt;MARK&gt;");
        line_of_code.replace("&amp;lt;/MARK&amp;gt;","&lt;/MARK&gt;");
        highlighted_file_stream &lt;&lt; line_of_code;
    }
    highlighted_file_stream &lt;&lt; "&lt;/CODE&gt;&lt;/PRE&gt;\n&lt;/BODY&gt;&lt;/HTML&gt;\n";
    */</comment>
</block_content>}</block></function>

<function pos:start="661:1" pos:end="697:1"><type pos:start="661:1" pos:end="661:7"><name pos:start="661:1" pos:end="661:7">QString</name></type> <name pos:start="661:9" pos:end="661:33"><name pos:start="661:9" pos:end="661:18">Controller</name><operator pos:start="661:19" pos:end="661:20">::</operator><name pos:start="661:21" pos:end="661:33">generateQuery</name></name><parameter_list pos:start="661:34" pos:end="661:367">(<parameter pos:start="661:35" pos:end="661:49"><decl pos:start="661:35" pos:end="661:49"><type pos:start="661:35" pos:end="661:49"><name pos:start="661:35" pos:end="661:41">QString</name></type> <name pos:start="661:43" pos:end="661:49">targets</name></decl></parameter>, <parameter pos:start="661:52" pos:end="661:70"><decl pos:start="661:52" pos:end="661:70"><type pos:start="661:52" pos:end="661:70"><name pos:start="661:52" pos:end="661:58">QString</name></type> <name pos:start="661:60" pos:end="661:70">token_types</name></decl></parameter>, <parameter pos:start="661:73" pos:end="661:92"><decl pos:start="661:73" pos:end="661:92"><type pos:start="661:73" pos:end="661:92"><name pos:start="661:73" pos:end="661:79">QString</name></type> <name pos:start="661:81" pos:end="661:92">duration_min</name></decl></parameter>, <parameter pos:start="661:95" pos:end="661:114"><decl pos:start="661:95" pos:end="661:114"><type pos:start="661:95" pos:end="661:114"><name pos:start="661:95" pos:end="661:101">QString</name></type> <name pos:start="661:103" pos:end="661:114">duration_max</name></decl></parameter>, <parameter pos:start="661:117" pos:end="661:144"><decl pos:start="661:117" pos:end="661:144"><type pos:start="661:117" pos:end="661:144"><name pos:start="661:117" pos:end="661:123">QString</name></type> <name pos:start="661:125" pos:end="661:144">source_file_line_min</name></decl></parameter>, <parameter pos:start="661:147" pos:end="661:174"><decl pos:start="661:147" pos:end="661:174"><type pos:start="661:147" pos:end="661:174"><name pos:start="661:147" pos:end="661:153">QString</name></type> <name pos:start="661:155" pos:end="661:174">source_file_line_max</name></decl></parameter>, <parameter pos:start="661:177" pos:end="661:203"><decl pos:start="661:177" pos:end="661:203"><type pos:start="661:177" pos:end="661:203"><name pos:start="661:177" pos:end="661:183">QString</name></type> <name pos:start="661:185" pos:end="661:203">source_file_col_min</name></decl></parameter>, <parameter pos:start="661:206" pos:end="661:232"><decl pos:start="661:206" pos:end="661:232"><type pos:start="661:206" pos:end="661:232"><name pos:start="661:206" pos:end="661:212">QString</name></type> <name pos:start="661:214" pos:end="661:232">source_file_col_max</name></decl></parameter>, <parameter pos:start="661:235" pos:end="661:266"><decl pos:start="661:235" pos:end="661:266"><type pos:start="661:235" pos:end="661:266"><name pos:start="661:235" pos:end="661:241">QString</name></type> <name pos:start="661:243" pos:end="661:266">right_pupil_diameter_min</name></decl></parameter>, <parameter pos:start="661:269" pos:end="661:300"><decl pos:start="661:269" pos:end="661:300"><type pos:start="661:269" pos:end="661:300"><name pos:start="661:269" pos:end="661:275">QString</name></type> <name pos:start="661:277" pos:end="661:300">right_pupil_diameter_max</name></decl></parameter>, <parameter pos:start="661:303" pos:end="661:333"><decl pos:start="661:303" pos:end="661:333"><type pos:start="661:303" pos:end="661:333"><name pos:start="661:303" pos:end="661:309">QString</name></type> <name pos:start="661:311" pos:end="661:333">left_pupil_diameter_min</name></decl></parameter>, <parameter pos:start="661:336" pos:end="661:366"><decl pos:start="661:336" pos:end="661:366"><type pos:start="661:336" pos:end="661:366"><name pos:start="661:336" pos:end="661:342">QString</name></type> <name pos:start="661:344" pos:end="661:366">left_pupil_diameter_max</name></decl></parameter>)</parameter_list> <block pos:start="661:369" pos:end="697:1">{<block_content pos:start="662:5" pos:end="696:17">
    <decl_stmt pos:start="662:5" pos:end="662:52"><decl pos:start="662:5" pos:end="662:51"><type pos:start="662:5" pos:end="662:11"><name pos:start="662:5" pos:end="662:11">QString</name></type> <name pos:start="662:13" pos:end="662:17">query</name> <init pos:start="662:19" pos:end="662:51">= <expr pos:start="662:21" pos:end="662:51"><literal type="string" pos:start="662:21" pos:end="662:51">"SELECT * FROM fixation WHERE "</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="664:5" pos:end="664:21">// Add in Targets</comment>
    <if_stmt pos:start="665:5" pos:end="672:5"><if pos:start="665:5" pos:end="672:5">if<condition pos:start="665:7" pos:end="665:21">(<expr pos:start="665:8" pos:end="665:20"><name pos:start="665:8" pos:end="665:14">targets</name> <operator pos:start="665:16" pos:end="665:17">!=</operator> <literal type="string" pos:start="665:19" pos:end="665:20">""</literal></expr>)</condition> <block pos:start="665:23" pos:end="672:5">{<block_content pos:start="666:9" pos:end="671:25">
        <decl_stmt pos:start="666:9" pos:end="666:53"><decl pos:start="666:9" pos:end="666:52"><type pos:start="666:9" pos:end="666:19"><name pos:start="666:9" pos:end="666:19">QStringList</name></type> <name pos:start="666:21" pos:end="666:31">target_list</name> <init pos:start="666:33" pos:end="666:52">= <expr pos:start="666:35" pos:end="666:52"><call pos:start="666:35" pos:end="666:52"><name pos:start="666:35" pos:end="666:47"><name pos:start="666:35" pos:end="666:41">targets</name><operator pos:start="666:42" pos:end="666:42">.</operator><name pos:start="666:43" pos:end="666:47">split</name></name><argument_list pos:start="666:48" pos:end="666:52">(<argument pos:start="666:49" pos:end="666:51"><expr pos:start="666:49" pos:end="666:51"><literal type="char" pos:start="666:49" pos:end="666:51">','</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="667:9" pos:end="667:73"><expr pos:start="667:9" pos:end="667:72"><name pos:start="667:9" pos:end="667:13">query</name> <operator pos:start="667:15" pos:end="667:16">+=</operator> <call pos:start="667:18" pos:end="667:52"><name pos:start="667:18" pos:end="667:24">QString</name><argument_list pos:start="667:25" pos:end="667:52">(<argument pos:start="667:26" pos:end="667:51"><expr pos:start="667:26" pos:end="667:51"><literal type="string" pos:start="667:26" pos:end="667:51">"fixation_target = \"%1\""</literal></expr></argument>)</argument_list></call><operator pos:start="667:53" pos:end="667:53">.</operator><call pos:start="667:54" pos:end="667:72"><name pos:start="667:54" pos:end="667:56">arg</name><argument_list pos:start="667:57" pos:end="667:72">(<argument pos:start="667:58" pos:end="667:71"><expr pos:start="667:58" pos:end="667:71"><name pos:start="667:58" pos:end="667:71"><name pos:start="667:58" pos:end="667:68">target_list</name><index pos:start="667:69" pos:end="667:71">[<expr pos:start="667:70" pos:end="667:70"><literal type="number" pos:start="667:70" pos:end="667:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="668:9" pos:end="670:9">for<control pos:start="668:12" pos:end="668:72">(<init pos:start="668:13" pos:end="668:43"><decl pos:start="668:13" pos:end="668:42"><type pos:start="668:13" pos:end="668:16"><name pos:start="668:13" pos:end="668:16">auto</name></type> <name pos:start="668:18" pos:end="668:18">i</name> <init pos:start="668:20" pos:end="668:42">= <expr pos:start="668:22" pos:end="668:42"><call pos:start="668:22" pos:end="668:40"><name pos:start="668:22" pos:end="668:38"><name pos:start="668:22" pos:end="668:32">target_list</name><operator pos:start="668:33" pos:end="668:33">.</operator><name pos:start="668:34" pos:end="668:38">begin</name></name><argument_list pos:start="668:39" pos:end="668:40">()</argument_list></call><operator pos:start="668:41" pos:end="668:41">+</operator><literal type="number" pos:start="668:42" pos:end="668:42">1</literal></expr></init></decl>;</init> <condition pos:start="668:45" pos:end="668:67"><expr pos:start="668:45" pos:end="668:66"><name pos:start="668:45" pos:end="668:45">i</name> <operator pos:start="668:47" pos:end="668:48">!=</operator> <call pos:start="668:50" pos:end="668:66"><name pos:start="668:50" pos:end="668:64"><name pos:start="668:50" pos:end="668:60">target_list</name><operator pos:start="668:61" pos:end="668:61">.</operator><name pos:start="668:62" pos:end="668:64">end</name></name><argument_list pos:start="668:65" pos:end="668:66">()</argument_list></call></expr>;</condition> <incr pos:start="668:69" pos:end="668:71"><expr pos:start="668:69" pos:end="668:71"><operator pos:start="668:69" pos:end="668:70">++</operator><name pos:start="668:71" pos:end="668:71">i</name></expr></incr>)</control> <block pos:start="668:74" pos:end="670:9">{<block_content pos:start="669:13" pos:end="669:70">
            <expr_stmt pos:start="669:13" pos:end="669:70"><expr pos:start="669:13" pos:end="669:69"><name pos:start="669:13" pos:end="669:17">query</name> <operator pos:start="669:19" pos:end="669:20">+=</operator> <call pos:start="669:22" pos:end="669:61"><name pos:start="669:22" pos:end="669:28">QString</name><argument_list pos:start="669:29" pos:end="669:61">(<argument pos:start="669:30" pos:end="669:60"><expr pos:start="669:30" pos:end="669:60"><literal type="string" pos:start="669:30" pos:end="669:60">" OR fixation_target = \"%1\" "</literal></expr></argument>)</argument_list></call><operator pos:start="669:62" pos:end="669:62">.</operator><call pos:start="669:63" pos:end="669:69"><name pos:start="669:63" pos:end="669:65">arg</name><argument_list pos:start="669:66" pos:end="669:69">(<argument pos:start="669:67" pos:end="669:68"><expr pos:start="669:67" pos:end="669:68"><operator pos:start="669:67" pos:end="669:67">*</operator><name pos:start="669:68" pos:end="669:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="671:9" pos:end="671:25"><expr pos:start="671:9" pos:end="671:24"><name pos:start="671:9" pos:end="671:13">query</name> <operator pos:start="671:15" pos:end="671:16">+=</operator> <literal type="string" pos:start="671:18" pos:end="671:24">" AND "</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="line" pos:start="673:5" pos:end="673:20">// Add in Tokens</comment>
    <if_stmt pos:start="674:5" pos:end="681:5"><if pos:start="674:5" pos:end="681:5">if<condition pos:start="674:7" pos:end="674:25">(<expr pos:start="674:8" pos:end="674:24"><name pos:start="674:8" pos:end="674:18">token_types</name> <operator pos:start="674:20" pos:end="674:21">!=</operator> <literal type="string" pos:start="674:23" pos:end="674:24">""</literal></expr>)</condition> <block pos:start="674:27" pos:end="681:5">{<block_content pos:start="675:9" pos:end="680:26">
        <decl_stmt pos:start="675:9" pos:end="675:56"><decl pos:start="675:9" pos:end="675:55"><type pos:start="675:9" pos:end="675:19"><name pos:start="675:9" pos:end="675:19">QStringList</name></type> <name pos:start="675:21" pos:end="675:30">token_list</name> <init pos:start="675:32" pos:end="675:55">= <expr pos:start="675:34" pos:end="675:55"><call pos:start="675:34" pos:end="675:55"><name pos:start="675:34" pos:end="675:50"><name pos:start="675:34" pos:end="675:44">token_types</name><operator pos:start="675:45" pos:end="675:45">.</operator><name pos:start="675:46" pos:end="675:50">split</name></name><argument_list pos:start="675:51" pos:end="675:55">(<argument pos:start="675:52" pos:end="675:54"><expr pos:start="675:52" pos:end="675:54"><literal type="char" pos:start="675:52" pos:end="675:54">','</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="676:9" pos:end="676:73"><expr pos:start="676:9" pos:end="676:72"><name pos:start="676:9" pos:end="676:13">query</name> <operator pos:start="676:15" pos:end="676:16">+=</operator> <call pos:start="676:18" pos:end="676:53"><name pos:start="676:18" pos:end="676:24">QString</name><argument_list pos:start="676:25" pos:end="676:53">(<argument pos:start="676:26" pos:end="676:52"><expr pos:start="676:26" pos:end="676:52"><literal type="string" pos:start="676:26" pos:end="676:52">"(fixation_target = \"%1\""</literal></expr></argument>)</argument_list></call><operator pos:start="676:54" pos:end="676:54">.</operator><call pos:start="676:55" pos:end="676:72"><name pos:start="676:55" pos:end="676:57">arg</name><argument_list pos:start="676:58" pos:end="676:72">(<argument pos:start="676:59" pos:end="676:71"><expr pos:start="676:59" pos:end="676:71"><name pos:start="676:59" pos:end="676:71"><name pos:start="676:59" pos:end="676:68">token_list</name><index pos:start="676:69" pos:end="676:71">[<expr pos:start="676:70" pos:end="676:70"><literal type="number" pos:start="676:70" pos:end="676:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="677:9" pos:end="679:9">for<control pos:start="677:12" pos:end="677:70">(<init pos:start="677:13" pos:end="677:42"><decl pos:start="677:13" pos:end="677:41"><type pos:start="677:13" pos:end="677:16"><name pos:start="677:13" pos:end="677:16">auto</name></type> <name pos:start="677:18" pos:end="677:18">i</name> <init pos:start="677:20" pos:end="677:41">= <expr pos:start="677:22" pos:end="677:41"><call pos:start="677:22" pos:end="677:39"><name pos:start="677:22" pos:end="677:37"><name pos:start="677:22" pos:end="677:31">token_list</name><operator pos:start="677:32" pos:end="677:32">.</operator><name pos:start="677:33" pos:end="677:37">begin</name></name><argument_list pos:start="677:38" pos:end="677:39">()</argument_list></call><operator pos:start="677:40" pos:end="677:40">+</operator><literal type="number" pos:start="677:41" pos:end="677:41">1</literal></expr></init></decl>;</init> <condition pos:start="677:44" pos:end="677:65"><expr pos:start="677:44" pos:end="677:64"><name pos:start="677:44" pos:end="677:44">i</name> <operator pos:start="677:46" pos:end="677:47">!=</operator> <call pos:start="677:49" pos:end="677:64"><name pos:start="677:49" pos:end="677:62"><name pos:start="677:49" pos:end="677:58">token_list</name><operator pos:start="677:59" pos:end="677:59">.</operator><name pos:start="677:60" pos:end="677:62">end</name></name><argument_list pos:start="677:63" pos:end="677:64">()</argument_list></call></expr>;</condition> <incr pos:start="677:67" pos:end="677:69"><expr pos:start="677:67" pos:end="677:69"><operator pos:start="677:67" pos:end="677:68">++</operator><name pos:start="677:69" pos:end="677:69">i</name></expr></incr>)</control> <block pos:start="677:72" pos:end="679:9">{<block_content pos:start="678:13" pos:end="678:60">
            <expr_stmt pos:start="678:13" pos:end="678:60"><expr pos:start="678:13" pos:end="678:59"><name pos:start="678:13" pos:end="678:17">query</name> <operator pos:start="678:19" pos:end="678:20">+=</operator> <call pos:start="678:22" pos:end="678:51"><name pos:start="678:22" pos:end="678:28">QString</name><argument_list pos:start="678:29" pos:end="678:51">(<argument pos:start="678:30" pos:end="678:50"><expr pos:start="678:30" pos:end="678:50"><literal type="string" pos:start="678:30" pos:end="678:50">" OR token = \"%1\" "</literal></expr></argument>)</argument_list></call><operator pos:start="678:52" pos:end="678:52">.</operator><call pos:start="678:53" pos:end="678:59"><name pos:start="678:53" pos:end="678:55">arg</name><argument_list pos:start="678:56" pos:end="678:59">(<argument pos:start="678:57" pos:end="678:58"><expr pos:start="678:57" pos:end="678:58"><operator pos:start="678:57" pos:end="678:57">*</operator><name pos:start="678:58" pos:end="678:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="680:9" pos:end="680:26"><expr pos:start="680:9" pos:end="680:25"><name pos:start="680:9" pos:end="680:13">query</name> <operator pos:start="680:15" pos:end="680:16">+=</operator> <literal type="string" pos:start="680:18" pos:end="680:25">") AND "</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="683:5" pos:end="683:15">// Duration</comment>
    <expr_stmt pos:start="684:5" pos:end="684:120"><expr pos:start="684:5" pos:end="684:119"><name pos:start="684:5" pos:end="684:9">query</name> <operator pos:start="684:11" pos:end="684:12">+=</operator> <literal type="string" pos:start="684:14" pos:end="684:28">" duration &gt;= "</literal> <operator pos:start="684:30" pos:end="684:30">+</operator> <name pos:start="684:32" pos:end="684:43">duration_min</name> <operator pos:start="684:45" pos:end="684:45">+</operator> <literal type="string" pos:start="684:47" pos:end="684:49">" "</literal> <operator pos:start="684:51" pos:end="684:51">+</operator> <operator pos:start="684:53" pos:end="684:53">(</operator><ternary pos:start="684:54" pos:end="684:118"><condition pos:start="684:54" pos:end="684:81"><expr pos:start="684:54" pos:end="684:79"><call pos:start="684:54" pos:end="684:73"><name pos:start="684:54" pos:end="684:71"><name pos:start="684:54" pos:end="684:65">duration_max</name><operator pos:start="684:66" pos:end="684:66">.</operator><name pos:start="684:67" pos:end="684:71">toInt</name></name><argument_list pos:start="684:72" pos:end="684:73">()</argument_list></call> <operator pos:start="684:75" pos:end="684:76">==</operator> <operator pos:start="684:78" pos:end="684:78">-</operator><literal type="number" pos:start="684:79" pos:end="684:79">1</literal></expr> ?</condition><then pos:start="684:83" pos:end="684:84"> <expr pos:start="684:83" pos:end="684:84"><literal type="string" pos:start="684:83" pos:end="684:84">""</literal></expr> </then><else pos:start="684:86" pos:end="684:118">: <expr pos:start="684:88" pos:end="684:118"><literal type="string" pos:start="684:88" pos:end="684:105">"AND duration &lt;= "</literal><operator pos:start="684:106" pos:end="684:106">+</operator><name pos:start="684:107" pos:end="684:118">duration_max</name></expr></else></ternary><operator pos:start="684:119" pos:end="684:119">)</operator></expr>;</expr_stmt>
    <comment type="line" pos:start="685:5" pos:end="685:25">// Source File Line #</comment>
    <expr_stmt pos:start="686:5" pos:end="686:164"><expr pos:start="686:5" pos:end="686:163"><name pos:start="686:5" pos:end="686:9">query</name> <operator pos:start="686:11" pos:end="686:12">+=</operator> <literal type="string" pos:start="686:14" pos:end="686:40">" AND source_file_line &gt;= "</literal> <operator pos:start="686:42" pos:end="686:42">+</operator> <name pos:start="686:44" pos:end="686:63">source_file_line_min</name> <operator pos:start="686:65" pos:end="686:65">+</operator> <literal type="string" pos:start="686:67" pos:end="686:69">" "</literal> <operator pos:start="686:71" pos:end="686:71">+</operator> <operator pos:start="686:73" pos:end="686:73">(</operator><ternary pos:start="686:74" pos:end="686:162"><condition pos:start="686:74" pos:end="686:109"><expr pos:start="686:74" pos:end="686:107"><call pos:start="686:74" pos:end="686:101"><name pos:start="686:74" pos:end="686:99"><name pos:start="686:74" pos:end="686:93">source_file_line_max</name><operator pos:start="686:94" pos:end="686:94">.</operator><name pos:start="686:95" pos:end="686:99">toInt</name></name><argument_list pos:start="686:100" pos:end="686:101">()</argument_list></call> <operator pos:start="686:103" pos:end="686:104">==</operator> <operator pos:start="686:106" pos:end="686:106">-</operator><literal type="number" pos:start="686:107" pos:end="686:107">1</literal></expr> ?</condition><then pos:start="686:111" pos:end="686:112"> <expr pos:start="686:111" pos:end="686:112"><literal type="string" pos:start="686:111" pos:end="686:112">""</literal></expr> </then><else pos:start="686:114" pos:end="686:162">: <expr pos:start="686:116" pos:end="686:162"><literal type="string" pos:start="686:116" pos:end="686:141">"AND source_file_line &lt;= "</literal><operator pos:start="686:142" pos:end="686:142">+</operator><name pos:start="686:143" pos:end="686:162">source_file_line_max</name></expr></else></ternary><operator pos:start="686:163" pos:end="686:163">)</operator></expr>;</expr_stmt>
    <comment type="line" pos:start="687:5" pos:end="687:27">// Source File Column #</comment>
    <expr_stmt pos:start="688:5" pos:end="688:159"><expr pos:start="688:5" pos:end="688:158"><name pos:start="688:5" pos:end="688:9">query</name> <operator pos:start="688:11" pos:end="688:12">+=</operator> <literal type="string" pos:start="688:14" pos:end="688:39">" AND source_file_col &gt;= "</literal> <operator pos:start="688:41" pos:end="688:41">+</operator> <name pos:start="688:43" pos:end="688:61">source_file_col_min</name> <operator pos:start="688:63" pos:end="688:63">+</operator> <literal type="string" pos:start="688:65" pos:end="688:67">" "</literal> <operator pos:start="688:69" pos:end="688:69">+</operator> <operator pos:start="688:71" pos:end="688:71">(</operator><ternary pos:start="688:72" pos:end="688:157"><condition pos:start="688:72" pos:end="688:106"><expr pos:start="688:72" pos:end="688:104"><call pos:start="688:72" pos:end="688:98"><name pos:start="688:72" pos:end="688:96"><name pos:start="688:72" pos:end="688:90">source_file_col_max</name><operator pos:start="688:91" pos:end="688:91">.</operator><name pos:start="688:92" pos:end="688:96">toInt</name></name><argument_list pos:start="688:97" pos:end="688:98">()</argument_list></call> <operator pos:start="688:100" pos:end="688:101">==</operator> <operator pos:start="688:103" pos:end="688:103">-</operator><literal type="number" pos:start="688:104" pos:end="688:104">1</literal></expr> ?</condition><then pos:start="688:108" pos:end="688:109"> <expr pos:start="688:108" pos:end="688:109"><literal type="string" pos:start="688:108" pos:end="688:109">""</literal></expr> </then><else pos:start="688:111" pos:end="688:157">: <expr pos:start="688:113" pos:end="688:157"><literal type="string" pos:start="688:113" pos:end="688:137">"AND source_file_col &lt;= "</literal><operator pos:start="688:138" pos:end="688:138">+</operator><name pos:start="688:139" pos:end="688:157">source_file_col_max</name></expr></else></ternary><operator pos:start="688:158" pos:end="688:158">)</operator></expr>;</expr_stmt>


    <comment type="line" pos:start="691:5" pos:end="691:37">// Left and Right Pupil Diameters</comment>
    <expr_stmt pos:start="692:5" pos:end="692:135"><expr pos:start="692:5" pos:end="692:134"><name pos:start="692:5" pos:end="692:9">query</name> <operator pos:start="692:11" pos:end="692:12">+=</operator> <literal type="string" pos:start="692:14" pos:end="692:43">" AND left_pupil_diameter &gt;= "</literal> <operator pos:start="692:45" pos:end="692:45">+</operator> <name pos:start="692:47" pos:end="692:69">left_pupil_diameter_min</name> <operator pos:start="692:71" pos:end="692:71">+</operator> <literal type="string" pos:start="692:73" pos:end="692:102">" AND left_pupil_diameter &lt;= "</literal> <operator pos:start="692:104" pos:end="692:104">+</operator> <name pos:start="692:106" pos:end="692:128">left_pupil_diameter_max</name> <operator pos:start="692:130" pos:end="692:130">+</operator> <literal type="string" pos:start="692:132" pos:end="692:134">" "</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="693:5" pos:end="693:139"><expr pos:start="693:5" pos:end="693:138"><name pos:start="693:5" pos:end="693:9">query</name> <operator pos:start="693:11" pos:end="693:12">+=</operator> <literal type="string" pos:start="693:14" pos:end="693:44">" AND right_pupil_diameter &gt;= "</literal> <operator pos:start="693:46" pos:end="693:46">+</operator> <name pos:start="693:48" pos:end="693:71">right_pupil_diameter_min</name> <operator pos:start="693:73" pos:end="693:73">+</operator> <literal type="string" pos:start="693:75" pos:end="693:105">" AND right_pupil_diameter &lt;= "</literal> <operator pos:start="693:107" pos:end="693:107">+</operator> <name pos:start="693:109" pos:end="693:132">right_pupil_diameter_max</name> <operator pos:start="693:134" pos:end="693:134">+</operator> <literal type="string" pos:start="693:136" pos:end="693:138">" "</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="695:5" pos:end="695:59"><expr pos:start="695:5" pos:end="695:58"><name pos:start="695:5" pos:end="695:13"><name pos:start="695:5" pos:end="695:7">std</name><operator pos:start="695:8" pos:end="695:9">::</operator><name pos:start="695:10" pos:end="695:13">cout</name></name> <operator pos:start="695:15" pos:end="695:16">&lt;&lt;</operator> <literal type="string" pos:start="695:18" pos:end="695:26">"QUERY: "</literal> <operator pos:start="695:28" pos:end="695:29">&lt;&lt;</operator> <name pos:start="695:31" pos:end="695:35">query</name> <operator pos:start="695:37" pos:end="695:38">&lt;&lt;</operator> <literal type="string" pos:start="695:40" pos:end="695:45">"||\n"</literal> <operator pos:start="695:47" pos:end="695:48">&lt;&lt;</operator> <name pos:start="695:50" pos:end="695:58"><name pos:start="695:50" pos:end="695:52">std</name><operator pos:start="695:53" pos:end="695:54">::</operator><name pos:start="695:55" pos:end="695:58">endl</name></name></expr>;</expr_stmt>
    <return pos:start="696:5" pos:end="696:17">return <expr pos:start="696:12" pos:end="696:16"><name pos:start="696:12" pos:end="696:16">query</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="699:1" pos:end="712:1"><type pos:start="699:1" pos:end="699:4"><name pos:start="699:1" pos:end="699:4">void</name></type> <name pos:start="699:6" pos:end="699:30"><name pos:start="699:6" pos:end="699:15">Controller</name><operator pos:start="699:16" pos:end="699:17">::</operator><name pos:start="699:18" pos:end="699:30">loadQueryFile</name></name><parameter_list pos:start="699:31" pos:end="699:70">(<parameter pos:start="699:32" pos:end="699:48"><decl pos:start="699:32" pos:end="699:48"><type pos:start="699:32" pos:end="699:48"><name pos:start="699:32" pos:end="699:38">QString</name></type> <name pos:start="699:40" pos:end="699:48">file_path</name></decl></parameter>, <parameter pos:start="699:51" pos:end="699:69"><decl pos:start="699:51" pos:end="699:69"><type pos:start="699:51" pos:end="699:69"><name pos:start="699:51" pos:end="699:57">QString</name></type> <name pos:start="699:59" pos:end="699:69">output_type</name></decl></parameter>)</parameter_list> <block pos:start="699:72" pos:end="712:1">{<block_content pos:start="700:5" pos:end="711:42">
    <expr_stmt pos:start="700:5" pos:end="700:32"><expr pos:start="700:5" pos:end="700:31"><call pos:start="700:5" pos:end="700:31"><name pos:start="700:5" pos:end="700:20">changeFilePathOS</name><argument_list pos:start="700:21" pos:end="700:31">(<argument pos:start="700:22" pos:end="700:30"><expr pos:start="700:22" pos:end="700:30"><name pos:start="700:22" pos:end="700:30">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="701:5" pos:end="701:26"><decl pos:start="701:5" pos:end="701:25"><type pos:start="701:5" pos:end="701:9"><name pos:start="701:5" pos:end="701:9">QFile</name></type> <name pos:start="701:11" pos:end="701:14">file</name><argument_list pos:start="701:15" pos:end="701:25">(<argument pos:start="701:16" pos:end="701:24"><expr pos:start="701:16" pos:end="701:24"><name pos:start="701:16" pos:end="701:24">file_path</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <if_stmt pos:start="702:5" pos:end="705:5"><if pos:start="702:5" pos:end="705:5">if<condition pos:start="702:7" pos:end="702:57">(<expr pos:start="702:8" pos:end="702:56"><operator pos:start="702:8" pos:end="702:8">!</operator><call pos:start="702:9" pos:end="702:56"><name pos:start="702:9" pos:end="702:17"><name pos:start="702:9" pos:end="702:12">file</name><operator pos:start="702:13" pos:end="702:13">.</operator><name pos:start="702:14" pos:end="702:17">open</name></name><argument_list pos:start="702:18" pos:end="702:56">(<argument pos:start="702:19" pos:end="702:55"><expr pos:start="702:19" pos:end="702:55"><name pos:start="702:19" pos:end="702:37"><name pos:start="702:19" pos:end="702:27">QIODevice</name><operator pos:start="702:28" pos:end="702:29">::</operator><name pos:start="702:30" pos:end="702:37">ReadOnly</name></name> <operator pos:start="702:39" pos:end="702:39">|</operator> <name pos:start="702:41" pos:end="702:55"><name pos:start="702:41" pos:end="702:49">QIODevice</name><operator pos:start="702:50" pos:end="702:51">::</operator><name pos:start="702:52" pos:end="702:55">Text</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="702:59" pos:end="705:5">{<block_content pos:start="703:9" pos:end="704:15">
        <emit pos:start="703:9" pos:end="703:80">emit <expr pos:start="703:14" pos:end="703:79"><call pos:start="703:14" pos:end="703:79"><name pos:start="703:14" pos:end="703:27">outputToScreen</name><argument_list pos:start="703:28" pos:end="703:79">(<argument pos:start="703:29" pos:end="703:33"><expr pos:start="703:29" pos:end="703:33"><literal type="string" pos:start="703:29" pos:end="703:33">"red"</literal></expr></argument>,<argument pos:start="703:35" pos:end="703:78"><expr pos:start="703:35" pos:end="703:78"><literal type="string" pos:start="703:35" pos:end="703:78">"No file matching the given path was found."</literal></expr></argument>)</argument_list></call></expr>;</emit>
        <return pos:start="704:9" pos:end="704:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt pos:start="706:5" pos:end="706:30"><decl pos:start="706:5" pos:end="706:29"><type pos:start="706:5" pos:end="706:15"><name pos:start="706:5" pos:end="706:15">QTextStream</name></type> <name pos:start="706:17" pos:end="706:22">stream</name><argument_list pos:start="706:23" pos:end="706:29">(<argument pos:start="706:24" pos:end="706:28"><expr pos:start="706:24" pos:end="706:28"><operator pos:start="706:24" pos:end="706:24">&amp;</operator><name pos:start="706:25" pos:end="706:28">file</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <decl_stmt pos:start="707:5" pos:end="707:36"><decl pos:start="707:5" pos:end="707:35"><type pos:start="707:5" pos:end="707:11"><name pos:start="707:5" pos:end="707:11">QString</name></type> <name pos:start="707:13" pos:end="707:16">data</name> <init pos:start="707:18" pos:end="707:35">= <expr pos:start="707:20" pos:end="707:35"><call pos:start="707:20" pos:end="707:35"><name pos:start="707:20" pos:end="707:33"><name pos:start="707:20" pos:end="707:25">stream</name><operator pos:start="707:26" pos:end="707:26">.</operator><name pos:start="707:27" pos:end="707:33">readAll</name></name><argument_list pos:start="707:34" pos:end="707:35">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="709:5" pos:end="709:17"><expr pos:start="709:5" pos:end="709:16"><call pos:start="709:5" pos:end="709:16"><name pos:start="709:5" pos:end="709:14"><name pos:start="709:5" pos:end="709:8">file</name><operator pos:start="709:9" pos:end="709:9">.</operator><name pos:start="709:10" pos:end="709:14">close</name></name><argument_list pos:start="709:15" pos:end="709:16">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="711:5" pos:end="711:42"><expr pos:start="711:5" pos:end="711:41"><call pos:start="711:5" pos:end="711:41"><name pos:start="711:5" pos:end="711:23">generateQueriedData</name><argument_list pos:start="711:24" pos:end="711:41">(<argument pos:start="711:25" pos:end="711:28"><expr pos:start="711:25" pos:end="711:28"><name pos:start="711:25" pos:end="711:28">data</name></expr></argument>,<argument pos:start="711:30" pos:end="711:40"><expr pos:start="711:30" pos:end="711:40"><name pos:start="711:30" pos:end="711:40">output_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function pos:start="714:1" pos:end="719:1"><type pos:start="714:1" pos:end="714:4"><name pos:start="714:1" pos:end="714:4">void</name></type> <name pos:start="714:6" pos:end="714:30"><name pos:start="714:6" pos:end="714:15">Controller</name><operator pos:start="714:16" pos:end="714:17">::</operator><name pos:start="714:18" pos:end="714:30">saveQueryFile</name></name><parameter_list pos:start="714:31" pos:end="714:64">(<parameter pos:start="714:32" pos:end="714:44"><decl pos:start="714:32" pos:end="714:44"><type pos:start="714:32" pos:end="714:44"><name pos:start="714:32" pos:end="714:38">QString</name></type> <name pos:start="714:40" pos:end="714:44">query</name></decl></parameter>, <parameter pos:start="714:47" pos:end="714:63"><decl pos:start="714:47" pos:end="714:63"><type pos:start="714:47" pos:end="714:63"><name pos:start="714:47" pos:end="714:53">QString</name></type> <name pos:start="714:55" pos:end="714:63">file_path</name></decl></parameter>)</parameter_list> <block pos:start="714:66" pos:end="719:1">{<block_content pos:start="715:5" pos:end="718:17">
    <expr_stmt pos:start="715:5" pos:end="715:32"><expr pos:start="715:5" pos:end="715:31"><call pos:start="715:5" pos:end="715:31"><name pos:start="715:5" pos:end="715:20">changeFilePathOS</name><argument_list pos:start="715:21" pos:end="715:31">(<argument pos:start="715:22" pos:end="715:30"><expr pos:start="715:22" pos:end="715:30"><name pos:start="715:22" pos:end="715:30">file_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt pos:start="716:5" pos:end="716:55"><decl pos:start="716:5" pos:end="716:54"><type pos:start="716:5" pos:end="716:17"><name pos:start="716:5" pos:end="716:17"><name pos:start="716:5" pos:end="716:7">std</name><operator pos:start="716:8" pos:end="716:9">::</operator><name pos:start="716:10" pos:end="716:17">ofstream</name></name></type> <name pos:start="716:19" pos:end="716:22">file</name><argument_list pos:start="716:23" pos:end="716:54">(<argument pos:start="716:24" pos:end="716:53"><expr pos:start="716:24" pos:end="716:53"><call pos:start="716:24" pos:end="716:41"><name pos:start="716:24" pos:end="716:39"><name pos:start="716:24" pos:end="716:32">file_path</name><operator pos:start="716:33" pos:end="716:33">.</operator><name pos:start="716:34" pos:end="716:39">toUtf8</name></name><argument_list pos:start="716:40" pos:end="716:41">()</argument_list></call><operator pos:start="716:42" pos:end="716:42">.</operator><call pos:start="716:43" pos:end="716:53"><name pos:start="716:43" pos:end="716:51">constData</name><argument_list pos:start="716:52" pos:end="716:53">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt pos:start="717:5" pos:end="717:18"><expr pos:start="717:5" pos:end="717:17"><name pos:start="717:5" pos:end="717:8">file</name> <operator pos:start="717:10" pos:end="717:11">&lt;&lt;</operator> <name pos:start="717:13" pos:end="717:17">query</name></expr>;</expr_stmt>
    <expr_stmt pos:start="718:5" pos:end="718:17"><expr pos:start="718:5" pos:end="718:16"><call pos:start="718:5" pos:end="718:16"><name pos:start="718:5" pos:end="718:14"><name pos:start="718:5" pos:end="718:8">file</name><operator pos:start="718:9" pos:end="718:9">.</operator><name pos:start="718:10" pos:end="718:14">close</name></name><argument_list pos:start="718:15" pos:end="718:16">()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function pos:start="721:1" pos:end="765:1"><type pos:start="721:1" pos:end="721:4"><name pos:start="721:1" pos:end="721:4">void</name></type> <name pos:start="721:6" pos:end="721:36"><name pos:start="721:6" pos:end="721:15">Controller</name><operator pos:start="721:16" pos:end="721:17">::</operator><name pos:start="721:18" pos:end="721:36">generateQueriedData</name></name><parameter_list pos:start="721:37" pos:end="721:72">(<parameter pos:start="721:38" pos:end="721:50"><decl pos:start="721:38" pos:end="721:50"><type pos:start="721:38" pos:end="721:50"><name pos:start="721:38" pos:end="721:44">QString</name></type> <name pos:start="721:46" pos:end="721:50">query</name></decl></parameter>, <parameter pos:start="721:53" pos:end="721:71"><decl pos:start="721:53" pos:end="721:71"><type pos:start="721:53" pos:end="721:71"><name pos:start="721:53" pos:end="721:59">QString</name></type> <name pos:start="721:61" pos:end="721:71">output_type</name></decl></parameter>)</parameter_list> <block pos:start="721:74" pos:end="765:1">{<block_content pos:start="722:5" pos:end="764:42">
    <decl_stmt pos:start="722:5" pos:end="722:63"><decl pos:start="722:5" pos:end="722:62"><type pos:start="722:5" pos:end="722:29"><name pos:start="722:5" pos:end="722:29"><name pos:start="722:5" pos:end="722:11">QVector</name><argument_list type="generic" pos:start="722:12" pos:end="722:29">&lt;<argument pos:start="722:13" pos:end="722:28"><expr pos:start="722:13" pos:end="722:28"><name pos:start="722:13" pos:end="722:28"><name pos:start="722:13" pos:end="722:19">QVector</name><argument_list type="generic" pos:start="722:20" pos:end="722:28">&lt;<argument pos:start="722:21" pos:end="722:27"><expr pos:start="722:21" pos:end="722:27"><name pos:start="722:21" pos:end="722:27">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="722:31" pos:end="722:34">data</name> <init pos:start="722:36" pos:end="722:62">= <expr pos:start="722:38" pos:end="722:62"><call pos:start="722:38" pos:end="722:62"><name pos:start="722:38" pos:end="722:55"><name pos:start="722:38" pos:end="722:40">idb</name><operator pos:start="722:41" pos:end="722:41">.</operator><name pos:start="722:42" pos:end="722:55">runFilterQuery</name></name><argument_list pos:start="722:56" pos:end="722:62">(<argument pos:start="722:57" pos:end="722:61"><expr pos:start="722:57" pos:end="722:61"><name pos:start="722:57" pos:end="722:61">query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="723:5" pos:end="723:52"><decl pos:start="723:5" pos:end="723:51"><type pos:start="723:5" pos:end="723:11"><name pos:start="723:5" pos:end="723:11">QString</name></type> <name pos:start="723:13" pos:end="723:21">safeQuery</name> <init pos:start="723:23" pos:end="723:51">= <expr pos:start="723:25" pos:end="723:51"><call pos:start="723:25" pos:end="723:51"><name pos:start="723:25" pos:end="723:37"><name pos:start="723:25" pos:end="723:29">query</name><operator pos:start="723:30" pos:end="723:30">.</operator><name pos:start="723:31" pos:end="723:37">replace</name></name><argument_list pos:start="723:38" pos:end="723:51">(<argument pos:start="723:39" pos:end="723:42"><expr pos:start="723:39" pos:end="723:42"><literal type="string" pos:start="723:39" pos:end="723:42">"\""</literal></expr></argument>, <argument pos:start="723:45" pos:end="723:50"><expr pos:start="723:45" pos:end="723:50"><literal type="string" pos:start="723:45" pos:end="723:50">"\\\""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="724:5" pos:end="724:89"><decl pos:start="724:5" pos:end="724:88"><type pos:start="724:5" pos:end="724:11"><name pos:start="724:5" pos:end="724:11">QString</name></type> <name pos:start="724:13" pos:end="724:20">savename</name> <init pos:start="724:22" pos:end="724:88">= <expr pos:start="724:24" pos:end="724:88"><literal type="string" pos:start="724:24" pos:end="724:40">"fixation_query_"</literal><operator pos:start="724:41" pos:end="724:41">+</operator><call pos:start="724:42" pos:end="724:76"><name pos:start="724:42" pos:end="724:56"><name pos:start="724:42" pos:end="724:48">QString</name><operator pos:start="724:49" pos:end="724:50">::</operator><name pos:start="724:51" pos:end="724:56">number</name></name><argument_list pos:start="724:57" pos:end="724:76">(<argument pos:start="724:58" pos:end="724:75"><expr pos:start="724:58" pos:end="724:75"><call pos:start="724:58" pos:end="724:75"><name pos:start="724:58" pos:end="724:66"><name pos:start="724:58" pos:end="724:60">std</name><operator pos:start="724:61" pos:end="724:62">::</operator><name pos:start="724:63" pos:end="724:66">time</name></name><argument_list pos:start="724:67" pos:end="724:75">(<argument pos:start="724:68" pos:end="724:74"><expr pos:start="724:68" pos:end="724:74"><literal type="null" pos:start="724:68" pos:end="724:74">nullptr</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="724:77" pos:end="724:77">+</operator><name pos:start="724:78" pos:end="724:88">output_type</name></expr></init></decl>;</decl_stmt>
    <comment type="line" format="doxygen" pos:start="725:5" pos:end="725:20">/////// DATABASE</comment>
    <if_stmt pos:start="726:5" pos:end="763:5"><if pos:start="726:5" pos:end="736:5">if<condition pos:start="726:7" pos:end="726:29">(<expr pos:start="726:8" pos:end="726:28"><name pos:start="726:8" pos:end="726:18">output_type</name> <operator pos:start="726:20" pos:end="726:21">==</operator> <literal type="string" pos:start="726:23" pos:end="726:28">".db3"</literal></expr>)</condition> <block pos:start="726:31" pos:end="736:5">{<block_content pos:start="727:9" pos:end="735:47">
        <decl_stmt pos:start="727:9" pos:end="727:76"><decl pos:start="727:9" pos:end="727:75"><type pos:start="727:9" pos:end="727:20"><name pos:start="727:9" pos:end="727:20">QSqlDatabase</name></type> <name pos:start="727:22" pos:end="727:27">output</name> <init pos:start="727:29" pos:end="727:75">= <expr pos:start="727:31" pos:end="727:75"><call pos:start="727:31" pos:end="727:75"><name pos:start="727:31" pos:end="727:55"><name pos:start="727:31" pos:end="727:42">QSqlDatabase</name><operator pos:start="727:43" pos:end="727:44">::</operator><name pos:start="727:45" pos:end="727:55">addDatabase</name></name><argument_list pos:start="727:56" pos:end="727:75">(<argument pos:start="727:57" pos:end="727:65"><expr pos:start="727:57" pos:end="727:65"><literal type="string" pos:start="727:57" pos:end="727:65">"QSQLITE"</literal></expr></argument>,<argument pos:start="727:67" pos:end="727:74"><expr pos:start="727:67" pos:end="727:74"><literal type="string" pos:start="727:67" pos:end="727:74">"output"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="728:9" pos:end="728:41"><expr pos:start="728:9" pos:end="728:40"><call pos:start="728:9" pos:end="728:40"><name pos:start="728:9" pos:end="728:30"><name pos:start="728:9" pos:end="728:14">output</name><operator pos:start="728:15" pos:end="728:15">.</operator><name pos:start="728:16" pos:end="728:30">setDatabaseName</name></name><argument_list pos:start="728:31" pos:end="728:40">(<argument pos:start="728:32" pos:end="728:39"><expr pos:start="728:32" pos:end="728:39"><name pos:start="728:32" pos:end="728:39">savename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="729:9" pos:end="729:22"><expr pos:start="729:9" pos:end="729:21"><call pos:start="729:9" pos:end="729:21"><name pos:start="729:9" pos:end="729:19"><name pos:start="729:9" pos:end="729:14">output</name><operator pos:start="729:15" pos:end="729:15">.</operator><name pos:start="729:16" pos:end="729:19">open</name></name><argument_list pos:start="729:20" pos:end="729:21">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="730:9" pos:end="730:394"><expr pos:start="730:9" pos:end="730:393"><call pos:start="730:9" pos:end="730:393"><name pos:start="730:9" pos:end="730:19"><name pos:start="730:9" pos:end="730:14">output</name><operator pos:start="730:15" pos:end="730:15">.</operator><name pos:start="730:16" pos:end="730:19">exec</name></name><argument_list pos:start="730:20" pos:end="730:393">(<argument pos:start="730:21" pos:end="730:392"><expr pos:start="730:21" pos:end="730:392"><literal type="string" pos:start="730:21" pos:end="730:392">"CREATE TABLE IF NOT EXISTS fixation(fixation_id TEXT PRIMARY KEY,fixation_run_id INTEGER,fixation_start_event_time INTEGER,fixation_order_number INTEGER,x INTEGER,y INTEGER,fixation_target TEXT,source_file_line INTEGER, source_file_col INTEGER,token TEXT,syntactic_category TEXT,xpath TEXT,left_pupil_diameter REAL,right_pupil_diameter REAL,duration INTEGER, query TEXT)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="731:9" pos:end="733:9">for<control pos:start="731:12" pos:end="731:26">(<init pos:start="731:13" pos:end="731:25"><decl pos:start="731:13" pos:end="731:25"><type pos:start="731:13" pos:end="731:16"><name pos:start="731:13" pos:end="731:16">auto</name></type> <name pos:start="731:18" pos:end="731:18">i</name> <range pos:start="731:20" pos:end="731:25">: <expr pos:start="731:22" pos:end="731:25"><name pos:start="731:22" pos:end="731:25">data</name></expr></range></decl></init>)</control> <block pos:start="731:28" pos:end="733:9">{<block_content pos:start="732:13" pos:end="732:650">
            <expr_stmt pos:start="732:13" pos:end="732:650"><expr pos:start="732:13" pos:end="732:649"><call pos:start="732:13" pos:end="732:649"><name pos:start="732:13" pos:end="732:23"><name pos:start="732:13" pos:end="732:18">output</name><operator pos:start="732:19" pos:end="732:19">.</operator><name pos:start="732:20" pos:end="732:23">exec</name></name><argument_list pos:start="732:24" pos:end="732:649">(<argument pos:start="732:25" pos:end="732:648"><expr pos:start="732:25" pos:end="732:648"><call pos:start="732:25" pos:end="732:347"><name pos:start="732:25" pos:end="732:31">QString</name><argument_list pos:start="732:32" pos:end="732:347">(<argument pos:start="732:33" pos:end="732:346"><expr pos:start="732:33" pos:end="732:346"><literal type="string" pos:start="732:33" pos:end="732:346">"INSERT INTO fixation(fixation_id,fixation_run_id,fixation_start_event_time,fixation_order_number,x,y,fixation_target,source_file_line,source_file_col,token,syntactic_category,xpath,left_pupil_diameter,right_pupil_diameter,duration,query) VALUES(\"%1\",%2,%3,%4,%5,%6,\"%7\",%8,%9,%10,%11,%12,%13,%14,%15,\"%16\")"</literal></expr></argument>)</argument_list></call><operator pos:start="732:348" pos:end="732:348">.</operator><call pos:start="732:349" pos:end="732:357"><name pos:start="732:349" pos:end="732:351">arg</name><argument_list pos:start="732:352" pos:end="732:357">(<argument pos:start="732:353" pos:end="732:356"><expr pos:start="732:353" pos:end="732:356"><name pos:start="732:353" pos:end="732:356"><name pos:start="732:353" pos:end="732:353">i</name><index pos:start="732:354" pos:end="732:356">[<expr pos:start="732:355" pos:end="732:355"><literal type="number" pos:start="732:355" pos:end="732:355">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:358" pos:end="732:358">.</operator><call pos:start="732:359" pos:end="732:367"><name pos:start="732:359" pos:end="732:361">arg</name><argument_list pos:start="732:362" pos:end="732:367">(<argument pos:start="732:363" pos:end="732:366"><expr pos:start="732:363" pos:end="732:366"><name pos:start="732:363" pos:end="732:366"><name pos:start="732:363" pos:end="732:363">i</name><index pos:start="732:364" pos:end="732:366">[<expr pos:start="732:365" pos:end="732:365"><literal type="number" pos:start="732:365" pos:end="732:365">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:368" pos:end="732:368">.</operator><call pos:start="732:369" pos:end="732:377"><name pos:start="732:369" pos:end="732:371">arg</name><argument_list pos:start="732:372" pos:end="732:377">(<argument pos:start="732:373" pos:end="732:376"><expr pos:start="732:373" pos:end="732:376"><name pos:start="732:373" pos:end="732:376"><name pos:start="732:373" pos:end="732:373">i</name><index pos:start="732:374" pos:end="732:376">[<expr pos:start="732:375" pos:end="732:375"><literal type="number" pos:start="732:375" pos:end="732:375">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:378" pos:end="732:378">.</operator><call pos:start="732:379" pos:end="732:387"><name pos:start="732:379" pos:end="732:381">arg</name><argument_list pos:start="732:382" pos:end="732:387">(<argument pos:start="732:383" pos:end="732:386"><expr pos:start="732:383" pos:end="732:386"><name pos:start="732:383" pos:end="732:386"><name pos:start="732:383" pos:end="732:383">i</name><index pos:start="732:384" pos:end="732:386">[<expr pos:start="732:385" pos:end="732:385"><literal type="number" pos:start="732:385" pos:end="732:385">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:388" pos:end="732:388">.</operator><call pos:start="732:389" pos:end="732:397"><name pos:start="732:389" pos:end="732:391">arg</name><argument_list pos:start="732:392" pos:end="732:397">(<argument pos:start="732:393" pos:end="732:396"><expr pos:start="732:393" pos:end="732:396"><name pos:start="732:393" pos:end="732:396"><name pos:start="732:393" pos:end="732:393">i</name><index pos:start="732:394" pos:end="732:396">[<expr pos:start="732:395" pos:end="732:395"><literal type="number" pos:start="732:395" pos:end="732:395">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:398" pos:end="732:398">.</operator><call pos:start="732:399" pos:end="732:407"><name pos:start="732:399" pos:end="732:401">arg</name><argument_list pos:start="732:402" pos:end="732:407">(<argument pos:start="732:403" pos:end="732:406"><expr pos:start="732:403" pos:end="732:406"><name pos:start="732:403" pos:end="732:406"><name pos:start="732:403" pos:end="732:403">i</name><index pos:start="732:404" pos:end="732:406">[<expr pos:start="732:405" pos:end="732:405"><literal type="number" pos:start="732:405" pos:end="732:405">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:408" pos:end="732:408">.</operator><call pos:start="732:409" pos:end="732:417"><name pos:start="732:409" pos:end="732:411">arg</name><argument_list pos:start="732:412" pos:end="732:417">(<argument pos:start="732:413" pos:end="732:416"><expr pos:start="732:413" pos:end="732:416"><name pos:start="732:413" pos:end="732:416"><name pos:start="732:413" pos:end="732:413">i</name><index pos:start="732:414" pos:end="732:416">[<expr pos:start="732:415" pos:end="732:415"><literal type="number" pos:start="732:415" pos:end="732:415">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:418" pos:end="732:418">.</operator><call pos:start="732:419" pos:end="732:427"><name pos:start="732:419" pos:end="732:421">arg</name><argument_list pos:start="732:422" pos:end="732:427">(<argument pos:start="732:423" pos:end="732:426"><expr pos:start="732:423" pos:end="732:426"><name pos:start="732:423" pos:end="732:426"><name pos:start="732:423" pos:end="732:423">i</name><index pos:start="732:424" pos:end="732:426">[<expr pos:start="732:425" pos:end="732:425"><literal type="number" pos:start="732:425" pos:end="732:425">7</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:428" pos:end="732:428">.</operator><call pos:start="732:429" pos:end="732:437"><name pos:start="732:429" pos:end="732:431">arg</name><argument_list pos:start="732:432" pos:end="732:437">(<argument pos:start="732:433" pos:end="732:436"><expr pos:start="732:433" pos:end="732:436"><name pos:start="732:433" pos:end="732:436"><name pos:start="732:433" pos:end="732:433">i</name><index pos:start="732:434" pos:end="732:436">[<expr pos:start="732:435" pos:end="732:435"><literal type="number" pos:start="732:435" pos:end="732:435">8</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:438" pos:end="732:438">.</operator><call pos:start="732:439" pos:end="732:483"><name pos:start="732:439" pos:end="732:441">arg</name><argument_list pos:start="732:442" pos:end="732:483">(<argument pos:start="732:443" pos:end="732:482"><expr pos:start="732:443" pos:end="732:482"><ternary pos:start="732:443" pos:end="732:482"><condition pos:start="732:443" pos:end="732:458"><expr pos:start="732:443" pos:end="732:456"><name pos:start="732:443" pos:end="732:446"><name pos:start="732:443" pos:end="732:443">i</name><index pos:start="732:444" pos:end="732:446">[<expr pos:start="732:445" pos:end="732:445"><literal type="number" pos:start="732:445" pos:end="732:445">9</literal></expr>]</index></name> <operator pos:start="732:448" pos:end="732:449">==</operator> <literal type="string" pos:start="732:451" pos:end="732:456">"null"</literal></expr> ?</condition><then pos:start="732:460" pos:end="732:465"> <expr pos:start="732:460" pos:end="732:465"><literal type="string" pos:start="732:460" pos:end="732:465">"null"</literal></expr> </then><else pos:start="732:467" pos:end="732:482">: <expr pos:start="732:469" pos:end="732:482"><literal type="string" pos:start="732:469" pos:end="732:472">"\""</literal><operator pos:start="732:473" pos:end="732:473">+</operator><name pos:start="732:474" pos:end="732:477"><name pos:start="732:474" pos:end="732:474">i</name><index pos:start="732:475" pos:end="732:477">[<expr pos:start="732:476" pos:end="732:476"><literal type="number" pos:start="732:476" pos:end="732:476">9</literal></expr>]</index></name><operator pos:start="732:478" pos:end="732:478">+</operator><literal type="string" pos:start="732:479" pos:end="732:482">"\""</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator pos:start="732:484" pos:end="732:484">.</operator><call pos:start="732:485" pos:end="732:531"><name pos:start="732:485" pos:end="732:487">arg</name><argument_list pos:start="732:488" pos:end="732:531">(<argument pos:start="732:489" pos:end="732:530"><expr pos:start="732:489" pos:end="732:530"><ternary pos:start="732:489" pos:end="732:530"><condition pos:start="732:489" pos:end="732:505"><expr pos:start="732:489" pos:end="732:503"><name pos:start="732:489" pos:end="732:493"><name pos:start="732:489" pos:end="732:489">i</name><index pos:start="732:490" pos:end="732:493">[<expr pos:start="732:491" pos:end="732:492"><literal type="number" pos:start="732:491" pos:end="732:492">10</literal></expr>]</index></name> <operator pos:start="732:495" pos:end="732:496">==</operator> <literal type="string" pos:start="732:498" pos:end="732:503">"null"</literal></expr> ?</condition><then pos:start="732:507" pos:end="732:512"> <expr pos:start="732:507" pos:end="732:512"><literal type="string" pos:start="732:507" pos:end="732:512">"null"</literal></expr> </then><else pos:start="732:514" pos:end="732:530">: <expr pos:start="732:516" pos:end="732:530"><literal type="string" pos:start="732:516" pos:end="732:519">"\""</literal><operator pos:start="732:520" pos:end="732:520">+</operator><name pos:start="732:521" pos:end="732:525"><name pos:start="732:521" pos:end="732:521">i</name><index pos:start="732:522" pos:end="732:525">[<expr pos:start="732:523" pos:end="732:524"><literal type="number" pos:start="732:523" pos:end="732:524">10</literal></expr>]</index></name><operator pos:start="732:526" pos:end="732:526">+</operator><literal type="string" pos:start="732:527" pos:end="732:530">"\""</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator pos:start="732:532" pos:end="732:532">.</operator><call pos:start="732:533" pos:end="732:579"><name pos:start="732:533" pos:end="732:535">arg</name><argument_list pos:start="732:536" pos:end="732:579">(<argument pos:start="732:537" pos:end="732:578"><expr pos:start="732:537" pos:end="732:578"><ternary pos:start="732:537" pos:end="732:578"><condition pos:start="732:537" pos:end="732:553"><expr pos:start="732:537" pos:end="732:551"><name pos:start="732:537" pos:end="732:541"><name pos:start="732:537" pos:end="732:537">i</name><index pos:start="732:538" pos:end="732:541">[<expr pos:start="732:539" pos:end="732:540"><literal type="number" pos:start="732:539" pos:end="732:540">11</literal></expr>]</index></name> <operator pos:start="732:543" pos:end="732:544">==</operator> <literal type="string" pos:start="732:546" pos:end="732:551">"null"</literal></expr> ?</condition><then pos:start="732:555" pos:end="732:560"> <expr pos:start="732:555" pos:end="732:560"><literal type="string" pos:start="732:555" pos:end="732:560">"null"</literal></expr> </then><else pos:start="732:562" pos:end="732:578">: <expr pos:start="732:564" pos:end="732:578"><literal type="string" pos:start="732:564" pos:end="732:567">"\""</literal><operator pos:start="732:568" pos:end="732:568">+</operator><name pos:start="732:569" pos:end="732:573"><name pos:start="732:569" pos:end="732:569">i</name><index pos:start="732:570" pos:end="732:573">[<expr pos:start="732:571" pos:end="732:572"><literal type="number" pos:start="732:571" pos:end="732:572">11</literal></expr>]</index></name><operator pos:start="732:574" pos:end="732:574">+</operator><literal type="string" pos:start="732:575" pos:end="732:578">"\""</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator pos:start="732:580" pos:end="732:580">.</operator><call pos:start="732:581" pos:end="732:590"><name pos:start="732:581" pos:end="732:583">arg</name><argument_list pos:start="732:584" pos:end="732:590">(<argument pos:start="732:585" pos:end="732:589"><expr pos:start="732:585" pos:end="732:589"><name pos:start="732:585" pos:end="732:589"><name pos:start="732:585" pos:end="732:585">i</name><index pos:start="732:586" pos:end="732:589">[<expr pos:start="732:587" pos:end="732:588"><literal type="number" pos:start="732:587" pos:end="732:588">12</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:591" pos:end="732:591">.</operator><call pos:start="732:592" pos:end="732:601"><name pos:start="732:592" pos:end="732:594">arg</name><argument_list pos:start="732:595" pos:end="732:601">(<argument pos:start="732:596" pos:end="732:600"><expr pos:start="732:596" pos:end="732:600"><name pos:start="732:596" pos:end="732:600"><name pos:start="732:596" pos:end="732:596">i</name><index pos:start="732:597" pos:end="732:600">[<expr pos:start="732:598" pos:end="732:599"><literal type="number" pos:start="732:598" pos:end="732:599">13</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:602" pos:end="732:602">.</operator><call pos:start="732:603" pos:end="732:612"><name pos:start="732:603" pos:end="732:605">arg</name><argument_list pos:start="732:606" pos:end="732:612">(<argument pos:start="732:607" pos:end="732:611"><expr pos:start="732:607" pos:end="732:611"><name pos:start="732:607" pos:end="732:611"><name pos:start="732:607" pos:end="732:607">i</name><index pos:start="732:608" pos:end="732:611">[<expr pos:start="732:609" pos:end="732:610"><literal type="number" pos:start="732:609" pos:end="732:610">14</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="732:613" pos:end="732:613">.</operator><call pos:start="732:614" pos:end="732:627"><name pos:start="732:614" pos:end="732:616">arg</name><argument_list pos:start="732:617" pos:end="732:627">(<argument pos:start="732:618" pos:end="732:626"><expr pos:start="732:618" pos:end="732:626"><name pos:start="732:618" pos:end="732:626">safeQuery</name></expr></argument>)</argument_list></call><operator pos:start="732:628" pos:end="732:628">.</operator><call pos:start="732:629" pos:end="732:648"><name pos:start="732:629" pos:end="732:635">replace</name><argument_list pos:start="732:636" pos:end="732:648">(<argument pos:start="732:637" pos:end="732:642"><expr pos:start="732:637" pos:end="732:642"><literal type="string" pos:start="732:637" pos:end="732:642">"\"\""</literal></expr></argument>,<argument pos:start="732:644" pos:end="732:647"><expr pos:start="732:644" pos:end="732:647"><literal type="string" pos:start="732:644" pos:end="732:647">"\""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="734:9" pos:end="734:23"><expr pos:start="734:9" pos:end="734:22"><call pos:start="734:9" pos:end="734:22"><name pos:start="734:9" pos:end="734:20"><name pos:start="734:9" pos:end="734:14">output</name><operator pos:start="734:15" pos:end="734:15">.</operator><name pos:start="734:16" pos:end="734:20">close</name></name><argument_list pos:start="734:21" pos:end="734:22">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="735:9" pos:end="735:47"><expr pos:start="735:9" pos:end="735:46"><call pos:start="735:9" pos:end="735:46"><name pos:start="735:9" pos:end="735:36"><name pos:start="735:9" pos:end="735:20">QSqlDatabase</name><operator pos:start="735:21" pos:end="735:22">::</operator><name pos:start="735:23" pos:end="735:36">removeDatabase</name></name><argument_list pos:start="735:37" pos:end="735:46">(<argument pos:start="735:38" pos:end="735:45"><expr pos:start="735:38" pos:end="735:45"><literal type="string" pos:start="735:38" pos:end="735:45">"output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <comment type="line" format="doxygen" pos:start="737:5" pos:end="737:32">/////// TAB SEPARATED VALUES</comment>
    <if type="elseif" pos:start="738:5" pos:end="743:5">else if<condition pos:start="738:12" pos:end="738:34">(<expr pos:start="738:13" pos:end="738:33"><name pos:start="738:13" pos:end="738:23">output_type</name> <operator pos:start="738:25" pos:end="738:26">==</operator> <literal type="string" pos:start="738:28" pos:end="738:33">".tsv"</literal></expr>)</condition> <block pos:start="738:36" pos:end="743:5">{<block_content pos:start="739:9" pos:end="742:23">
        <decl_stmt pos:start="739:9" pos:end="739:60"><decl pos:start="739:9" pos:end="739:59"><type pos:start="739:9" pos:end="739:21"><name pos:start="739:9" pos:end="739:21"><name pos:start="739:9" pos:end="739:11">std</name><operator pos:start="739:12" pos:end="739:13">::</operator><name pos:start="739:14" pos:end="739:21">ofstream</name></name></type> <name pos:start="739:23" pos:end="739:28">output</name><argument_list pos:start="739:29" pos:end="739:59">(<argument pos:start="739:30" pos:end="739:58"><expr pos:start="739:30" pos:end="739:58"><call pos:start="739:30" pos:end="739:46"><name pos:start="739:30" pos:end="739:44"><name pos:start="739:30" pos:end="739:37">savename</name><operator pos:start="739:38" pos:end="739:38">.</operator><name pos:start="739:39" pos:end="739:44">toUtf8</name></name><argument_list pos:start="739:45" pos:end="739:46">()</argument_list></call><operator pos:start="739:47" pos:end="739:47">.</operator><call pos:start="739:48" pos:end="739:58"><name pos:start="739:48" pos:end="739:56">constData</name><argument_list pos:start="739:57" pos:end="739:58">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt pos:start="740:9" pos:end="740:246"><expr pos:start="740:9" pos:end="740:245"><name pos:start="740:9" pos:end="740:14">output</name> <operator pos:start="740:16" pos:end="740:17">&lt;&lt;</operator> <literal type="string" pos:start="740:19" pos:end="740:245">"fixation_id\tfixation_run_id\tfixation_start_event_time\tfixation_order_number\tx\ty\tfixation_target\tsource_file_line\tsource_file_col\ttoken\tsyntactic_category\txpath\tleft_pupil_diameter\tright_pupil_diameter\tduration\n"</literal></expr>;</expr_stmt>
        <for pos:start="741:9" pos:end="741:120">for<control pos:start="741:12" pos:end="741:28">(<init pos:start="741:13" pos:end="741:27"><decl pos:start="741:13" pos:end="741:27"><type pos:start="741:13" pos:end="741:16"><name pos:start="741:13" pos:end="741:16">auto</name></type> <name pos:start="741:18" pos:end="741:20">fix</name> <range pos:start="741:22" pos:end="741:27">: <expr pos:start="741:24" pos:end="741:27"><name pos:start="741:24" pos:end="741:27">data</name></expr></range></decl></init>)</control> <block pos:start="741:30" pos:end="741:120">{<block_content pos:start="741:32" pos:end="741:118"> <for pos:start="741:32" pos:end="741:102">for<control pos:start="741:35" pos:end="741:52">(<init pos:start="741:36" pos:end="741:51"><decl pos:start="741:36" pos:end="741:51"><type pos:start="741:36" pos:end="741:39"><name pos:start="741:36" pos:end="741:39">auto</name></type> <name pos:start="741:41" pos:end="741:45">value</name> <range pos:start="741:47" pos:end="741:51">: <expr pos:start="741:49" pos:end="741:51"><name pos:start="741:49" pos:end="741:51">fix</name></expr></range></decl></init>)</control> <block pos:start="741:54" pos:end="741:102">{<block_content pos:start="741:56" pos:end="741:100"> <expr_stmt pos:start="741:56" pos:end="741:100"><expr pos:start="741:56" pos:end="741:99"><name pos:start="741:56" pos:end="741:61">output</name> <operator pos:start="741:63" pos:end="741:64">&lt;&lt;</operator> <call pos:start="741:66" pos:end="741:79"><name pos:start="741:66" pos:end="741:77"><name pos:start="741:66" pos:end="741:70">value</name><operator pos:start="741:71" pos:end="741:71">.</operator><name pos:start="741:72" pos:end="741:77">toUtf8</name></name><argument_list pos:start="741:78" pos:end="741:79">()</argument_list></call><operator pos:start="741:80" pos:end="741:80">.</operator><call pos:start="741:81" pos:end="741:91"><name pos:start="741:81" pos:end="741:89">constData</name><argument_list pos:start="741:90" pos:end="741:91">()</argument_list></call> <operator pos:start="741:93" pos:end="741:94">&lt;&lt;</operator> <literal type="string" pos:start="741:96" pos:end="741:99">"\t"</literal></expr>;</expr_stmt> </block_content>}</block></for> <expr_stmt pos:start="741:104" pos:end="741:118"><expr pos:start="741:104" pos:end="741:117"><name pos:start="741:104" pos:end="741:109">output</name> <operator pos:start="741:111" pos:end="741:112">&lt;&lt;</operator> <literal type="string" pos:start="741:114" pos:end="741:117">"\n"</literal></expr>;</expr_stmt> </block_content>}</block></for>
        <expr_stmt pos:start="742:9" pos:end="742:23"><expr pos:start="742:9" pos:end="742:22"><call pos:start="742:9" pos:end="742:22"><name pos:start="742:9" pos:end="742:20"><name pos:start="742:9" pos:end="742:14">output</name><operator pos:start="742:15" pos:end="742:15">.</operator><name pos:start="742:16" pos:end="742:20">close</name></name><argument_list pos:start="742:21" pos:end="742:22">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <comment type="line" format="doxygen" pos:start="744:5" pos:end="744:15">/////// XML</comment>
    <if type="elseif" pos:start="745:5" pos:end="753:5">else if<condition pos:start="745:12" pos:end="745:34">(<expr pos:start="745:13" pos:end="745:33"><name pos:start="745:13" pos:end="745:23">output_type</name> <operator pos:start="745:25" pos:end="745:26">==</operator> <literal type="string" pos:start="745:28" pos:end="745:33">".xml"</literal></expr>)</condition> <block pos:start="745:36" pos:end="753:5">{<block_content pos:start="746:9" pos:end="752:23">
        <decl_stmt pos:start="746:9" pos:end="746:60"><decl pos:start="746:9" pos:end="746:59"><type pos:start="746:9" pos:end="746:21"><name pos:start="746:9" pos:end="746:21"><name pos:start="746:9" pos:end="746:11">std</name><operator pos:start="746:12" pos:end="746:13">::</operator><name pos:start="746:14" pos:end="746:21">ofstream</name></name></type> <name pos:start="746:23" pos:end="746:28">output</name><argument_list pos:start="746:29" pos:end="746:59">(<argument pos:start="746:30" pos:end="746:58"><expr pos:start="746:30" pos:end="746:58"><call pos:start="746:30" pos:end="746:46"><name pos:start="746:30" pos:end="746:44"><name pos:start="746:30" pos:end="746:37">savename</name><operator pos:start="746:38" pos:end="746:38">.</operator><name pos:start="746:39" pos:end="746:44">toUtf8</name></name><argument_list pos:start="746:45" pos:end="746:46">()</argument_list></call><operator pos:start="746:47" pos:end="746:47">.</operator><call pos:start="746:48" pos:end="746:58"><name pos:start="746:48" pos:end="746:56">constData</name><argument_list pos:start="746:57" pos:end="746:58">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt pos:start="747:9" pos:end="747:120"><expr pos:start="747:9" pos:end="747:119"><name pos:start="747:9" pos:end="747:14">output</name> <operator pos:start="747:16" pos:end="747:17">&lt;&lt;</operator> <literal type="string" pos:start="747:19" pos:end="747:95">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;itrace_fixation_query query=\""</literal> <operator pos:start="747:97" pos:end="747:98">&lt;&lt;</operator> <name pos:start="747:100" pos:end="747:108">safeQuery</name> <operator pos:start="747:110" pos:end="747:111">&lt;&lt;</operator> <literal type="string" pos:start="747:113" pos:end="747:119">"\"&gt;\n"</literal></expr>;</expr_stmt>
        <for pos:start="748:9" pos:end="750:9">for<control pos:start="748:12" pos:end="748:28">(<init pos:start="748:13" pos:end="748:27"><decl pos:start="748:13" pos:end="748:27"><type pos:start="748:13" pos:end="748:16"><name pos:start="748:13" pos:end="748:16">auto</name></type> <name pos:start="748:18" pos:end="748:20">fix</name> <range pos:start="748:22" pos:end="748:27">: <expr pos:start="748:24" pos:end="748:27"><name pos:start="748:24" pos:end="748:27">data</name></expr></range></decl></init>)</control> <block pos:start="748:30" pos:end="750:9">{<block_content pos:start="749:13" pos:end="749:591">
            <expr_stmt pos:start="749:13" pos:end="749:591"><expr pos:start="749:13" pos:end="749:590"><name pos:start="749:13" pos:end="749:18">output</name> <operator pos:start="749:20" pos:end="749:21">&lt;&lt;</operator> <literal type="string" pos:start="749:23" pos:end="749:26">"\t"</literal> <operator pos:start="749:28" pos:end="749:29">&lt;&lt;</operator> <operator pos:start="749:31" pos:end="749:31">(</operator><call pos:start="749:32" pos:end="749:375"><name pos:start="749:32" pos:end="749:38">QString</name><argument_list pos:start="749:39" pos:end="749:375">(<argument pos:start="749:40" pos:end="749:374"><expr pos:start="749:40" pos:end="749:374"><literal type="string" pos:start="749:40" pos:end="749:374">"&lt;fixation fixation_id=\"%1\" fixation_run_id=\"%2\" fixation_start_event_time=\"%3\" fixation_order_number=\"%4\" x=\"%5\" y=\"%6\" fixation_target=\"%7\" source_file_line=\"%8\" source_file_col=\"%9\" token=\"%10\" syntactic_category=\"%11\" xpath=\"%12\" left_pupil_diameter=\"%13\" right_pupil_diameter=\"%14\" duration=\"%15\" /&gt;"</literal></expr></argument>)</argument_list></call><operator pos:start="749:376" pos:end="749:376">.</operator><call pos:start="749:377" pos:end="749:387"><name pos:start="749:377" pos:end="749:379">arg</name><argument_list pos:start="749:380" pos:end="749:387">(<argument pos:start="749:381" pos:end="749:386"><expr pos:start="749:381" pos:end="749:386"><name pos:start="749:381" pos:end="749:386"><name pos:start="749:381" pos:end="749:383">fix</name><index pos:start="749:384" pos:end="749:386">[<expr pos:start="749:385" pos:end="749:385"><literal type="number" pos:start="749:385" pos:end="749:385">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:388" pos:end="749:388">.</operator><call pos:start="749:389" pos:end="749:399"><name pos:start="749:389" pos:end="749:391">arg</name><argument_list pos:start="749:392" pos:end="749:399">(<argument pos:start="749:393" pos:end="749:398"><expr pos:start="749:393" pos:end="749:398"><name pos:start="749:393" pos:end="749:398"><name pos:start="749:393" pos:end="749:395">fix</name><index pos:start="749:396" pos:end="749:398">[<expr pos:start="749:397" pos:end="749:397"><literal type="number" pos:start="749:397" pos:end="749:397">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:400" pos:end="749:400">.</operator><call pos:start="749:401" pos:end="749:411"><name pos:start="749:401" pos:end="749:403">arg</name><argument_list pos:start="749:404" pos:end="749:411">(<argument pos:start="749:405" pos:end="749:410"><expr pos:start="749:405" pos:end="749:410"><name pos:start="749:405" pos:end="749:410"><name pos:start="749:405" pos:end="749:407">fix</name><index pos:start="749:408" pos:end="749:410">[<expr pos:start="749:409" pos:end="749:409"><literal type="number" pos:start="749:409" pos:end="749:409">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:412" pos:end="749:412">.</operator><call pos:start="749:413" pos:end="749:423"><name pos:start="749:413" pos:end="749:415">arg</name><argument_list pos:start="749:416" pos:end="749:423">(<argument pos:start="749:417" pos:end="749:422"><expr pos:start="749:417" pos:end="749:422"><name pos:start="749:417" pos:end="749:422"><name pos:start="749:417" pos:end="749:419">fix</name><index pos:start="749:420" pos:end="749:422">[<expr pos:start="749:421" pos:end="749:421"><literal type="number" pos:start="749:421" pos:end="749:421">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:424" pos:end="749:424">.</operator><call pos:start="749:425" pos:end="749:435"><name pos:start="749:425" pos:end="749:427">arg</name><argument_list pos:start="749:428" pos:end="749:435">(<argument pos:start="749:429" pos:end="749:434"><expr pos:start="749:429" pos:end="749:434"><name pos:start="749:429" pos:end="749:434"><name pos:start="749:429" pos:end="749:431">fix</name><index pos:start="749:432" pos:end="749:434">[<expr pos:start="749:433" pos:end="749:433"><literal type="number" pos:start="749:433" pos:end="749:433">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:436" pos:end="749:436">.</operator><call pos:start="749:437" pos:end="749:447"><name pos:start="749:437" pos:end="749:439">arg</name><argument_list pos:start="749:440" pos:end="749:447">(<argument pos:start="749:441" pos:end="749:446"><expr pos:start="749:441" pos:end="749:446"><name pos:start="749:441" pos:end="749:446"><name pos:start="749:441" pos:end="749:443">fix</name><index pos:start="749:444" pos:end="749:446">[<expr pos:start="749:445" pos:end="749:445"><literal type="number" pos:start="749:445" pos:end="749:445">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:448" pos:end="749:448">.</operator><call pos:start="749:449" pos:end="749:459"><name pos:start="749:449" pos:end="749:451">arg</name><argument_list pos:start="749:452" pos:end="749:459">(<argument pos:start="749:453" pos:end="749:458"><expr pos:start="749:453" pos:end="749:458"><name pos:start="749:453" pos:end="749:458"><name pos:start="749:453" pos:end="749:455">fix</name><index pos:start="749:456" pos:end="749:458">[<expr pos:start="749:457" pos:end="749:457"><literal type="number" pos:start="749:457" pos:end="749:457">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:460" pos:end="749:460">.</operator><call pos:start="749:461" pos:end="749:471"><name pos:start="749:461" pos:end="749:463">arg</name><argument_list pos:start="749:464" pos:end="749:471">(<argument pos:start="749:465" pos:end="749:470"><expr pos:start="749:465" pos:end="749:470"><name pos:start="749:465" pos:end="749:470"><name pos:start="749:465" pos:end="749:467">fix</name><index pos:start="749:468" pos:end="749:470">[<expr pos:start="749:469" pos:end="749:469"><literal type="number" pos:start="749:469" pos:end="749:469">7</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:472" pos:end="749:472">.</operator><call pos:start="749:473" pos:end="749:483"><name pos:start="749:473" pos:end="749:475">arg</name><argument_list pos:start="749:476" pos:end="749:483">(<argument pos:start="749:477" pos:end="749:482"><expr pos:start="749:477" pos:end="749:482"><name pos:start="749:477" pos:end="749:482"><name pos:start="749:477" pos:end="749:479">fix</name><index pos:start="749:480" pos:end="749:482">[<expr pos:start="749:481" pos:end="749:481"><literal type="number" pos:start="749:481" pos:end="749:481">8</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:484" pos:end="749:484">.</operator><call pos:start="749:485" pos:end="749:495"><name pos:start="749:485" pos:end="749:487">arg</name><argument_list pos:start="749:488" pos:end="749:495">(<argument pos:start="749:489" pos:end="749:494"><expr pos:start="749:489" pos:end="749:494"><name pos:start="749:489" pos:end="749:494"><name pos:start="749:489" pos:end="749:491">fix</name><index pos:start="749:492" pos:end="749:494">[<expr pos:start="749:493" pos:end="749:493"><literal type="number" pos:start="749:493" pos:end="749:493">9</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:496" pos:end="749:496">.</operator><call pos:start="749:497" pos:end="749:508"><name pos:start="749:497" pos:end="749:499">arg</name><argument_list pos:start="749:500" pos:end="749:508">(<argument pos:start="749:501" pos:end="749:507"><expr pos:start="749:501" pos:end="749:507"><name pos:start="749:501" pos:end="749:507"><name pos:start="749:501" pos:end="749:503">fix</name><index pos:start="749:504" pos:end="749:507">[<expr pos:start="749:505" pos:end="749:506"><literal type="number" pos:start="749:505" pos:end="749:506">10</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:509" pos:end="749:509">.</operator><call pos:start="749:510" pos:end="749:521"><name pos:start="749:510" pos:end="749:512">arg</name><argument_list pos:start="749:513" pos:end="749:521">(<argument pos:start="749:514" pos:end="749:520"><expr pos:start="749:514" pos:end="749:520"><name pos:start="749:514" pos:end="749:520"><name pos:start="749:514" pos:end="749:516">fix</name><index pos:start="749:517" pos:end="749:520">[<expr pos:start="749:518" pos:end="749:519"><literal type="number" pos:start="749:518" pos:end="749:519">11</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:522" pos:end="749:522">.</operator><call pos:start="749:523" pos:end="749:534"><name pos:start="749:523" pos:end="749:525">arg</name><argument_list pos:start="749:526" pos:end="749:534">(<argument pos:start="749:527" pos:end="749:533"><expr pos:start="749:527" pos:end="749:533"><name pos:start="749:527" pos:end="749:533"><name pos:start="749:527" pos:end="749:529">fix</name><index pos:start="749:530" pos:end="749:533">[<expr pos:start="749:531" pos:end="749:532"><literal type="number" pos:start="749:531" pos:end="749:532">12</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:535" pos:end="749:535">.</operator><call pos:start="749:536" pos:end="749:547"><name pos:start="749:536" pos:end="749:538">arg</name><argument_list pos:start="749:539" pos:end="749:547">(<argument pos:start="749:540" pos:end="749:546"><expr pos:start="749:540" pos:end="749:546"><name pos:start="749:540" pos:end="749:546"><name pos:start="749:540" pos:end="749:542">fix</name><index pos:start="749:543" pos:end="749:546">[<expr pos:start="749:544" pos:end="749:545"><literal type="number" pos:start="749:544" pos:end="749:545">13</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:548" pos:end="749:548">.</operator><call pos:start="749:549" pos:end="749:560"><name pos:start="749:549" pos:end="749:551">arg</name><argument_list pos:start="749:552" pos:end="749:560">(<argument pos:start="749:553" pos:end="749:559"><expr pos:start="749:553" pos:end="749:559"><name pos:start="749:553" pos:end="749:559"><name pos:start="749:553" pos:end="749:555">fix</name><index pos:start="749:556" pos:end="749:559">[<expr pos:start="749:557" pos:end="749:558"><literal type="number" pos:start="749:557" pos:end="749:558">14</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="749:561" pos:end="749:561">)</operator><operator pos:start="749:562" pos:end="749:562">.</operator><call pos:start="749:563" pos:end="749:570"><name pos:start="749:563" pos:end="749:568">toUtf8</name><argument_list pos:start="749:569" pos:end="749:570">()</argument_list></call><operator pos:start="749:571" pos:end="749:571">.</operator><call pos:start="749:572" pos:end="749:582"><name pos:start="749:572" pos:end="749:580">constData</name><argument_list pos:start="749:581" pos:end="749:582">()</argument_list></call> <operator pos:start="749:584" pos:end="749:585">&lt;&lt;</operator> <literal type="string" pos:start="749:587" pos:end="749:590">"\n"</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="751:9" pos:end="751:45"><expr pos:start="751:9" pos:end="751:44"><name pos:start="751:9" pos:end="751:14">output</name> <operator pos:start="751:16" pos:end="751:17">&lt;&lt;</operator> <literal type="string" pos:start="751:19" pos:end="751:44">"&lt;/itrace_fixation_query&gt;"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="752:9" pos:end="752:23"><expr pos:start="752:9" pos:end="752:22"><call pos:start="752:9" pos:end="752:22"><name pos:start="752:9" pos:end="752:20"><name pos:start="752:9" pos:end="752:14">output</name><operator pos:start="752:15" pos:end="752:15">.</operator><name pos:start="752:16" pos:end="752:20">close</name></name><argument_list pos:start="752:21" pos:end="752:22">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <comment type="line" format="doxygen" pos:start="754:5" pos:end="754:16">/////// JSON</comment>
    <if type="elseif" pos:start="755:5" pos:end="763:5">else if<condition pos:start="755:12" pos:end="755:35">(<expr pos:start="755:13" pos:end="755:34"><name pos:start="755:13" pos:end="755:23">output_type</name> <operator pos:start="755:25" pos:end="755:26">==</operator> <literal type="string" pos:start="755:28" pos:end="755:34">".json"</literal></expr>)</condition> <block pos:start="755:37" pos:end="763:5">{<block_content pos:start="756:9" pos:end="762:27">
        <decl_stmt pos:start="756:9" pos:end="756:60"><decl pos:start="756:9" pos:end="756:59"><type pos:start="756:9" pos:end="756:21"><name pos:start="756:9" pos:end="756:21"><name pos:start="756:9" pos:end="756:11">std</name><operator pos:start="756:12" pos:end="756:13">::</operator><name pos:start="756:14" pos:end="756:21">ofstream</name></name></type> <name pos:start="756:23" pos:end="756:28">output</name><argument_list pos:start="756:29" pos:end="756:59">(<argument pos:start="756:30" pos:end="756:58"><expr pos:start="756:30" pos:end="756:58"><call pos:start="756:30" pos:end="756:46"><name pos:start="756:30" pos:end="756:44"><name pos:start="756:30" pos:end="756:37">savename</name><operator pos:start="756:38" pos:end="756:38">.</operator><name pos:start="756:39" pos:end="756:44">toUtf8</name></name><argument_list pos:start="756:45" pos:end="756:46">()</argument_list></call><operator pos:start="756:47" pos:end="756:47">.</operator><call pos:start="756:48" pos:end="756:58"><name pos:start="756:48" pos:end="756:56">constData</name><argument_list pos:start="756:57" pos:end="756:58">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
        <expr_stmt pos:start="757:9" pos:end="757:63"><expr pos:start="757:9" pos:end="757:62"><name pos:start="757:9" pos:end="757:14">output</name> <operator pos:start="757:16" pos:end="757:17">&lt;&lt;</operator> <literal type="string" pos:start="757:19" pos:end="757:38">"{\n\t\"query\": \""</literal> <operator pos:start="757:40" pos:end="757:41">&lt;&lt;</operator> <name pos:start="757:43" pos:end="757:51">safeQuery</name> <operator pos:start="757:53" pos:end="757:54">&lt;&lt;</operator> <literal type="string" pos:start="757:56" pos:end="757:62">"\",\n"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="758:9" pos:end="758:41"><expr pos:start="758:9" pos:end="758:40"><name pos:start="758:9" pos:end="758:14">output</name> <operator pos:start="758:16" pos:end="758:17">&lt;&lt;</operator> <literal type="string" pos:start="758:19" pos:end="758:40">"\t\"fixations\": [\n"</literal></expr>;</expr_stmt>
        <for pos:start="759:9" pos:end="761:9">for<control pos:start="759:12" pos:end="759:28">(<init pos:start="759:13" pos:end="759:27"><decl pos:start="759:13" pos:end="759:27"><type pos:start="759:13" pos:end="759:16"><name pos:start="759:13" pos:end="759:16">auto</name></type> <name pos:start="759:18" pos:end="759:20">fix</name> <range pos:start="759:22" pos:end="759:27">: <expr pos:start="759:24" pos:end="759:27"><name pos:start="759:24" pos:end="759:27">data</name></expr></range></decl></init>)</control> <block pos:start="759:30" pos:end="761:9">{<block_content pos:start="760:13" pos:end="760:680">
            <expr_stmt pos:start="760:13" pos:end="760:680"><expr pos:start="760:13" pos:end="760:679"><name pos:start="760:13" pos:end="760:18">output</name> <operator pos:start="760:20" pos:end="760:21">&lt;&lt;</operator> <operator pos:start="760:23" pos:end="760:23">(</operator><call pos:start="760:24" pos:end="760:493"><name pos:start="760:24" pos:end="760:30">QString</name><argument_list pos:start="760:31" pos:end="760:493">(<argument pos:start="760:32" pos:end="760:492"><expr pos:start="760:32" pos:end="760:492"><literal type="string" pos:start="760:32" pos:end="760:492">"\t{\n\t\t\"fixation_id\": \"%1\",\n\t\t\"fixation_run_id\": \"%2\",\n\t\t\"fixation_start_event_time\": %3,\n\t\t\"fixation_order_number\": %4,\n\t\t\"x\": %5,\n\t\t\"y\": %6,\n\t\t\"fixation_target\": \"%7\",\n\t\t\"source_file_line\": %8,\n\t\t\"source_file_col\": %9,\n\t\t\"token\": \"%10\",\n\t\t\"syntactic_category\": \"%11\",\n\t\t\"xpath\": \"%12\",\n\t\t\"left_pupil_diameter\": %13,\n\t\t\"right_pupil_diameter\": %14,\n\t\t\"duration\": %15\n\t}\n"</literal></expr></argument>)</argument_list></call><operator pos:start="760:494" pos:end="760:494">.</operator><call pos:start="760:495" pos:end="760:505"><name pos:start="760:495" pos:end="760:497">arg</name><argument_list pos:start="760:498" pos:end="760:505">(<argument pos:start="760:499" pos:end="760:504"><expr pos:start="760:499" pos:end="760:504"><name pos:start="760:499" pos:end="760:504"><name pos:start="760:499" pos:end="760:501">fix</name><index pos:start="760:502" pos:end="760:504">[<expr pos:start="760:503" pos:end="760:503"><literal type="number" pos:start="760:503" pos:end="760:503">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:506" pos:end="760:506">.</operator><call pos:start="760:507" pos:end="760:517"><name pos:start="760:507" pos:end="760:509">arg</name><argument_list pos:start="760:510" pos:end="760:517">(<argument pos:start="760:511" pos:end="760:516"><expr pos:start="760:511" pos:end="760:516"><name pos:start="760:511" pos:end="760:516"><name pos:start="760:511" pos:end="760:513">fix</name><index pos:start="760:514" pos:end="760:516">[<expr pos:start="760:515" pos:end="760:515"><literal type="number" pos:start="760:515" pos:end="760:515">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:518" pos:end="760:518">.</operator><call pos:start="760:519" pos:end="760:529"><name pos:start="760:519" pos:end="760:521">arg</name><argument_list pos:start="760:522" pos:end="760:529">(<argument pos:start="760:523" pos:end="760:528"><expr pos:start="760:523" pos:end="760:528"><name pos:start="760:523" pos:end="760:528"><name pos:start="760:523" pos:end="760:525">fix</name><index pos:start="760:526" pos:end="760:528">[<expr pos:start="760:527" pos:end="760:527"><literal type="number" pos:start="760:527" pos:end="760:527">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:530" pos:end="760:530">.</operator><call pos:start="760:531" pos:end="760:541"><name pos:start="760:531" pos:end="760:533">arg</name><argument_list pos:start="760:534" pos:end="760:541">(<argument pos:start="760:535" pos:end="760:540"><expr pos:start="760:535" pos:end="760:540"><name pos:start="760:535" pos:end="760:540"><name pos:start="760:535" pos:end="760:537">fix</name><index pos:start="760:538" pos:end="760:540">[<expr pos:start="760:539" pos:end="760:539"><literal type="number" pos:start="760:539" pos:end="760:539">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:542" pos:end="760:542">.</operator><call pos:start="760:543" pos:end="760:553"><name pos:start="760:543" pos:end="760:545">arg</name><argument_list pos:start="760:546" pos:end="760:553">(<argument pos:start="760:547" pos:end="760:552"><expr pos:start="760:547" pos:end="760:552"><name pos:start="760:547" pos:end="760:552"><name pos:start="760:547" pos:end="760:549">fix</name><index pos:start="760:550" pos:end="760:552">[<expr pos:start="760:551" pos:end="760:551"><literal type="number" pos:start="760:551" pos:end="760:551">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:554" pos:end="760:554">.</operator><call pos:start="760:555" pos:end="760:565"><name pos:start="760:555" pos:end="760:557">arg</name><argument_list pos:start="760:558" pos:end="760:565">(<argument pos:start="760:559" pos:end="760:564"><expr pos:start="760:559" pos:end="760:564"><name pos:start="760:559" pos:end="760:564"><name pos:start="760:559" pos:end="760:561">fix</name><index pos:start="760:562" pos:end="760:564">[<expr pos:start="760:563" pos:end="760:563"><literal type="number" pos:start="760:563" pos:end="760:563">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:566" pos:end="760:566">.</operator><call pos:start="760:567" pos:end="760:577"><name pos:start="760:567" pos:end="760:569">arg</name><argument_list pos:start="760:570" pos:end="760:577">(<argument pos:start="760:571" pos:end="760:576"><expr pos:start="760:571" pos:end="760:576"><name pos:start="760:571" pos:end="760:576"><name pos:start="760:571" pos:end="760:573">fix</name><index pos:start="760:574" pos:end="760:576">[<expr pos:start="760:575" pos:end="760:575"><literal type="number" pos:start="760:575" pos:end="760:575">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:578" pos:end="760:578">.</operator><call pos:start="760:579" pos:end="760:589"><name pos:start="760:579" pos:end="760:581">arg</name><argument_list pos:start="760:582" pos:end="760:589">(<argument pos:start="760:583" pos:end="760:588"><expr pos:start="760:583" pos:end="760:588"><name pos:start="760:583" pos:end="760:588"><name pos:start="760:583" pos:end="760:585">fix</name><index pos:start="760:586" pos:end="760:588">[<expr pos:start="760:587" pos:end="760:587"><literal type="number" pos:start="760:587" pos:end="760:587">7</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:590" pos:end="760:590">.</operator><call pos:start="760:591" pos:end="760:601"><name pos:start="760:591" pos:end="760:593">arg</name><argument_list pos:start="760:594" pos:end="760:601">(<argument pos:start="760:595" pos:end="760:600"><expr pos:start="760:595" pos:end="760:600"><name pos:start="760:595" pos:end="760:600"><name pos:start="760:595" pos:end="760:597">fix</name><index pos:start="760:598" pos:end="760:600">[<expr pos:start="760:599" pos:end="760:599"><literal type="number" pos:start="760:599" pos:end="760:599">8</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:602" pos:end="760:602">.</operator><call pos:start="760:603" pos:end="760:613"><name pos:start="760:603" pos:end="760:605">arg</name><argument_list pos:start="760:606" pos:end="760:613">(<argument pos:start="760:607" pos:end="760:612"><expr pos:start="760:607" pos:end="760:612"><name pos:start="760:607" pos:end="760:612"><name pos:start="760:607" pos:end="760:609">fix</name><index pos:start="760:610" pos:end="760:612">[<expr pos:start="760:611" pos:end="760:611"><literal type="number" pos:start="760:611" pos:end="760:611">9</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:614" pos:end="760:614">.</operator><call pos:start="760:615" pos:end="760:626"><name pos:start="760:615" pos:end="760:617">arg</name><argument_list pos:start="760:618" pos:end="760:626">(<argument pos:start="760:619" pos:end="760:625"><expr pos:start="760:619" pos:end="760:625"><name pos:start="760:619" pos:end="760:625"><name pos:start="760:619" pos:end="760:621">fix</name><index pos:start="760:622" pos:end="760:625">[<expr pos:start="760:623" pos:end="760:624"><literal type="number" pos:start="760:623" pos:end="760:624">10</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:627" pos:end="760:627">.</operator><call pos:start="760:628" pos:end="760:639"><name pos:start="760:628" pos:end="760:630">arg</name><argument_list pos:start="760:631" pos:end="760:639">(<argument pos:start="760:632" pos:end="760:638"><expr pos:start="760:632" pos:end="760:638"><name pos:start="760:632" pos:end="760:638"><name pos:start="760:632" pos:end="760:634">fix</name><index pos:start="760:635" pos:end="760:638">[<expr pos:start="760:636" pos:end="760:637"><literal type="number" pos:start="760:636" pos:end="760:637">11</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:640" pos:end="760:640">.</operator><call pos:start="760:641" pos:end="760:652"><name pos:start="760:641" pos:end="760:643">arg</name><argument_list pos:start="760:644" pos:end="760:652">(<argument pos:start="760:645" pos:end="760:651"><expr pos:start="760:645" pos:end="760:651"><name pos:start="760:645" pos:end="760:651"><name pos:start="760:645" pos:end="760:647">fix</name><index pos:start="760:648" pos:end="760:651">[<expr pos:start="760:649" pos:end="760:650"><literal type="number" pos:start="760:649" pos:end="760:650">12</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:653" pos:end="760:653">.</operator><call pos:start="760:654" pos:end="760:665"><name pos:start="760:654" pos:end="760:656">arg</name><argument_list pos:start="760:657" pos:end="760:665">(<argument pos:start="760:658" pos:end="760:664"><expr pos:start="760:658" pos:end="760:664"><name pos:start="760:658" pos:end="760:664"><name pos:start="760:658" pos:end="760:660">fix</name><index pos:start="760:661" pos:end="760:664">[<expr pos:start="760:662" pos:end="760:663"><literal type="number" pos:start="760:662" pos:end="760:663">13</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:666" pos:end="760:666">.</operator><call pos:start="760:667" pos:end="760:678"><name pos:start="760:667" pos:end="760:669">arg</name><argument_list pos:start="760:670" pos:end="760:678">(<argument pos:start="760:671" pos:end="760:677"><expr pos:start="760:671" pos:end="760:677"><name pos:start="760:671" pos:end="760:677"><name pos:start="760:671" pos:end="760:673">fix</name><index pos:start="760:674" pos:end="760:677">[<expr pos:start="760:675" pos:end="760:676"><literal type="number" pos:start="760:675" pos:end="760:676">14</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="760:679" pos:end="760:679">)</operator></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="762:9" pos:end="762:27"><expr pos:start="762:9" pos:end="762:26"><name pos:start="762:9" pos:end="762:14">output</name> <operator pos:start="762:16" pos:end="762:17">&lt;&lt;</operator> <literal type="string" pos:start="762:19" pos:end="762:26">"\t]\n}"</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="764:5" pos:end="764:42"><expr pos:start="764:5" pos:end="764:41"><name pos:start="764:5" pos:end="764:13"><name pos:start="764:5" pos:end="764:7">std</name><operator pos:start="764:8" pos:end="764:9">::</operator><name pos:start="764:10" pos:end="764:13">cout</name></name> <operator pos:start="764:15" pos:end="764:16">&lt;&lt;</operator> <name pos:start="764:18" pos:end="764:28">output_type</name> <operator pos:start="764:30" pos:end="764:31">&lt;&lt;</operator> <name pos:start="764:33" pos:end="764:41"><name pos:start="764:33" pos:end="764:35">std</name><operator pos:start="764:36" pos:end="764:37">::</operator><name pos:start="764:38" pos:end="764:41">endl</name></name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/controller.h" pos:tabs="8" hash="f03de9f18a8ca93b6f59b9c08a8ab81e41d47728"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file controller.h
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:ifndef pos:start="12:1" pos:end="12:20">#<cpp:directive pos:start="12:2" pos:end="12:7">ifndef</cpp:directive> <name pos:start="12:9" pos:end="12:20">CONTROLLER_H</name></cpp:ifndef>
<cpp:define pos:start="13:1" pos:end="13:20">#<cpp:directive pos:start="13:2" pos:end="13:7">define</cpp:directive> <cpp:macro pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20">CONTROLLER_H</name></cpp:macro></cpp:define>

<cpp:include pos:start="15:1" pos:end="15:19">#<cpp:directive pos:start="15:2" pos:end="15:8">include</cpp:directive> <cpp:file pos:start="15:10" pos:end="15:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="16:1" pos:end="16:16">#<cpp:directive pos:start="16:2" pos:end="16:8">include</cpp:directive> <cpp:file pos:start="16:10" pos:end="16:16">&lt;ctime&gt;</cpp:file></cpp:include>
<cpp:include pos:start="17:1" pos:end="17:21">#<cpp:directive pos:start="17:2" pos:end="17:8">include</cpp:directive> <cpp:file pos:start="17:10" pos:end="17:21">&lt;sys/stat.h&gt;</cpp:file></cpp:include>

<cpp:include pos:start="19:1" pos:end="19:17">#<cpp:directive pos:start="19:2" pos:end="19:8">include</cpp:directive> <cpp:file pos:start="19:10" pos:end="19:17">&lt;qqml.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="20:1" pos:end="20:18">#<cpp:directive pos:start="20:2" pos:end="20:8">include</cpp:directive> <cpp:file pos:start="20:10" pos:end="20:18">&lt;QObject&gt;</cpp:file></cpp:include>
<cpp:include pos:start="21:1" pos:end="21:23">#<cpp:directive pos:start="21:2" pos:end="21:8">include</cpp:directive> <cpp:file pos:start="21:10" pos:end="21:23">&lt;QApplication&gt;</cpp:file></cpp:include>
<cpp:include pos:start="22:1" pos:end="22:18">#<cpp:directive pos:start="22:2" pos:end="22:8">include</cpp:directive> <cpp:file pos:start="22:10" pos:end="22:18">&lt;QString&gt;</cpp:file></cpp:include>
<cpp:include pos:start="23:1" pos:end="23:18">#<cpp:directive pos:start="23:2" pos:end="23:8">include</cpp:directive> <cpp:file pos:start="23:10" pos:end="23:18">&lt;QVector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="24:1" pos:end="24:29">#<cpp:directive pos:start="24:2" pos:end="24:8">include</cpp:directive> <cpp:file pos:start="24:10" pos:end="24:29">&lt;QCryptographicHash&gt;</cpp:file></cpp:include>
<cpp:include pos:start="25:1" pos:end="25:16">#<cpp:directive pos:start="25:2" pos:end="25:8">include</cpp:directive> <cpp:file pos:start="25:10" pos:end="25:16">&lt;QUuid&gt;</cpp:file></cpp:include>
<cpp:include pos:start="26:1" pos:end="26:24">#<cpp:directive pos:start="26:2" pos:end="26:8">include</cpp:directive> <cpp:file pos:start="26:10" pos:end="26:24">&lt;QElapsedTimer&gt;</cpp:file></cpp:include>
<cpp:include pos:start="27:1" pos:end="27:23">#<cpp:directive pos:start="27:2" pos:end="27:8">include</cpp:directive> <cpp:file pos:start="27:10" pos:end="27:23">&lt;QDirIterator&gt;</cpp:file></cpp:include>
<cpp:include pos:start="28:1" pos:end="28:23">#<cpp:directive pos:start="28:2" pos:end="28:8">include</cpp:directive> <cpp:file pos:start="28:10" pos:end="28:23">&lt;QDomDocument&gt;</cpp:file></cpp:include>

<cpp:include pos:start="30:1" pos:end="30:14">#<cpp:directive pos:start="30:2" pos:end="30:8">include</cpp:directive> <cpp:file pos:start="30:10" pos:end="30:14">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="31:1" pos:end="31:18">#<cpp:directive pos:start="31:2" pos:end="31:8">include</cpp:directive> <cpp:file pos:start="31:10" pos:end="31:18">&lt;fstream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="32:1" pos:end="32:14">#<cpp:directive pos:start="32:2" pos:end="32:8">include</cpp:directive> <cpp:file pos:start="32:10" pos:end="32:14">&lt;set&gt;</cpp:file></cpp:include>

<cpp:include pos:start="34:1" pos:end="34:23">#<cpp:directive pos:start="34:2" pos:end="34:8">include</cpp:directive> <cpp:file pos:start="34:10" pos:end="34:23">"xmlhandler.h"</cpp:file></cpp:include>
<cpp:include pos:start="35:1" pos:end="35:21">#<cpp:directive pos:start="35:2" pos:end="35:8">include</cpp:directive> <cpp:file pos:start="35:10" pos:end="35:21">"database.h"</cpp:file></cpp:include>
<cpp:include pos:start="36:1" pos:end="36:17">#<cpp:directive pos:start="36:2" pos:end="36:8">include</cpp:directive> <cpp:file pos:start="36:10" pos:end="36:17">"gaze.h"</cpp:file></cpp:include>
<cpp:include pos:start="37:1" pos:end="37:21">#<cpp:directive pos:start="37:2" pos:end="37:8">include</cpp:directive> <cpp:file pos:start="37:10" pos:end="37:21">"fixation.h"</cpp:file></cpp:include>
<cpp:include pos:start="38:1" pos:end="38:27">#<cpp:directive pos:start="38:2" pos:end="38:8">include</cpp:directive> <cpp:file pos:start="38:10" pos:end="38:27">"basicalgorithm.h"</cpp:file></cpp:include>
<cpp:include pos:start="39:1" pos:end="39:25">#<cpp:directive pos:start="39:2" pos:end="39:8">include</cpp:directive> <cpp:file pos:start="39:10" pos:end="39:25">"idtalgorithm.h"</cpp:file></cpp:include>
<cpp:include pos:start="40:1" pos:end="40:25">#<cpp:directive pos:start="40:2" pos:end="40:8">include</cpp:directive> <cpp:file pos:start="40:10" pos:end="40:25">"ivtalgorithm.h"</cpp:file></cpp:include>
<cpp:include pos:start="41:1" pos:end="41:25">#<cpp:directive pos:start="41:2" pos:end="41:8">include</cpp:directive> <cpp:file pos:start="41:10" pos:end="41:25">"srcmlhandler.h"</cpp:file></cpp:include>
<cpp:include pos:start="42:1" pos:end="42:24">#<cpp:directive pos:start="42:2" pos:end="42:8">include</cpp:directive> <cpp:file pos:start="42:10" pos:end="42:24">"srcmlmapper.h"</cpp:file></cpp:include>
<cpp:include pos:start="43:1" pos:end="43:19">#<cpp:directive pos:start="43:2" pos:end="43:8">include</cpp:directive> <cpp:file pos:start="43:10" pos:end="43:19">"logger.h"</cpp:file></cpp:include>

<comment type="line" pos:start="45:1" pos:end="45:27">// Algorithm settings enums</comment>
<enum pos:start="46:1" pos:end="50:2">enum <name pos:start="46:6" pos:end="46:10">basic</name> <block pos:start="46:12" pos:end="50:1">{
    <decl pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:15">window_size</name> <init pos:start="47:17" pos:end="47:19">= <expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr></init></decl>,
    <decl pos:start="48:5" pos:end="48:10"><name pos:start="48:5" pos:end="48:10">radius</name></decl>,
    <decl pos:start="49:5" pos:end="49:8"><name pos:start="49:5" pos:end="49:8">peak</name></decl>
}</block>;</enum>

<enum pos:start="52:1" pos:end="55:2">enum <name pos:start="52:6" pos:end="52:8">idt</name> <block pos:start="52:10" pos:end="55:1">{
    <decl pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:19">duration_window</name> <init pos:start="53:21" pos:end="53:23">= <expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr></init></decl>,
    <decl pos:start="54:5" pos:end="54:14"><name pos:start="54:5" pos:end="54:14">dispersion</name></decl>
}</block>;</enum>

<enum pos:start="57:1" pos:end="60:2">enum <name pos:start="57:6" pos:end="57:8">ivt</name> <block pos:start="57:10" pos:end="60:1">{
    <decl pos:start="58:5" pos:end="58:16"><name pos:start="58:5" pos:end="58:12">velocity</name> <init pos:start="58:14" pos:end="58:16">= <expr pos:start="58:16" pos:end="58:16"><literal type="number" pos:start="58:16" pos:end="58:16">1</literal></expr></init></decl>,
    <decl pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:12">duration</name></decl>
}</block>;</enum>

<decl_stmt pos:start="62:1" pos:end="115:0"><decl pos:start="62:1" pos:end="112:1"><type pos:start="62:1" pos:end="62:5"><name pos:start="62:1" pos:end="62:5">class</name></type> <name pos:start="62:7" pos:end="62:16">Controller</name> <range pos:start="62:18" pos:end="112:1">: <expr pos:start="62:20" pos:end="112:1"><name pos:start="62:20" pos:end="62:25">public</name> <name pos:start="62:27" pos:end="62:33">QObject</name> <block pos:start="62:35" pos:end="112:1">{
<expr pos:start="63:1" pos:end="68:50"><name pos:start="63:1" pos:end="63:6">public</name><operator pos:start="63:7" pos:end="63:7">:</operator>
    <name pos:start="64:5" pos:end="64:12">Q_OBJECT</name>

    <name pos:start="66:5" pos:end="66:15">QML_ELEMENT</name>
<name pos:start="67:1" pos:end="67:6">public</name><operator pos:start="67:7" pos:end="67:7">:</operator>
    <name pos:start="68:5" pos:end="68:12">explicit</name> <call pos:start="68:14" pos:end="68:50"><name pos:start="68:14" pos:end="68:23">Controller</name><argument_list pos:start="68:24" pos:end="68:50">(<argument pos:start="68:25" pos:end="68:49"><expr pos:start="68:25" pos:end="68:49"><name pos:start="68:25" pos:end="68:31">QObject</name><operator pos:start="68:32" pos:end="68:32">*</operator> <name pos:start="68:34" pos:end="68:39">parent</name> <operator pos:start="68:41" pos:end="68:41">=</operator> <name pos:start="68:43" pos:end="68:49">nullptr</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line" pos:start="70:5" pos:end="70:19">//XML Functions</comment>
    <expr pos:start="71:5" pos:end="71:46"><name pos:start="71:5" pos:end="71:15">Q_INVOKABLE</name> <name pos:start="71:17" pos:end="71:20">void</name> <call pos:start="71:22" pos:end="71:46"><name pos:start="71:22" pos:end="71:37">saveDatabaseFile</name><argument_list pos:start="71:38" pos:end="71:46">(<argument pos:start="71:39" pos:end="71:45"><expr pos:start="71:39" pos:end="71:45"><name pos:start="71:39" pos:end="71:45">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="72:5" pos:end="72:46"><name pos:start="72:5" pos:end="72:15">Q_INVOKABLE</name> <name pos:start="72:17" pos:end="72:20">void</name> <call pos:start="72:22" pos:end="72:46"><name pos:start="72:22" pos:end="72:37">loadDatabaseFile</name><argument_list pos:start="72:38" pos:end="72:46">(<argument pos:start="72:39" pos:end="72:45"><expr pos:start="72:39" pos:end="72:45"><name pos:start="72:39" pos:end="72:45">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:15">Q_INVOKABLE</name> <name pos:start="73:17" pos:end="73:20">void</name> <call pos:start="73:22" pos:end="73:36"><name pos:start="73:22" pos:end="73:34">closeDatabase</name><argument_list pos:start="73:35" pos:end="73:36">()</argument_list></call></expr>;
    <expr pos:start="74:5" pos:end="74:43"><name pos:start="74:5" pos:end="74:15">Q_INVOKABLE</name> <name pos:start="74:17" pos:end="74:20">void</name> <call pos:start="74:22" pos:end="74:43"><name pos:start="74:22" pos:end="74:34">importXMLFile</name><argument_list pos:start="74:35" pos:end="74:43">(<argument pos:start="74:36" pos:end="74:42"><expr pos:start="74:36" pos:end="74:42"><name pos:start="74:36" pos:end="74:42">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:15">Q_INVOKABLE</name> <name pos:start="75:17" pos:end="75:20">void</name> <call pos:start="75:22" pos:end="75:41"><name pos:start="75:22" pos:end="75:32">batchAddXML</name><argument_list pos:start="75:33" pos:end="75:41">(<argument pos:start="75:34" pos:end="75:40"><expr pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:40">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="76:5" pos:end="76:38"><name pos:start="76:5" pos:end="76:8">void</name> <call pos:start="76:10" pos:end="76:38"><name pos:start="76:10" pos:end="76:22">importCoreXML</name><argument_list pos:start="76:23" pos:end="76:38">(<argument pos:start="76:24" pos:end="76:37"><expr pos:start="76:24" pos:end="76:37"><specifier pos:start="76:24" pos:end="76:28">const</specifier> <name pos:start="76:30" pos:end="76:36">QString</name><operator pos:start="76:37" pos:end="76:37">&amp;</operator></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:8">void</name> <call pos:start="77:10" pos:end="77:40"><name pos:start="77:10" pos:end="77:24">importPluginXML</name><argument_list pos:start="77:25" pos:end="77:40">(<argument pos:start="77:26" pos:end="77:39"><expr pos:start="77:26" pos:end="77:39"><specifier pos:start="77:26" pos:end="77:30">const</specifier> <name pos:start="77:32" pos:end="77:38">QString</name><operator pos:start="77:39" pos:end="77:39">&amp;</operator></expr></argument>)</argument_list></call></expr>;

    <comment type="line" pos:start="79:5" pos:end="79:24">//Fixation Functions</comment>
    <expr pos:start="80:5" pos:end="80:67"><name pos:start="80:5" pos:end="80:15">Q_INVOKABLE</name> <name pos:start="80:17" pos:end="80:20">void</name> <call pos:start="80:22" pos:end="80:67"><name pos:start="80:22" pos:end="80:41">generateFixationData</name><argument_list pos:start="80:42" pos:end="80:67">(<argument pos:start="80:43" pos:end="80:58"><expr pos:start="80:43" pos:end="80:58"><name pos:start="80:43" pos:end="80:58"><name pos:start="80:43" pos:end="80:49">QVector</name><argument_list type="generic" pos:start="80:50" pos:end="80:58">&lt;<argument pos:start="80:51" pos:end="80:57"><expr pos:start="80:51" pos:end="80:57"><name pos:start="80:51" pos:end="80:57">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>,<argument pos:start="80:60" pos:end="80:66"><expr pos:start="80:60" pos:end="80:66"><name pos:start="80:60" pos:end="80:66">QString</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line" pos:start="82:5" pos:end="82:21">//srcML Functions</comment>
    <expr pos:start="83:5" pos:end="83:44"><name pos:start="83:5" pos:end="83:15">Q_INVOKABLE</name> <name pos:start="83:17" pos:end="83:20">void</name> <call pos:start="83:22" pos:end="83:44"><name pos:start="83:22" pos:end="83:30">mapTokens</name><argument_list pos:start="83:31" pos:end="83:44">(<argument pos:start="83:32" pos:end="83:38"><expr pos:start="83:32" pos:end="83:38"><name pos:start="83:32" pos:end="83:38">QString</name></expr></argument>,<argument pos:start="83:40" pos:end="83:43"><expr pos:start="83:40" pos:end="83:43"><name pos:start="83:40" pos:end="83:43">bool</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="84:5" pos:end="84:54"><name pos:start="84:5" pos:end="84:11">QString</name> <call pos:start="84:13" pos:end="84:54"><name pos:start="84:13" pos:end="84:28">findMatchingPath</name><argument_list pos:start="84:29" pos:end="84:54">(<argument pos:start="84:30" pos:end="84:45"><expr pos:start="84:30" pos:end="84:45"><name pos:start="84:30" pos:end="84:45"><name pos:start="84:30" pos:end="84:36">QVector</name><argument_list type="generic" pos:start="84:37" pos:end="84:45">&lt;<argument pos:start="84:38" pos:end="84:44"><expr pos:start="84:38" pos:end="84:44"><name pos:start="84:38" pos:end="84:44">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>,<argument pos:start="84:47" pos:end="84:53"><expr pos:start="84:47" pos:end="84:53"><name pos:start="84:47" pos:end="84:53">QString</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line" pos:start="86:5" pos:end="86:25">//Highlight Functions</comment>
    <expr pos:start="87:5" pos:end="87:56"><name pos:start="87:5" pos:end="87:15">Q_INVOKABLE</name> <name pos:start="87:17" pos:end="87:20">void</name> <call pos:start="87:22" pos:end="87:56"><name pos:start="87:22" pos:end="87:39">highlightFixations</name><argument_list pos:start="87:40" pos:end="87:56">(<argument pos:start="87:41" pos:end="87:47"><expr pos:start="87:41" pos:end="87:47"><name pos:start="87:41" pos:end="87:47">QString</name></expr></argument>,<argument pos:start="87:49" pos:end="87:55"><expr pos:start="87:49" pos:end="87:55"><name pos:start="87:49" pos:end="87:55">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="88:5" pos:end="88:83"><name pos:start="88:5" pos:end="88:8">void</name> <call pos:start="88:10" pos:end="88:83"><name pos:start="88:10" pos:end="88:24">highlightTokens</name><argument_list pos:start="88:25" pos:end="88:83">(<argument pos:start="88:26" pos:end="88:50"><expr pos:start="88:26" pos:end="88:50"><name pos:start="88:26" pos:end="88:50"><name pos:start="88:26" pos:end="88:32">QVector</name><argument_list type="generic" pos:start="88:33" pos:end="88:50">&lt;<argument pos:start="88:34" pos:end="88:49"><expr pos:start="88:34" pos:end="88:49"><name pos:start="88:34" pos:end="88:49"><name pos:start="88:34" pos:end="88:40">QVector</name><argument_list type="generic" pos:start="88:41" pos:end="88:49">&lt;<argument pos:start="88:42" pos:end="88:48"><expr pos:start="88:42" pos:end="88:48"><name pos:start="88:42" pos:end="88:48">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></expr></argument>, <argument pos:start="88:53" pos:end="88:64"><expr pos:start="88:53" pos:end="88:64"><name pos:start="88:53" pos:end="88:64">SRCMLHandler</name></expr></argument>, <argument pos:start="88:67" pos:end="88:73"><expr pos:start="88:67" pos:end="88:73"><name pos:start="88:67" pos:end="88:73">QString</name></expr></argument>, <argument pos:start="88:76" pos:end="88:82"><expr pos:start="88:76" pos:end="88:82"><name pos:start="88:76" pos:end="88:82">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="89:5" pos:end="89:87"><name pos:start="89:5" pos:end="89:8">void</name> <call pos:start="89:10" pos:end="89:87"><name pos:start="89:10" pos:end="89:32">generateHighlightedFile</name><argument_list pos:start="89:33" pos:end="89:87">(<argument pos:start="89:34" pos:end="89:40"><expr pos:start="89:34" pos:end="89:40"><name pos:start="89:34" pos:end="89:40">QString</name></expr></argument>,<argument pos:start="89:42" pos:end="89:48"><expr pos:start="89:42" pos:end="89:48"><name pos:start="89:42" pos:end="89:48">QString</name></expr></argument>,<argument pos:start="89:50" pos:end="89:60"><expr pos:start="89:50" pos:end="89:60"><name pos:start="89:50" pos:end="89:60">QStringList</name></expr></argument>,<argument pos:start="89:62" pos:end="89:86"><expr pos:start="89:62" pos:end="89:86"><name pos:start="89:62" pos:end="89:86"><name pos:start="89:62" pos:end="89:68">QVector</name><argument_list type="generic" pos:start="89:69" pos:end="89:86">&lt;<argument pos:start="89:70" pos:end="89:85"><expr pos:start="89:70" pos:end="89:85"><name pos:start="89:70" pos:end="89:85"><name pos:start="89:70" pos:end="89:76">QVector</name><argument_list type="generic" pos:start="89:77" pos:end="89:85">&lt;<argument pos:start="89:78" pos:end="89:84"><expr pos:start="89:78" pos:end="89:84"><name pos:start="89:78" pos:end="89:84">QString</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call></expr>;

    <comment type="line" pos:start="91:5" pos:end="91:21">//Query Functions</comment>
    <expr pos:start="92:5" pos:end="92:134"><name pos:start="92:5" pos:end="92:15">Q_INVOKABLE</name> <name pos:start="92:17" pos:end="92:23">QString</name> <call pos:start="92:25" pos:end="92:134"><name pos:start="92:25" pos:end="92:37">generateQuery</name><argument_list pos:start="92:38" pos:end="92:134">(<argument pos:start="92:39" pos:end="92:45"><expr pos:start="92:39" pos:end="92:45"><name pos:start="92:39" pos:end="92:45">QString</name></expr></argument>,<argument pos:start="92:47" pos:end="92:53"><expr pos:start="92:47" pos:end="92:53"><name pos:start="92:47" pos:end="92:53">QString</name></expr></argument>,<argument pos:start="92:55" pos:end="92:61"><expr pos:start="92:55" pos:end="92:61"><name pos:start="92:55" pos:end="92:61">QString</name></expr></argument>,<argument pos:start="92:63" pos:end="92:69"><expr pos:start="92:63" pos:end="92:69"><name pos:start="92:63" pos:end="92:69">QString</name></expr></argument>,<argument pos:start="92:71" pos:end="92:77"><expr pos:start="92:71" pos:end="92:77"><name pos:start="92:71" pos:end="92:77">QString</name></expr></argument>,<argument pos:start="92:79" pos:end="92:85"><expr pos:start="92:79" pos:end="92:85"><name pos:start="92:79" pos:end="92:85">QString</name></expr></argument>,<argument pos:start="92:87" pos:end="92:93"><expr pos:start="92:87" pos:end="92:93"><name pos:start="92:87" pos:end="92:93">QString</name></expr></argument>,<argument pos:start="92:95" pos:end="92:101"><expr pos:start="92:95" pos:end="92:101"><name pos:start="92:95" pos:end="92:101">QString</name></expr></argument>,<argument pos:start="92:103" pos:end="92:109"><expr pos:start="92:103" pos:end="92:109"><name pos:start="92:103" pos:end="92:109">QString</name></expr></argument>,<argument pos:start="92:111" pos:end="92:117"><expr pos:start="92:111" pos:end="92:117"><name pos:start="92:111" pos:end="92:117">QString</name></expr></argument>,<argument pos:start="92:119" pos:end="92:125"><expr pos:start="92:119" pos:end="92:125"><name pos:start="92:119" pos:end="92:125">QString</name></expr></argument>,<argument pos:start="92:127" pos:end="92:133"><expr pos:start="92:127" pos:end="92:133"><name pos:start="92:127" pos:end="92:133">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="93:5" pos:end="93:52"><name pos:start="93:5" pos:end="93:15">Q_INVOKABLE</name> <name pos:start="93:17" pos:end="93:20">void</name> <call pos:start="93:22" pos:end="93:52"><name pos:start="93:22" pos:end="93:34">loadQueryFile</name><argument_list pos:start="93:35" pos:end="93:52">(<argument pos:start="93:36" pos:end="93:42"><expr pos:start="93:36" pos:end="93:42"><name pos:start="93:36" pos:end="93:42">QString</name></expr></argument>, <argument pos:start="93:45" pos:end="93:51"><expr pos:start="93:45" pos:end="93:51"><name pos:start="93:45" pos:end="93:51">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="94:5" pos:end="94:52"><name pos:start="94:5" pos:end="94:15">Q_INVOKABLE</name> <name pos:start="94:17" pos:end="94:20">void</name> <call pos:start="94:22" pos:end="94:52"><name pos:start="94:22" pos:end="94:34">saveQueryFile</name><argument_list pos:start="94:35" pos:end="94:52">(<argument pos:start="94:36" pos:end="94:42"><expr pos:start="94:36" pos:end="94:42"><name pos:start="94:36" pos:end="94:42">QString</name></expr></argument>, <argument pos:start="94:45" pos:end="94:51"><expr pos:start="94:45" pos:end="94:51"><name pos:start="94:45" pos:end="94:51">QString</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="95:5" pos:end="95:57"><name pos:start="95:5" pos:end="95:15">Q_INVOKABLE</name> <name pos:start="95:17" pos:end="95:20">void</name> <call pos:start="95:22" pos:end="95:57"><name pos:start="95:22" pos:end="95:40">generateQueriedData</name><argument_list pos:start="95:41" pos:end="95:57">(<argument pos:start="95:42" pos:end="95:48"><expr pos:start="95:42" pos:end="95:48"><name pos:start="95:42" pos:end="95:48">QString</name></expr></argument>,<argument pos:start="95:50" pos:end="95:56"><expr pos:start="95:50" pos:end="95:56"><name pos:start="95:50" pos:end="95:56">QString</name></expr></argument>)</argument_list></call></expr>;


<expr pos:start="98:1" pos:end="99:39"><name pos:start="98:1" pos:end="98:7">signals</name><operator pos:start="98:8" pos:end="98:8">:</operator>
    <name pos:start="99:5" pos:end="99:8">void</name> <call pos:start="99:10" pos:end="99:39"><name pos:start="99:10" pos:end="99:18">taskAdded</name><argument_list pos:start="99:19" pos:end="99:39">(<argument pos:start="99:20" pos:end="99:38"><expr pos:start="99:20" pos:end="99:38"><specifier pos:start="99:20" pos:end="99:24">const</specifier> <name pos:start="99:26" pos:end="99:32">QString</name><operator pos:start="99:33" pos:end="99:33">&amp;</operator> <name pos:start="99:35" pos:end="99:38">task</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="100:5" pos:end="100:64"><name pos:start="100:5" pos:end="100:8">void</name> <call pos:start="100:10" pos:end="100:64"><name pos:start="100:10" pos:end="100:23">outputToScreen</name><argument_list pos:start="100:24" pos:end="100:64">(<argument pos:start="100:25" pos:end="100:44"><expr pos:start="100:25" pos:end="100:44"><specifier pos:start="100:25" pos:end="100:29">const</specifier> <name pos:start="100:31" pos:end="100:37">QString</name><operator pos:start="100:38" pos:end="100:38">&amp;</operator> <name pos:start="100:40" pos:end="100:44">color</name></expr></argument>,<argument pos:start="100:46" pos:end="100:63"><expr pos:start="100:46" pos:end="100:63"><specifier pos:start="100:46" pos:end="100:50">const</specifier> <name pos:start="100:52" pos:end="100:58">QString</name><operator pos:start="100:59" pos:end="100:59">&amp;</operator> <name pos:start="100:61" pos:end="100:63">msg</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="101:5" pos:end="101:58"><name pos:start="101:5" pos:end="101:8">void</name> <call pos:start="101:10" pos:end="101:58"><name pos:start="101:10" pos:end="101:16">warning</name><argument_list pos:start="101:17" pos:end="101:58">(<argument pos:start="101:18" pos:end="101:37"><expr pos:start="101:18" pos:end="101:37"><specifier pos:start="101:18" pos:end="101:22">const</specifier> <name pos:start="101:24" pos:end="101:30">QString</name><operator pos:start="101:31" pos:end="101:31">&amp;</operator> <name pos:start="101:33" pos:end="101:37">title</name></expr></argument>, <argument pos:start="101:40" pos:end="101:57"><expr pos:start="101:40" pos:end="101:57"><specifier pos:start="101:40" pos:end="101:44">const</specifier> <name pos:start="101:46" pos:end="101:52">QString</name><operator pos:start="101:53" pos:end="101:53">&amp;</operator> <name pos:start="101:55" pos:end="101:57">msg</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="102:5" pos:end="102:41"><name pos:start="102:5" pos:end="102:8">void</name> <call pos:start="102:10" pos:end="102:41"><name pos:start="102:10" pos:end="102:20">databaseSet</name><argument_list pos:start="102:21" pos:end="102:41">(<argument pos:start="102:22" pos:end="102:40"><expr pos:start="102:22" pos:end="102:40"><specifier pos:start="102:22" pos:end="102:26">const</specifier> <name pos:start="102:28" pos:end="102:34">QString</name><operator pos:start="102:35" pos:end="102:35">&amp;</operator> <name pos:start="102:37" pos:end="102:40">path</name></expr></argument>)</argument_list></call></expr>;
    <expr pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:8">void</name> <call pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:23">databaseClosed</name><argument_list pos:start="103:24" pos:end="103:25">()</argument_list></call></expr>;
    <expr pos:start="104:5" pos:end="104:45"><name pos:start="104:5" pos:end="104:8">void</name> <macro pos:start="104:10" pos:end="104:45"><name pos:start="104:10" pos:end="104:25">startProgressBar</name><argument_list pos:start="104:26" pos:end="104:45">(<argument pos:start="104:27" pos:end="104:35">int start</argument>,<argument pos:start="104:37" pos:end="104:44">int stop</argument>)</argument_list></macro></expr>;
    <expr pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:8">void</name> <call pos:start="105:10" pos:end="105:26"><name pos:start="105:10" pos:end="105:24">stopProgressBar</name><argument_list pos:start="105:25" pos:end="105:26">()</argument_list></call></expr>;
    <expr pos:start="106:5" pos:end="106:37"><name pos:start="106:5" pos:end="106:8">void</name> <macro pos:start="106:10" pos:end="106:37"><name pos:start="106:10" pos:end="106:28">setProgressBarValue</name><argument_list pos:start="106:29" pos:end="106:37">(<argument pos:start="106:30" pos:end="106:36">int val</argument>)</argument_list></macro></expr>;
    <expr pos:start="107:5" pos:end="107:40"><name pos:start="107:5" pos:end="107:8">void</name> <call pos:start="107:10" pos:end="107:40"><name pos:start="107:10" pos:end="107:38">setProgressBarToIndeterminate</name><argument_list pos:start="107:39" pos:end="107:40">()</argument_list></call></expr>;

<expr pos:start="109:1" pos:end="110:16"><name pos:start="109:1" pos:end="109:7">private</name><operator pos:start="109:8" pos:end="109:8">:</operator>
    <name pos:start="110:5" pos:end="110:12">Database</name> <name pos:start="110:14" pos:end="110:16">idb</name></expr>;
    <expr pos:start="111:5" pos:end="111:36"><name pos:start="111:5" pos:end="111:10">Logger</name><operator pos:start="111:11" pos:end="111:11">*</operator> <name pos:start="111:13" pos:end="111:15">log</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:24">Logger</name><operator pos:start="111:25" pos:end="111:26">::</operator><call pos:start="111:27" pos:end="111:36"><name pos:start="111:27" pos:end="111:34">instance</name><argument_list pos:start="111:35" pos:end="111:36">()</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif pos:start="114:1" pos:end="114:6">#<cpp:directive pos:start="114:2" pos:end="114:6">endif</cpp:directive></cpp:endif> <comment type="line" pos:start="114:8" pos:end="114:22">// CONTROLLER_H</comment>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/fixation.cpp" pos:tabs="8" hash="832e0fa31ef24f769f83d2070bd2bfa8902de498"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file fixation.cpp
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:include pos:start="12:1" pos:end="12:21">#<cpp:directive pos:start="12:2" pos:end="12:8">include</cpp:directive> <cpp:file pos:start="12:10" pos:end="12:21">"fixation.h"</cpp:file></cpp:include>

<constructor pos:start="14:1" pos:end="14:23"><name pos:start="14:1" pos:end="14:18"><name pos:start="14:1" pos:end="14:8">Fixation</name><operator pos:start="14:9" pos:end="14:10">::</operator><name pos:start="14:11" pos:end="14:18">Fixation</name></name><parameter_list pos:start="14:19" pos:end="14:20">()</parameter_list> <block pos:start="14:22" pos:end="14:23">{<block_content/>}</block></constructor>

<function pos:start="16:1" pos:end="66:1"><type pos:start="16:1" pos:end="16:4"><name pos:start="16:1" pos:end="16:4">void</name></type> <name pos:start="16:6" pos:end="16:38"><name pos:start="16:6" pos:end="16:13">Fixation</name><operator pos:start="16:14" pos:end="16:15">::</operator><name pos:start="16:16" pos:end="16:38">calculateDatabaseFields</name></name><parameter_list pos:start="16:39" pos:end="16:40">()</parameter_list> <block pos:start="16:42" pos:end="66:1">{<block_content pos:start="17:5" pos:end="64:37">
    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">long</name> <name pos:start="17:10" pos:end="17:13">long</name></type> <name pos:start="17:15" pos:end="17:24">start_time</name> <init pos:start="17:26" pos:end="17:29">= <expr pos:start="17:28" pos:end="17:29"><operator pos:start="17:28" pos:end="17:28">-</operator><literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr></init></decl>, <decl pos:start="17:32" pos:end="17:44"><type ref="prev" pos:start="17:5" pos:end="17:13"/><name pos:start="17:32" pos:end="17:39">end_time</name> <init pos:start="17:41" pos:end="17:44">= <expr pos:start="17:43" pos:end="17:44"><operator pos:start="17:43" pos:end="17:43">-</operator><literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="18:5" pos:end="18:23"><decl pos:start="18:5" pos:end="18:22"><type pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:7">int</name></type> <name pos:start="18:9" pos:end="18:18">gaze_count</name> <init pos:start="18:20" pos:end="18:22">= <expr pos:start="18:22" pos:end="18:22"><literal type="number" pos:start="18:22" pos:end="18:22">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:7">std</name><operator pos:start="19:8" pos:end="19:9">::</operator><name pos:start="19:10" pos:end="19:12">map</name><argument_list type="generic" pos:start="19:13" pos:end="19:25">&lt;<argument pos:start="19:14" pos:end="19:20"><expr pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:20">QString</name></expr></argument>,<argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="19:27" pos:end="19:43">candidate_targets</name></decl>;</decl_stmt>
    <for pos:start="20:5" pos:end="48:5">for<control pos:start="20:8" pos:end="20:29">(<init pos:start="20:9" pos:end="20:28"><decl pos:start="20:9" pos:end="20:28"><type pos:start="20:9" pos:end="20:12"><name pos:start="20:9" pos:end="20:12">auto</name></type> <name pos:start="20:14" pos:end="20:17">gaze</name> <range pos:start="20:19" pos:end="20:28">: <expr pos:start="20:21" pos:end="20:28"><name pos:start="20:21" pos:end="20:28">gaze_vec</name></expr></range></decl></init>)</control> <block pos:start="20:31" pos:end="48:5">{<block_content pos:start="21:9" pos:end="47:67">
        <if_stmt pos:start="21:9" pos:end="21:41"><if pos:start="21:9" pos:end="21:41">if<condition pos:start="21:11" pos:end="21:27">(<expr pos:start="21:12" pos:end="21:26"><operator pos:start="21:12" pos:end="21:12">!</operator><call pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:16">gaze</name><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:24">isValid</name></name><argument_list pos:start="21:25" pos:end="21:26">()</argument_list></call></expr>)</condition> <block pos:start="21:29" pos:end="21:41">{<block_content pos:start="21:31" pos:end="21:39"> <continue pos:start="21:31" pos:end="21:39">continue;</continue> </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="22:9" pos:end="24:9"><if pos:start="22:9" pos:end="24:9">if<condition pos:start="22:11" pos:end="22:77">(<expr pos:start="22:12" pos:end="22:76"><name pos:start="22:12" pos:end="22:30">fixation_event_time</name> <operator pos:start="22:32" pos:end="22:33">==</operator> <literal type="number" pos:start="22:35" pos:end="22:35">0</literal> <operator pos:start="22:37" pos:end="22:38">||</operator> <name pos:start="22:40" pos:end="22:58">fixation_event_time</name> <operator pos:start="22:60" pos:end="22:60">&gt;</operator> <name pos:start="22:62" pos:end="22:76"><name pos:start="22:62" pos:end="22:65">gaze</name><operator pos:start="22:66" pos:end="22:66">.</operator><name pos:start="22:67" pos:end="22:76">event_time</name></name></expr>)</condition> <block pos:start="22:79" pos:end="24:9">{<block_content pos:start="23:13" pos:end="23:50">
            <expr_stmt pos:start="23:13" pos:end="23:50"><expr pos:start="23:13" pos:end="23:49"><name pos:start="23:13" pos:end="23:31">fixation_event_time</name> <operator pos:start="23:33" pos:end="23:33">=</operator> <name pos:start="23:35" pos:end="23:49"><name pos:start="23:35" pos:end="23:38">gaze</name><operator pos:start="23:39" pos:end="23:39">.</operator><name pos:start="23:40" pos:end="23:49">event_time</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="26:9" pos:end="26:21"><expr pos:start="26:9" pos:end="26:20"><operator pos:start="26:9" pos:end="26:10">++</operator><name pos:start="26:11" pos:end="26:20">gaze_count</name></expr>;</expr_stmt>

        <if_stmt pos:start="28:9" pos:end="30:9"><if pos:start="28:9" pos:end="30:9">if<condition pos:start="28:11" pos:end="28:61">(<expr pos:start="28:12" pos:end="28:60"><name pos:start="28:12" pos:end="28:21">start_time</name> <operator pos:start="28:23" pos:end="28:24">==</operator> <operator pos:start="28:26" pos:end="28:26">-</operator><literal type="number" pos:start="28:27" pos:end="28:27">1</literal> <operator pos:start="28:29" pos:end="28:30">||</operator> <name pos:start="28:32" pos:end="28:41">start_time</name> <operator pos:start="28:43" pos:end="28:43">&gt;</operator> <name pos:start="28:45" pos:end="28:60"><name pos:start="28:45" pos:end="28:48">gaze</name><operator pos:start="28:49" pos:end="28:49">.</operator><name pos:start="28:50" pos:end="28:60">system_time</name></name></expr>)</condition> <block pos:start="28:63" pos:end="30:9">{<block_content pos:start="29:13" pos:end="29:42">
            <expr_stmt pos:start="29:13" pos:end="29:42"><expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:22">start_time</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:41"><name pos:start="29:26" pos:end="29:29">gaze</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:41">system_time</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="31:9" pos:end="33:9"><if pos:start="31:9" pos:end="33:9">if<condition pos:start="31:11" pos:end="31:57">(<expr pos:start="31:12" pos:end="31:56"><name pos:start="31:12" pos:end="31:19">end_time</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <operator pos:start="31:24" pos:end="31:24">-</operator><literal type="number" pos:start="31:25" pos:end="31:25">1</literal> <operator pos:start="31:27" pos:end="31:28">||</operator> <name pos:start="31:30" pos:end="31:37">end_time</name> <operator pos:start="31:39" pos:end="31:39">&lt;</operator> <name pos:start="31:41" pos:end="31:56"><name pos:start="31:41" pos:end="31:44">gaze</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:56">system_time</name></name></expr>)</condition> <block pos:start="31:59" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:40">
            <expr_stmt pos:start="32:13" pos:end="32:40"><expr pos:start="32:13" pos:end="32:39"><name pos:start="32:13" pos:end="32:20">end_time</name> <operator pos:start="32:22" pos:end="32:22">=</operator> <name pos:start="32:24" pos:end="32:39"><name pos:start="32:24" pos:end="32:27">gaze</name><operator pos:start="32:28" pos:end="32:28">.</operator><name pos:start="32:29" pos:end="32:39">system_time</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>


        <expr_stmt pos:start="36:9" pos:end="36:130"><expr pos:start="36:9" pos:end="36:129"><name pos:start="36:9" pos:end="36:27">left_pupil_diameter</name> <operator pos:start="36:29" pos:end="36:30">+=</operator> <ternary pos:start="36:32" pos:end="36:129"><condition pos:start="36:32" pos:end="36:100"><expr pos:start="36:32" pos:end="36:98"><call pos:start="36:32" pos:end="36:62"><name pos:start="36:32" pos:end="36:36">isnan</name><argument_list pos:start="36:37" pos:end="36:62">(<argument pos:start="36:38" pos:end="36:61"><expr pos:start="36:38" pos:end="36:61"><name pos:start="36:38" pos:end="36:61"><name pos:start="36:38" pos:end="36:41">gaze</name><operator pos:start="36:42" pos:end="36:42">.</operator><name pos:start="36:43" pos:end="36:61">left_pupil_diameter</name></name></expr></argument>)</argument_list></call> <operator pos:start="36:64" pos:end="36:65">||</operator> <name pos:start="36:67" pos:end="36:90"><name pos:start="36:67" pos:end="36:70">gaze</name><operator pos:start="36:71" pos:end="36:71">.</operator><name pos:start="36:72" pos:end="36:90">left_pupil_diameter</name></name> <operator pos:start="36:92" pos:end="36:93">==</operator> <operator pos:start="36:95" pos:end="36:95">-</operator><literal type="number" pos:start="36:96" pos:end="36:98">1.0</literal></expr> ?</condition><then pos:start="36:102" pos:end="36:102"> <expr pos:start="36:102" pos:end="36:102"><literal type="number" pos:start="36:102" pos:end="36:102">0</literal></expr> </then><else pos:start="36:104" pos:end="36:129">: <expr pos:start="36:106" pos:end="36:129"><name pos:start="36:106" pos:end="36:129"><name pos:start="36:106" pos:end="36:109">gaze</name><operator pos:start="36:110" pos:end="36:110">.</operator><name pos:start="36:111" pos:end="36:129">left_pupil_diameter</name></name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:133"><expr pos:start="37:9" pos:end="37:132"><name pos:start="37:9" pos:end="37:28">right_pupil_diameter</name> <operator pos:start="37:30" pos:end="37:31">+=</operator> <ternary pos:start="37:33" pos:end="37:132"><condition pos:start="37:33" pos:end="37:102"><expr pos:start="37:33" pos:end="37:100"><call pos:start="37:33" pos:end="37:64"><name pos:start="37:33" pos:end="37:37">isnan</name><argument_list pos:start="37:38" pos:end="37:64">(<argument pos:start="37:39" pos:end="37:63"><expr pos:start="37:39" pos:end="37:63"><name pos:start="37:39" pos:end="37:63"><name pos:start="37:39" pos:end="37:42">gaze</name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:63">right_pupil_diameter</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:66" pos:end="37:67">||</operator> <name pos:start="37:69" pos:end="37:92"><name pos:start="37:69" pos:end="37:72">gaze</name><operator pos:start="37:73" pos:end="37:73">.</operator><name pos:start="37:74" pos:end="37:92">left_pupil_diameter</name></name> <operator pos:start="37:94" pos:end="37:95">==</operator> <operator pos:start="37:97" pos:end="37:97">-</operator><literal type="number" pos:start="37:98" pos:end="37:100">1.0</literal></expr> ?</condition><then pos:start="37:104" pos:end="37:104"> <expr pos:start="37:104" pos:end="37:104"><literal type="number" pos:start="37:104" pos:end="37:104">0</literal></expr> </then><else pos:start="37:106" pos:end="37:132">: <expr pos:start="37:108" pos:end="37:132"><name pos:start="37:108" pos:end="37:132"><name pos:start="37:108" pos:end="37:111">gaze</name><operator pos:start="37:112" pos:end="37:112">.</operator><name pos:start="37:113" pos:end="37:132">right_pupil_diameter</name></name></expr></else></ternary></expr>;</expr_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:56"><decl pos:start="39:9" pos:end="39:55"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">QString</name></type> <name pos:start="39:17" pos:end="39:29">candidate_key</name> <init pos:start="39:31" pos:end="39:55">= <expr pos:start="39:33" pos:end="39:55"><name pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:36">gaze</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:48">gaze_target</name></name> <operator pos:start="39:50" pos:end="39:50">+</operator> <literal type="string" pos:start="39:52" pos:end="39:55">"\t"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:117"><expr pos:start="40:9" pos:end="40:116"><name pos:start="40:9" pos:end="40:21">candidate_key</name> <operator pos:start="40:23" pos:end="40:24">+=</operator> <operator pos:start="40:26" pos:end="40:26">(</operator><ternary pos:start="40:27" pos:end="40:108"><condition pos:start="40:27" pos:end="40:55"><expr pos:start="40:27" pos:end="40:53"><name pos:start="40:27" pos:end="40:47"><name pos:start="40:27" pos:end="40:30">gaze</name><operator pos:start="40:31" pos:end="40:31">.</operator><name pos:start="40:32" pos:end="40:47">source_file_line</name></name> <operator pos:start="40:49" pos:end="40:50">==</operator> <operator pos:start="40:52" pos:end="40:52">-</operator><literal type="number" pos:start="40:53" pos:end="40:53">1</literal></expr> ?</condition><then pos:start="40:57" pos:end="40:67"> <expr pos:start="40:57" pos:end="40:67"><call pos:start="40:57" pos:end="40:67"><name pos:start="40:57" pos:end="40:63">QString</name><argument_list pos:start="40:64" pos:end="40:67">(<argument pos:start="40:65" pos:end="40:66"><expr pos:start="40:65" pos:end="40:66"><literal type="string" pos:start="40:65" pos:end="40:66">""</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="40:69" pos:end="40:108">: <expr pos:start="40:71" pos:end="40:108"><call pos:start="40:71" pos:end="40:108"><name pos:start="40:71" pos:end="40:85"><name pos:start="40:71" pos:end="40:77">QString</name><operator pos:start="40:78" pos:end="40:79">::</operator><name pos:start="40:80" pos:end="40:85">number</name></name><argument_list pos:start="40:86" pos:end="40:108">(<argument pos:start="40:87" pos:end="40:107"><expr pos:start="40:87" pos:end="40:107"><name pos:start="40:87" pos:end="40:107"><name pos:start="40:87" pos:end="40:90">gaze</name><operator pos:start="40:91" pos:end="40:91">.</operator><name pos:start="40:92" pos:end="40:107">source_file_line</name></name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="40:109" pos:end="40:109">)</operator> <operator pos:start="40:111" pos:end="40:111">+</operator> <literal type="string" pos:start="40:113" pos:end="40:116">"\t"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:115"><expr pos:start="41:9" pos:end="41:114"><name pos:start="41:9" pos:end="41:21">candidate_key</name> <operator pos:start="41:23" pos:end="41:24">+=</operator> <operator pos:start="41:26" pos:end="41:26">(</operator><ternary pos:start="41:27" pos:end="41:106"><condition pos:start="41:27" pos:end="41:54"><expr pos:start="41:27" pos:end="41:52"><name pos:start="41:27" pos:end="41:46"><name pos:start="41:27" pos:end="41:30">gaze</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:46">source_file_col</name></name> <operator pos:start="41:48" pos:end="41:49">==</operator> <operator pos:start="41:51" pos:end="41:51">-</operator><literal type="number" pos:start="41:52" pos:end="41:52">1</literal></expr> ?</condition><then pos:start="41:56" pos:end="41:66"> <expr pos:start="41:56" pos:end="41:66"><call pos:start="41:56" pos:end="41:66"><name pos:start="41:56" pos:end="41:62">QString</name><argument_list pos:start="41:63" pos:end="41:66">(<argument pos:start="41:64" pos:end="41:65"><expr pos:start="41:64" pos:end="41:65"><literal type="string" pos:start="41:64" pos:end="41:65">""</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="41:68" pos:end="41:106">: <expr pos:start="41:70" pos:end="41:106"><call pos:start="41:70" pos:end="41:106"><name pos:start="41:70" pos:end="41:84"><name pos:start="41:70" pos:end="41:76">QString</name><operator pos:start="41:77" pos:end="41:78">::</operator><name pos:start="41:79" pos:end="41:84">number</name></name><argument_list pos:start="41:85" pos:end="41:106">(<argument pos:start="41:86" pos:end="41:105"><expr pos:start="41:86" pos:end="41:105"><name pos:start="41:86" pos:end="41:105"><name pos:start="41:86" pos:end="41:89">gaze</name><operator pos:start="41:90" pos:end="41:90">.</operator><name pos:start="41:91" pos:end="41:105">source_file_col</name></name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="41:107" pos:end="41:107">)</operator> <operator pos:start="41:109" pos:end="41:109">+</operator> <literal type="string" pos:start="41:111" pos:end="41:114">"\t"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:50"><expr pos:start="42:9" pos:end="42:49"><name pos:start="42:9" pos:end="42:21">candidate_key</name> <operator pos:start="42:23" pos:end="42:24">+=</operator> <name pos:start="42:26" pos:end="42:42"><name pos:start="42:26" pos:end="42:29">gaze</name><operator pos:start="42:30" pos:end="42:30">.</operator><name pos:start="42:31" pos:end="42:42">source_token</name></name> <operator pos:start="42:44" pos:end="42:44">+</operator> <literal type="string" pos:start="42:46" pos:end="42:49">"\t"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:21">candidate_key</name> <operator pos:start="43:23" pos:end="43:24">+=</operator> <name pos:start="43:26" pos:end="43:59"><name pos:start="43:26" pos:end="43:29">gaze</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:59">source_token_syntatic_context</name></name> <operator pos:start="43:61" pos:end="43:61">+</operator> <literal type="string" pos:start="43:63" pos:end="43:66">"\t"</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:56"><expr pos:start="44:9" pos:end="44:55"><name pos:start="44:9" pos:end="44:21">candidate_key</name> <operator pos:start="44:23" pos:end="44:24">+=</operator> <name pos:start="44:26" pos:end="44:48"><name pos:start="44:26" pos:end="44:29">gaze</name><operator pos:start="44:30" pos:end="44:30">.</operator><name pos:start="44:31" pos:end="44:48">source_token_xpath</name></name> <operator pos:start="44:50" pos:end="44:50">+</operator> <literal type="string" pos:start="44:52" pos:end="44:55">"\t"</literal></expr>;</expr_stmt>

        <if_stmt pos:start="46:9" pos:end="47:67"><if pos:start="46:9" pos:end="46:103">if<condition pos:start="46:11" pos:end="46:55">(<expr pos:start="46:12" pos:end="46:54"><call pos:start="46:12" pos:end="46:49"><name pos:start="46:12" pos:end="46:34"><name pos:start="46:12" pos:end="46:28">candidate_targets</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:34">count</name></name><argument_list pos:start="46:35" pos:end="46:49">(<argument pos:start="46:36" pos:end="46:48"><expr pos:start="46:36" pos:end="46:48"><name pos:start="46:36" pos:end="46:48">candidate_key</name></expr></argument>)</argument_list></call> <operator pos:start="46:51" pos:end="46:52">==</operator> <literal type="number" pos:start="46:54" pos:end="46:54">0</literal></expr>)</condition> <block pos:start="46:57" pos:end="46:103">{<block_content pos:start="46:59" pos:end="46:101"> <expr_stmt pos:start="46:59" pos:end="46:101"><expr pos:start="46:59" pos:end="46:100"><call pos:start="46:59" pos:end="46:100"><name pos:start="46:59" pos:end="46:83"><name pos:start="46:59" pos:end="46:75">candidate_targets</name><operator pos:start="46:76" pos:end="46:76">.</operator><name pos:start="46:77" pos:end="46:83">emplace</name></name><argument_list pos:start="46:84" pos:end="46:100">(<argument pos:start="46:85" pos:end="46:97"><expr pos:start="46:85" pos:end="46:97"><name pos:start="46:85" pos:end="46:97">candidate_key</name></expr></argument>,<argument pos:start="46:99" pos:end="46:99"><expr pos:start="46:99" pos:end="46:99"><literal type="number" pos:start="46:99" pos:end="46:99">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if>
        <else pos:start="47:9" pos:end="47:67">else <block pos:start="47:14" pos:end="47:67">{<block_content pos:start="47:16" pos:end="47:65"> <expr_stmt pos:start="47:16" pos:end="47:65"><expr pos:start="47:16" pos:end="47:64"><operator pos:start="47:16" pos:end="47:17">++</operator><operator pos:start="47:18" pos:end="47:18">(</operator><call pos:start="47:19" pos:end="47:55"><name pos:start="47:19" pos:end="47:40"><name pos:start="47:19" pos:end="47:35">candidate_targets</name><operator pos:start="47:36" pos:end="47:36">.</operator><name pos:start="47:37" pos:end="47:40">find</name></name><argument_list pos:start="47:41" pos:end="47:55">(<argument pos:start="47:42" pos:end="47:54"><expr pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:54">candidate_key</name></expr></argument>)</argument_list></call><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:63">second</name><operator pos:start="47:64" pos:end="47:64">)</operator></expr>;</expr_stmt> </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <decl_stmt pos:start="49:5" pos:end="49:73"><decl pos:start="49:5" pos:end="49:72"><type pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:7">std</name><operator pos:start="49:8" pos:end="49:9">::</operator><name pos:start="49:10" pos:end="49:13">pair</name><argument_list type="generic" pos:start="49:14" pos:end="49:26">&lt;<argument pos:start="49:15" pos:end="49:21"><expr pos:start="49:15" pos:end="49:21"><name pos:start="49:15" pos:end="49:21">QString</name></expr></argument>,<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25">int</name></expr></argument>&gt;</argument_list></name></type> <name pos:start="49:28" pos:end="49:40">most_frequent</name> <init pos:start="49:42" pos:end="49:72">= <expr pos:start="49:44" pos:end="49:72"><call pos:start="49:44" pos:end="49:72"><name pos:start="49:44" pos:end="49:57"><name pos:start="49:44" pos:end="49:46">std</name><operator pos:start="49:47" pos:end="49:48">::</operator><name pos:start="49:49" pos:end="49:57">make_pair</name></name><argument_list pos:start="49:58" pos:end="49:72">(<argument pos:start="49:59" pos:end="49:69"><expr pos:start="49:59" pos:end="49:69"><call pos:start="49:59" pos:end="49:69"><name pos:start="49:59" pos:end="49:65">QString</name><argument_list pos:start="49:66" pos:end="49:69">(<argument pos:start="49:67" pos:end="49:68"><expr pos:start="49:67" pos:end="49:68"><literal type="string" pos:start="49:67" pos:end="49:68">""</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="49:71" pos:end="49:71"><expr pos:start="49:71" pos:end="49:71"><literal type="number" pos:start="49:71" pos:end="49:71">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:start="50:5" pos:end="52:5">for<control pos:start="50:8" pos:end="50:102">(<init pos:start="50:9" pos:end="50:51"><decl pos:start="50:9" pos:end="50:50"><type pos:start="50:9" pos:end="50:12"><name pos:start="50:9" pos:end="50:12">auto</name></type> <name pos:start="50:14" pos:end="50:22">candidate</name> <init pos:start="50:24" pos:end="50:50">= <expr pos:start="50:26" pos:end="50:50"><call pos:start="50:26" pos:end="50:50"><name pos:start="50:26" pos:end="50:48"><name pos:start="50:26" pos:end="50:42">candidate_targets</name><operator pos:start="50:43" pos:end="50:43">.</operator><name pos:start="50:44" pos:end="50:48">begin</name></name><argument_list pos:start="50:49" pos:end="50:50">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="50:53" pos:end="50:89"><expr pos:start="50:53" pos:end="50:88"><name pos:start="50:53" pos:end="50:61">candidate</name> <operator pos:start="50:63" pos:end="50:64">!=</operator> <call pos:start="50:66" pos:end="50:88"><name pos:start="50:66" pos:end="50:86"><name pos:start="50:66" pos:end="50:82">candidate_targets</name><operator pos:start="50:83" pos:end="50:83">.</operator><name pos:start="50:84" pos:end="50:86">end</name></name><argument_list pos:start="50:87" pos:end="50:88">()</argument_list></call></expr>;</condition> <incr pos:start="50:91" pos:end="50:101"><expr pos:start="50:91" pos:end="50:101"><operator pos:start="50:91" pos:end="50:92">++</operator><name pos:start="50:93" pos:end="50:101">candidate</name></expr></incr>)</control> <block pos:start="50:104" pos:end="52:5">{<block_content pos:start="51:9" pos:end="51:113">
        <if_stmt pos:start="51:9" pos:end="51:113"><if pos:start="51:9" pos:end="51:113">if<condition pos:start="51:11" pos:end="51:81">(<expr pos:start="51:12" pos:end="51:80"><name pos:start="51:12" pos:end="51:30"><name pos:start="51:12" pos:end="51:24">most_frequent</name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:30">first</name></name> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="string" pos:start="51:35" pos:end="51:36">""</literal> <operator pos:start="51:38" pos:end="51:39">||</operator> <name pos:start="51:41" pos:end="51:80"><name pos:start="51:41" pos:end="51:53">most_frequent</name><operator pos:start="51:54" pos:end="51:54">.</operator><name pos:start="51:55" pos:end="51:60">second</name></name> <operator pos:start="51:62" pos:end="51:62">&lt;</operator> <name pos:start="51:64" pos:end="51:80"><name pos:start="51:64" pos:end="51:72">candidate</name><operator pos:start="51:73" pos:end="51:74">-&gt;</operator><name pos:start="51:75" pos:end="51:80">second</name></name></expr>)</condition> <block pos:start="51:83" pos:end="51:113">{<block_content pos:start="51:85" pos:end="51:111"> <expr_stmt pos:start="51:85" pos:end="51:111"><expr pos:start="51:85" pos:end="51:110"><name pos:start="51:85" pos:end="51:97">most_frequent</name> <operator pos:start="51:99" pos:end="51:99">=</operator> <operator pos:start="51:101" pos:end="51:101">*</operator><name pos:start="51:102" pos:end="51:110">candidate</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

    <decl_stmt pos:start="54:5" pos:end="54:57"><decl pos:start="54:5" pos:end="54:56"><type pos:start="54:5" pos:end="54:15"><name pos:start="54:5" pos:end="54:15">QStringList</name></type> <name pos:start="54:17" pos:end="54:22">fields</name> <init pos:start="54:24" pos:end="54:56">= <expr pos:start="54:26" pos:end="54:56"><call pos:start="54:26" pos:end="54:56"><name pos:start="54:26" pos:end="54:50"><name pos:start="54:26" pos:end="54:38">most_frequent</name><operator pos:start="54:39" pos:end="54:39">.</operator><name pos:start="54:40" pos:end="54:44">first</name><operator pos:start="54:45" pos:end="54:45">.</operator><name pos:start="54:46" pos:end="54:50">split</name></name><argument_list pos:start="54:51" pos:end="54:56">(<argument pos:start="54:52" pos:end="54:55"><expr pos:start="54:52" pos:end="54:55"><literal type="string" pos:start="54:52" pos:end="54:55">"\t"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:10">target</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <ternary pos:start="55:14" pos:end="55:45"><condition pos:start="55:14" pos:end="55:30"><expr pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:22"><name pos:start="55:14" pos:end="55:19">fields</name><index pos:start="55:20" pos:end="55:22">[<expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>]</index></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="string" pos:start="55:27" pos:end="55:28">""</literal></expr> ?</condition><then pos:start="55:32" pos:end="55:33"> <expr pos:start="55:32" pos:end="55:33"><literal type="string" pos:start="55:32" pos:end="55:33">""</literal></expr> </then><else pos:start="55:35" pos:end="55:45">: <expr pos:start="55:37" pos:end="55:45"><name pos:start="55:37" pos:end="55:45"><name pos:start="55:37" pos:end="55:42">fields</name><index pos:start="55:43" pos:end="55:45">[<expr pos:start="55:44" pos:end="55:44"><literal type="number" pos:start="55:44" pos:end="55:44">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:64"><expr pos:start="56:5" pos:end="56:63"><name pos:start="56:5" pos:end="56:20">source_file_line</name> <operator pos:start="56:22" pos:end="56:22">=</operator> <ternary pos:start="56:24" pos:end="56:63"><condition pos:start="56:24" pos:end="56:40"><expr pos:start="56:24" pos:end="56:38"><name pos:start="56:24" pos:end="56:32"><name pos:start="56:24" pos:end="56:29">fields</name><index pos:start="56:30" pos:end="56:32">[<expr pos:start="56:31" pos:end="56:31"><literal type="number" pos:start="56:31" pos:end="56:31">1</literal></expr>]</index></name> <operator pos:start="56:34" pos:end="56:35">==</operator> <literal type="string" pos:start="56:37" pos:end="56:38">""</literal></expr> ?</condition><then pos:start="56:42" pos:end="56:43"> <expr pos:start="56:42" pos:end="56:43"><operator pos:start="56:42" pos:end="56:42">-</operator><literal type="number" pos:start="56:43" pos:end="56:43">1</literal></expr> </then><else pos:start="56:45" pos:end="56:63">: <expr pos:start="56:47" pos:end="56:63"><name pos:start="56:47" pos:end="56:55"><name pos:start="56:47" pos:end="56:52">fields</name><index pos:start="56:53" pos:end="56:55">[<expr pos:start="56:54" pos:end="56:54"><literal type="number" pos:start="56:54" pos:end="56:54">1</literal></expr>]</index></name><operator pos:start="56:56" pos:end="56:56">.</operator><call pos:start="56:57" pos:end="56:63"><name pos:start="56:57" pos:end="56:61">toInt</name><argument_list pos:start="56:62" pos:end="56:63">()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="57:5" pos:end="57:63"><expr pos:start="57:5" pos:end="57:62"><name pos:start="57:5" pos:end="57:19">source_file_col</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <ternary pos:start="57:23" pos:end="57:62"><condition pos:start="57:23" pos:end="57:39"><expr pos:start="57:23" pos:end="57:37"><name pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:28">fields</name><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">2</literal></expr>]</index></name> <operator pos:start="57:33" pos:end="57:34">==</operator> <literal type="string" pos:start="57:36" pos:end="57:37">""</literal></expr> ?</condition><then pos:start="57:41" pos:end="57:42"> <expr pos:start="57:41" pos:end="57:42"><operator pos:start="57:41" pos:end="57:41">-</operator><literal type="number" pos:start="57:42" pos:end="57:42">1</literal></expr> </then><else pos:start="57:44" pos:end="57:62">: <expr pos:start="57:46" pos:end="57:62"><name pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:51">fields</name><index pos:start="57:52" pos:end="57:54">[<expr pos:start="57:53" pos:end="57:53"><literal type="number" pos:start="57:53" pos:end="57:53">2</literal></expr>]</index></name><operator pos:start="57:55" pos:end="57:55">.</operator><call pos:start="57:56" pos:end="57:62"><name pos:start="57:56" pos:end="57:60">toInt</name><argument_list pos:start="57:61" pos:end="57:62">()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="58:45"><expr pos:start="58:5" pos:end="58:44"><name pos:start="58:5" pos:end="58:9">token</name> <operator pos:start="58:11" pos:end="58:11">=</operator> <ternary pos:start="58:13" pos:end="58:44"><condition pos:start="58:13" pos:end="58:29"><expr pos:start="58:13" pos:end="58:27"><name pos:start="58:13" pos:end="58:21"><name pos:start="58:13" pos:end="58:18">fields</name><index pos:start="58:19" pos:end="58:21">[<expr pos:start="58:20" pos:end="58:20"><literal type="number" pos:start="58:20" pos:end="58:20">3</literal></expr>]</index></name> <operator pos:start="58:23" pos:end="58:24">==</operator> <literal type="string" pos:start="58:26" pos:end="58:27">""</literal></expr> ?</condition><then pos:start="58:31" pos:end="58:32"> <expr pos:start="58:31" pos:end="58:32"><literal type="string" pos:start="58:31" pos:end="58:32">""</literal></expr> </then><else pos:start="58:34" pos:end="58:44">: <expr pos:start="58:36" pos:end="58:44"><name pos:start="58:36" pos:end="58:44"><name pos:start="58:36" pos:end="58:41">fields</name><index pos:start="58:42" pos:end="58:44">[<expr pos:start="58:43" pos:end="58:43"><literal type="number" pos:start="58:43" pos:end="58:43">3</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="59:58"><expr pos:start="59:5" pos:end="59:57"><name pos:start="59:5" pos:end="59:22">syntactic_category</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <ternary pos:start="59:26" pos:end="59:57"><condition pos:start="59:26" pos:end="59:42"><expr pos:start="59:26" pos:end="59:40"><name pos:start="59:26" pos:end="59:34"><name pos:start="59:26" pos:end="59:31">fields</name><index pos:start="59:32" pos:end="59:34">[<expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">4</literal></expr>]</index></name> <operator pos:start="59:36" pos:end="59:37">==</operator> <literal type="string" pos:start="59:39" pos:end="59:40">""</literal></expr> ?</condition><then pos:start="59:44" pos:end="59:45"> <expr pos:start="59:44" pos:end="59:45"><literal type="string" pos:start="59:44" pos:end="59:45">""</literal></expr> </then><else pos:start="59:47" pos:end="59:57">: <expr pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:54">fields</name><index pos:start="59:55" pos:end="59:57">[<expr pos:start="59:56" pos:end="59:56"><literal type="number" pos:start="59:56" pos:end="59:56">4</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:45"><expr pos:start="60:5" pos:end="60:44"><name pos:start="60:5" pos:end="60:9">xpath</name> <operator pos:start="60:11" pos:end="60:11">=</operator> <ternary pos:start="60:13" pos:end="60:44"><condition pos:start="60:13" pos:end="60:29"><expr pos:start="60:13" pos:end="60:27"><name pos:start="60:13" pos:end="60:21"><name pos:start="60:13" pos:end="60:18">fields</name><index pos:start="60:19" pos:end="60:21">[<expr pos:start="60:20" pos:end="60:20"><literal type="number" pos:start="60:20" pos:end="60:20">5</literal></expr>]</index></name> <operator pos:start="60:23" pos:end="60:24">==</operator> <literal type="string" pos:start="60:26" pos:end="60:27">""</literal></expr> ?</condition><then pos:start="60:31" pos:end="60:32"> <expr pos:start="60:31" pos:end="60:32"><literal type="string" pos:start="60:31" pos:end="60:32">""</literal></expr> </then><else pos:start="60:34" pos:end="60:44">: <expr pos:start="60:36" pos:end="60:44"><name pos:start="60:36" pos:end="60:44"><name pos:start="60:36" pos:end="60:41">fields</name><index pos:start="60:42" pos:end="60:44">[<expr pos:start="60:43" pos:end="60:43"><literal type="number" pos:start="60:43" pos:end="60:43">5</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:67"><expr pos:start="62:5" pos:end="62:66"><name pos:start="62:5" pos:end="62:23">left_pupil_diameter</name> <operator pos:start="62:25" pos:end="62:25">=</operator> <name pos:start="62:27" pos:end="62:45">left_pupil_diameter</name> <operator pos:start="62:47" pos:end="62:47">/</operator> <call pos:start="62:49" pos:end="62:66"><name pos:start="62:49" pos:end="62:54">double</name><argument_list pos:start="62:55" pos:end="62:66">(<argument pos:start="62:56" pos:end="62:65"><expr pos:start="62:56" pos:end="62:65"><name pos:start="62:56" pos:end="62:65">gaze_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:24">right_pupil_diameter</name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:47">right_pupil_diameter</name> <operator pos:start="63:49" pos:end="63:49">/</operator> <call pos:start="63:51" pos:end="63:68"><name pos:start="63:51" pos:end="63:56">double</name><argument_list pos:start="63:57" pos:end="63:68">(<argument pos:start="63:58" pos:end="63:67"><expr pos:start="63:58" pos:end="63:67"><name pos:start="63:58" pos:end="63:67">gaze_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:37"><expr pos:start="64:5" pos:end="64:36"><name pos:start="64:5" pos:end="64:12">duration</name> <operator pos:start="64:14" pos:end="64:14">=</operator> <name pos:start="64:16" pos:end="64:23">end_time</name> <operator pos:start="64:25" pos:end="64:25">-</operator> <name pos:start="64:27" pos:end="64:36">start_time</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function pos:start="68:1" pos:end="70:1"><type pos:start="68:1" pos:end="68:4"><name pos:start="68:1" pos:end="68:4">void</name></type> <name pos:start="68:6" pos:end="68:20"><name pos:start="68:6" pos:end="68:13">Fixation</name><operator pos:start="68:14" pos:end="68:15">::</operator><name pos:start="68:16" pos:end="68:20">print</name></name><parameter_list pos:start="68:21" pos:end="68:22">()</parameter_list> <block pos:start="68:24" pos:end="70:1">{<block_content pos:start="69:5" pos:end="69:369">
    <expr_stmt pos:start="69:5" pos:end="69:369"><expr pos:start="69:5" pos:end="69:368"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:7">std</name><operator pos:start="69:8" pos:end="69:9">::</operator><name pos:start="69:10" pos:end="69:13">cout</name></name> <operator pos:start="69:15" pos:end="69:16">&lt;&lt;</operator> <name pos:start="69:18" pos:end="69:36">fixation_event_time</name> <operator pos:start="69:38" pos:end="69:39">&lt;&lt;</operator> <literal type="string" pos:start="69:41" pos:end="69:43">","</literal> <operator pos:start="69:45" pos:end="69:46">&lt;&lt;</operator> <name pos:start="69:48" pos:end="69:48">x</name> <operator pos:start="69:50" pos:end="69:51">&lt;&lt;</operator> <literal type="string" pos:start="69:53" pos:end="69:55">","</literal> <operator pos:start="69:57" pos:end="69:58">&lt;&lt;</operator> <name pos:start="69:60" pos:end="69:60">y</name> <operator pos:start="69:62" pos:end="69:63">&lt;&lt;</operator> <literal type="string" pos:start="69:65" pos:end="69:67">","</literal> <operator pos:start="69:69" pos:end="69:70">&lt;&lt;</operator> <call pos:start="69:72" pos:end="69:86"><name pos:start="69:72" pos:end="69:84"><name pos:start="69:72" pos:end="69:77">target</name><operator pos:start="69:78" pos:end="69:78">.</operator><name pos:start="69:79" pos:end="69:84">toUtf8</name></name><argument_list pos:start="69:85" pos:end="69:86">()</argument_list></call><operator pos:start="69:87" pos:end="69:87">.</operator><call pos:start="69:88" pos:end="69:98"><name pos:start="69:88" pos:end="69:96">constData</name><argument_list pos:start="69:97" pos:end="69:98">()</argument_list></call> <operator pos:start="69:100" pos:end="69:101">&lt;&lt;</operator> <literal type="string" pos:start="69:103" pos:end="69:105">","</literal> <operator pos:start="69:107" pos:end="69:108">&lt;&lt;</operator> <name pos:start="69:110" pos:end="69:125">source_file_line</name> <operator pos:start="69:127" pos:end="69:128">&lt;&lt;</operator> <literal type="string" pos:start="69:130" pos:end="69:132">","</literal> <operator pos:start="69:134" pos:end="69:135">&lt;&lt;</operator> <name pos:start="69:137" pos:end="69:151">source_file_col</name> <operator pos:start="69:153" pos:end="69:154">&lt;&lt;</operator> <literal type="string" pos:start="69:156" pos:end="69:158">","</literal> <operator pos:start="69:160" pos:end="69:161">&lt;&lt;</operator> <call pos:start="69:163" pos:end="69:176"><name pos:start="69:163" pos:end="69:174"><name pos:start="69:163" pos:end="69:167">token</name><operator pos:start="69:168" pos:end="69:168">.</operator><name pos:start="69:169" pos:end="69:174">toUtf8</name></name><argument_list pos:start="69:175" pos:end="69:176">()</argument_list></call><operator pos:start="69:177" pos:end="69:177">.</operator><call pos:start="69:178" pos:end="69:188"><name pos:start="69:178" pos:end="69:186">constData</name><argument_list pos:start="69:187" pos:end="69:188">()</argument_list></call> <operator pos:start="69:190" pos:end="69:191">&lt;&lt;</operator> <literal type="string" pos:start="69:193" pos:end="69:195">","</literal> <operator pos:start="69:197" pos:end="69:198">&lt;&lt;</operator> <call pos:start="69:200" pos:end="69:226"><name pos:start="69:200" pos:end="69:224"><name pos:start="69:200" pos:end="69:217">syntactic_category</name><operator pos:start="69:218" pos:end="69:218">.</operator><name pos:start="69:219" pos:end="69:224">toUtf8</name></name><argument_list pos:start="69:225" pos:end="69:226">()</argument_list></call><operator pos:start="69:227" pos:end="69:227">.</operator><call pos:start="69:228" pos:end="69:238"><name pos:start="69:228" pos:end="69:236">constData</name><argument_list pos:start="69:237" pos:end="69:238">()</argument_list></call> <operator pos:start="69:240" pos:end="69:241">&lt;&lt;</operator> <literal type="string" pos:start="69:243" pos:end="69:245">","</literal> <operator pos:start="69:247" pos:end="69:248">&lt;&lt;</operator> <call pos:start="69:250" pos:end="69:263"><name pos:start="69:250" pos:end="69:261"><name pos:start="69:250" pos:end="69:254">xpath</name><operator pos:start="69:255" pos:end="69:255">.</operator><name pos:start="69:256" pos:end="69:261">toUtf8</name></name><argument_list pos:start="69:262" pos:end="69:263">()</argument_list></call><operator pos:start="69:264" pos:end="69:264">.</operator><call pos:start="69:265" pos:end="69:275"><name pos:start="69:265" pos:end="69:273">constData</name><argument_list pos:start="69:274" pos:end="69:275">()</argument_list></call> <operator pos:start="69:277" pos:end="69:278">&lt;&lt;</operator> <literal type="string" pos:start="69:280" pos:end="69:282">","</literal> <operator pos:start="69:284" pos:end="69:285">&lt;&lt;</operator> <name pos:start="69:287" pos:end="69:305">left_pupil_diameter</name> <operator pos:start="69:307" pos:end="69:308">&lt;&lt;</operator> <literal type="string" pos:start="69:310" pos:end="69:312">","</literal> <operator pos:start="69:314" pos:end="69:315">&lt;&lt;</operator> <name pos:start="69:317" pos:end="69:336">right_pupil_diameter</name> <operator pos:start="69:338" pos:end="69:339">&lt;&lt;</operator> <literal type="string" pos:start="69:341" pos:end="69:343">","</literal> <operator pos:start="69:345" pos:end="69:346">&lt;&lt;</operator> <name pos:start="69:348" pos:end="69:355">duration</name> <operator pos:start="69:357" pos:end="69:358">&lt;&lt;</operator> <name pos:start="69:360" pos:end="69:368"><name pos:start="69:360" pos:end="69:362">std</name><operator pos:start="69:363" pos:end="69:364">::</operator><name pos:start="69:365" pos:end="69:368">endl</name></name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/fixation.h" pos:tabs="8" hash="1c6cbb0c7aff1f1efe502e3d5b4e146915625d26"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file fixation.h
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:ifndef pos:start="12:1" pos:end="12:18">#<cpp:directive pos:start="12:2" pos:end="12:7">ifndef</cpp:directive> <name pos:start="12:9" pos:end="12:18">FIXATION_H</name></cpp:ifndef>
<cpp:define pos:start="13:1" pos:end="13:18">#<cpp:directive pos:start="13:2" pos:end="13:7">define</cpp:directive> <cpp:macro pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:18">FIXATION_H</name></cpp:macro></cpp:define>

<cpp:include pos:start="15:1" pos:end="15:18">#<cpp:directive pos:start="15:2" pos:end="15:8">include</cpp:directive> <cpp:file pos:start="15:10" pos:end="15:18">&lt;QString&gt;</cpp:file></cpp:include>
<cpp:include pos:start="16:1" pos:end="16:17">#<cpp:directive pos:start="16:2" pos:end="16:8">include</cpp:directive> <cpp:file pos:start="16:10" pos:end="16:17">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:start="17:1" pos:end="17:14">#<cpp:directive pos:start="17:2" pos:end="17:8">include</cpp:directive> <cpp:file pos:start="17:10" pos:end="17:14">&lt;map&gt;</cpp:file></cpp:include>
<cpp:include pos:start="18:1" pos:end="18:17">#<cpp:directive pos:start="18:2" pos:end="18:8">include</cpp:directive> <cpp:file pos:start="18:10" pos:end="18:17">&lt;math.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="19:1" pos:end="19:17">#<cpp:directive pos:start="19:2" pos:end="19:8">include</cpp:directive> <cpp:file pos:start="19:10" pos:end="19:17">&lt;gaze.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="20:1" pos:end="20:19">#<cpp:directive pos:start="20:2" pos:end="20:8">include</cpp:directive> <cpp:file pos:start="20:10" pos:end="20:19">&lt;iostream&gt;</cpp:file></cpp:include>

<comment type="block" pos:start="22:1" pos:end="33:40">/*//////////////////////////////////////
gaze_vec - vector of gazes that go with this fixation
x, y - ? x and y coordinates of the fixation on the screen ?
left_pupil_diameter, right_pupil_diameter - average value of the user's pupil diameters. In millimeters
source_file_line, source_file_column - line and column position of the token of the fixation
duration - time in milliseconds of how long the fixation lasted
fixation_event_time - unix time of when the fixation occurred
target - file that the fixation occurred in
syntactic_category - category of syntax the token belongs to
token - what the fixation was looking at
xpath - the XML xpath to get the token
//////////////////////////////////////*/</comment>

<decl_stmt pos:start="35:1" pos:end="49:1"><decl pos:start="35:1" pos:end="49:1"><type pos:start="35:1" pos:end="35:5"><name pos:start="35:1" pos:end="35:5">class</name></type> <name pos:start="35:7" pos:end="35:14">Fixation</name> <block pos:start="35:16" pos:end="49:1">{<block_content pos:start="36:1" pos:end="48:73">
<label pos:start="36:1" pos:end="36:7"><name pos:start="36:1" pos:end="36:6">public</name>:</label>
    <expr_stmt pos:start="37:5" pos:end="37:15"><expr pos:start="37:5" pos:end="37:14"><call pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:12">Fixation</name><argument_list pos:start="37:13" pos:end="37:14">()</argument_list></call></expr>;</expr_stmt>

    <function_decl pos:start="39:5" pos:end="39:35"><type pos:start="39:5" pos:end="39:8"><name pos:start="39:5" pos:end="39:8">void</name></type> <name pos:start="39:10" pos:end="39:32">calculateDatabaseFields</name><parameter_list pos:start="39:33" pos:end="39:34">()</parameter_list>;</function_decl>

    <function_decl pos:start="41:5" pos:end="41:17"><type pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:8">void</name></type> <name pos:start="41:10" pos:end="41:14">print</name><parameter_list pos:start="41:15" pos:end="41:16">()</parameter_list>;</function_decl>

    <comment type="line" pos:start="43:5" pos:end="43:73">// This could maybe be moved to a set if we want to ignore duplicates</comment>
    <expr_stmt pos:start="44:5" pos:end="44:31"><expr pos:start="44:5" pos:end="44:30"><name pos:start="44:5" pos:end="44:7">std</name><operator pos:start="44:8" pos:end="44:9">::</operator><name pos:start="44:10" pos:end="44:21"><name pos:start="44:10" pos:end="44:15">vector</name><argument_list type="generic" pos:start="44:16" pos:end="44:21">&lt;<argument pos:start="44:17" pos:end="44:20"><expr pos:start="44:17" pos:end="44:20"><name pos:start="44:17" pos:end="44:20">Gaze</name></expr></argument>&gt;</argument_list></name> <name pos:start="44:23" pos:end="44:30">gaze_vec</name></expr>;</expr_stmt>
    <decl_stmt pos:start="45:5" pos:end="45:67"><decl pos:start="45:5" pos:end="45:12"><type pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:10">double</name></type> <name pos:start="45:12" pos:end="45:12">x</name></decl>, <decl pos:start="45:15" pos:end="45:15"><type ref="prev" pos:start="45:5" pos:end="45:10"/><name pos:start="45:15" pos:end="45:15">y</name></decl>, <decl pos:start="45:18" pos:end="45:40"><type ref="prev" pos:start="45:5" pos:end="45:10"/><name pos:start="45:18" pos:end="45:36">left_pupil_diameter</name> <init pos:start="45:38" pos:end="45:40">= <expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr></init></decl>, <decl pos:start="45:43" pos:end="45:66"><type ref="prev" pos:start="45:5" pos:end="45:10"/><name pos:start="45:43" pos:end="45:62">right_pupil_diameter</name> <init pos:start="45:64" pos:end="45:66">= <expr pos:start="45:66" pos:end="45:66"><literal type="number" pos:start="45:66" pos:end="45:66">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="46:5" pos:end="46:56"><decl pos:start="46:5" pos:end="46:24"><type pos:start="46:5" pos:end="46:7"><name pos:start="46:5" pos:end="46:7">int</name></type> <name pos:start="46:9" pos:end="46:24">source_file_line</name></decl>, <decl pos:start="46:27" pos:end="46:41"><type ref="prev" pos:start="46:5" pos:end="46:7"/><name pos:start="46:27" pos:end="46:41">source_file_col</name></decl>, <decl pos:start="46:44" pos:end="46:55"><type ref="prev" pos:start="46:5" pos:end="46:7"/><name pos:start="46:44" pos:end="46:51">duration</name> <init pos:start="46:53" pos:end="46:55">= <expr pos:start="46:55" pos:end="46:55"><literal type="number" pos:start="46:55" pos:end="46:55">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="47:5" pos:end="47:38"><decl pos:start="47:5" pos:end="47:37"><type pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:8">long</name> <name pos:start="47:10" pos:end="47:13">long</name></type> <name pos:start="47:15" pos:end="47:33">fixation_event_time</name> <init pos:start="47:35" pos:end="47:37">= <expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="48:5" pos:end="48:73"><decl pos:start="48:5" pos:end="48:23"><type pos:start="48:5" pos:end="48:11"><name pos:start="48:5" pos:end="48:11">QString</name></type> <name pos:start="48:13" pos:end="48:18">target</name> <init pos:start="48:20" pos:end="48:23">= <expr pos:start="48:22" pos:end="48:23"><literal type="string" pos:start="48:22" pos:end="48:23">""</literal></expr></init></decl>, <decl pos:start="48:26" pos:end="48:48"><type ref="prev" pos:start="48:5" pos:end="48:11"/><name pos:start="48:26" pos:end="48:43">syntactic_category</name> <init pos:start="48:45" pos:end="48:48">= <expr pos:start="48:47" pos:end="48:48"><literal type="string" pos:start="48:47" pos:end="48:48">""</literal></expr></init></decl>, <decl pos:start="48:51" pos:end="48:60"><type ref="prev" pos:start="48:5" pos:end="48:11"/><name pos:start="48:51" pos:end="48:55">token</name> <init pos:start="48:57" pos:end="48:60">= <expr pos:start="48:59" pos:end="48:60"><literal type="string" pos:start="48:59" pos:end="48:60">""</literal></expr></init></decl>, <decl pos:start="48:63" pos:end="48:72"><type ref="prev" pos:start="48:5" pos:end="48:11"/><name pos:start="48:63" pos:end="48:67">xpath</name> <init pos:start="48:69" pos:end="48:72">= <expr pos:start="48:71" pos:end="48:72"><literal type="string" pos:start="48:71" pos:end="48:72">""</literal></expr></init></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt pos:start="49:2" pos:end="52:0">;</empty_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif> <comment type="line" pos:start="51:8" pos:end="51:20">// FIXATION_H</comment>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C++" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/gaze.cpp" pos:tabs="8" hash="8c590ce6991bc84617fec597da3e700bcf3f3130"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file gaze.cpp
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:include pos:start="12:1" pos:end="12:17">#<cpp:directive pos:start="12:2" pos:end="12:8">include</cpp:directive> <cpp:file pos:start="12:10" pos:end="12:17">"gaze.h"</cpp:file></cpp:include>

<constructor pos:start="14:1" pos:end="14:15"><name pos:start="14:1" pos:end="14:10"><name pos:start="14:1" pos:end="14:4">Gaze</name><operator pos:start="14:5" pos:end="14:6">::</operator><name pos:start="14:7" pos:end="14:10">Gaze</name></name><parameter_list pos:start="14:11" pos:end="14:12">()</parameter_list> <block pos:start="14:14" pos:end="14:15">{<block_content/>}</block></constructor>


<constructor pos:start="17:1" pos:end="37:1"><name pos:start="17:1" pos:end="17:10"><name pos:start="17:1" pos:end="17:4">Gaze</name><operator pos:start="17:5" pos:end="17:6">::</operator><name pos:start="17:7" pos:end="17:10">Gaze</name></name><parameter_list pos:start="17:11" pos:end="17:32">(<parameter pos:start="17:12" pos:end="17:31"><decl pos:start="17:12" pos:end="17:31"><type pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:20">QSqlQuery</name><modifier pos:start="17:21" pos:end="17:21">&amp;</modifier></type> <name pos:start="17:23" pos:end="17:31">gaze_data</name></decl></parameter>)</parameter_list> <block pos:start="17:34" pos:end="37:1">{<block_content pos:start="20:5" pos:end="36:67">

    <comment type="line" pos:start="19:5" pos:end="19:16">// Core Data</comment>
    <expr_stmt pos:start="20:5" pos:end="20:49"><expr pos:start="20:5" pos:end="20:48"><name pos:start="20:5" pos:end="20:14">event_time</name> <operator pos:start="20:16" pos:end="20:16">=</operator> <call pos:start="20:18" pos:end="20:35"><name pos:start="20:18" pos:end="20:32"><name pos:start="20:18" pos:end="20:26">gaze_data</name><operator pos:start="20:27" pos:end="20:27">.</operator><name pos:start="20:28" pos:end="20:32">value</name></name><argument_list pos:start="20:33" pos:end="20:35">(<argument pos:start="20:34" pos:end="20:34"><expr pos:start="20:34" pos:end="20:34"><literal type="number" pos:start="20:34" pos:end="20:34">0</literal></expr></argument>)</argument_list></call><operator pos:start="20:36" pos:end="20:36">.</operator><call pos:start="20:37" pos:end="20:48"><name pos:start="20:37" pos:end="20:46">toLongLong</name><argument_list pos:start="20:47" pos:end="20:48">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:5">x</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:17">gaze_data</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:23">value</name></name><argument_list pos:start="21:24" pos:end="21:26">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr></argument>)</argument_list></call><operator pos:start="21:27" pos:end="21:27">.</operator><call pos:start="21:28" pos:end="21:37"><name pos:start="21:28" pos:end="21:35">toDouble</name><argument_list pos:start="21:36" pos:end="21:37">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:38"><expr pos:start="22:5" pos:end="22:37"><name pos:start="22:5" pos:end="22:5">y</name> <operator pos:start="22:7" pos:end="22:7">=</operator> <call pos:start="22:9" pos:end="22:26"><name pos:start="22:9" pos:end="22:23"><name pos:start="22:9" pos:end="22:17">gaze_data</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:23">value</name></name><argument_list pos:start="22:24" pos:end="22:26">(<argument pos:start="22:25" pos:end="22:25"><expr pos:start="22:25" pos:end="22:25"><literal type="number" pos:start="22:25" pos:end="22:25">2</literal></expr></argument>)</argument_list></call><operator pos:start="22:27" pos:end="22:27">.</operator><call pos:start="22:28" pos:end="22:37"><name pos:start="22:28" pos:end="22:35">toDouble</name><argument_list pos:start="22:36" pos:end="22:37">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:15">system_time</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:36"><name pos:start="23:19" pos:end="23:33"><name pos:start="23:19" pos:end="23:27">gaze_data</name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:33">value</name></name><argument_list pos:start="23:34" pos:end="23:36">(<argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">3</literal></expr></argument>)</argument_list></call><operator pos:start="23:37" pos:end="23:37">.</operator><call pos:start="23:38" pos:end="23:49"><name pos:start="23:38" pos:end="23:47">toLongLong</name><argument_list pos:start="23:48" pos:end="23:49">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:56"><expr pos:start="24:5" pos:end="24:55"><name pos:start="24:5" pos:end="24:23">left_pupil_diameter</name> <operator pos:start="24:25" pos:end="24:25">=</operator> <call pos:start="24:27" pos:end="24:44"><name pos:start="24:27" pos:end="24:41"><name pos:start="24:27" pos:end="24:35">gaze_data</name><operator pos:start="24:36" pos:end="24:36">.</operator><name pos:start="24:37" pos:end="24:41">value</name></name><argument_list pos:start="24:42" pos:end="24:44">(<argument pos:start="24:43" pos:end="24:43"><expr pos:start="24:43" pos:end="24:43"><literal type="number" pos:start="24:43" pos:end="24:43">4</literal></expr></argument>)</argument_list></call><operator pos:start="24:45" pos:end="24:45">.</operator><call pos:start="24:46" pos:end="24:55"><name pos:start="24:46" pos:end="24:53">toDouble</name><argument_list pos:start="24:54" pos:end="24:55">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:24">right_pupil_diameter</name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:45"><name pos:start="25:28" pos:end="25:42"><name pos:start="25:28" pos:end="25:36">gaze_data</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:42">value</name></name><argument_list pos:start="25:43" pos:end="25:45">(<argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">5</literal></expr></argument>)</argument_list></call><operator pos:start="25:46" pos:end="25:46">.</operator><call pos:start="25:47" pos:end="25:56"><name pos:start="25:47" pos:end="25:54">toDouble</name><argument_list pos:start="25:55" pos:end="25:56">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:49"><expr pos:start="26:5" pos:end="26:48"><name pos:start="26:5" pos:end="26:19">left_validation</name> <operator pos:start="26:21" pos:end="26:21">=</operator> <call pos:start="26:23" pos:end="26:40"><name pos:start="26:23" pos:end="26:37"><name pos:start="26:23" pos:end="26:31">gaze_data</name><operator pos:start="26:32" pos:end="26:32">.</operator><name pos:start="26:33" pos:end="26:37">value</name></name><argument_list pos:start="26:38" pos:end="26:40">(<argument pos:start="26:39" pos:end="26:39"><expr pos:start="26:39" pos:end="26:39"><literal type="number" pos:start="26:39" pos:end="26:39">6</literal></expr></argument>)</argument_list></call><operator pos:start="26:41" pos:end="26:41">.</operator><call pos:start="26:42" pos:end="26:48"><name pos:start="26:42" pos:end="26:46">toInt</name><argument_list pos:start="26:47" pos:end="26:48">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:20">right_validation</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:41"><name pos:start="27:24" pos:end="27:38"><name pos:start="27:24" pos:end="27:32">gaze_data</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:38">value</name></name><argument_list pos:start="27:39" pos:end="27:41">(<argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">7</literal></expr></argument>)</argument_list></call><operator pos:start="27:42" pos:end="27:42">.</operator><call pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:47">toInt</name><argument_list pos:start="27:48" pos:end="27:49">()</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="29:5" pos:end="29:18">// Plugin Data</comment>
    <expr_stmt pos:start="30:5" pos:end="30:48"><expr pos:start="30:5" pos:end="30:47"><name pos:start="30:5" pos:end="30:15">gaze_target</name> <operator pos:start="30:17" pos:end="30:17">=</operator> <call pos:start="30:19" pos:end="30:36"><name pos:start="30:19" pos:end="30:33"><name pos:start="30:19" pos:end="30:27">gaze_data</name><operator pos:start="30:28" pos:end="30:28">.</operator><name pos:start="30:29" pos:end="30:33">value</name></name><argument_list pos:start="30:34" pos:end="30:36">(<argument pos:start="30:35" pos:end="30:35"><expr pos:start="30:35" pos:end="30:35"><literal type="number" pos:start="30:35" pos:end="30:35">8</literal></expr></argument>)</argument_list></call><operator pos:start="30:37" pos:end="30:37">.</operator><call pos:start="30:38" pos:end="30:47"><name pos:start="30:38" pos:end="30:45">toString</name><argument_list pos:start="30:46" pos:end="30:47">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:20">gaze_target_type</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:41"><name pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:32">gaze_data</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:38">value</name></name><argument_list pos:start="31:39" pos:end="31:41">(<argument pos:start="31:40" pos:end="31:40"><expr pos:start="31:40" pos:end="31:40"><literal type="number" pos:start="31:40" pos:end="31:40">9</literal></expr></argument>)</argument_list></call><operator pos:start="31:42" pos:end="31:42">.</operator><call pos:start="31:43" pos:end="31:52"><name pos:start="31:43" pos:end="31:50">toString</name><argument_list pos:start="31:51" pos:end="31:52">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:51"><expr pos:start="32:5" pos:end="32:50"><name pos:start="32:5" pos:end="32:20">source_file_line</name> <operator pos:start="32:22" pos:end="32:22">=</operator> <call pos:start="32:24" pos:end="32:42"><name pos:start="32:24" pos:end="32:38"><name pos:start="32:24" pos:end="32:32">gaze_data</name><operator pos:start="32:33" pos:end="32:33">.</operator><name pos:start="32:34" pos:end="32:38">value</name></name><argument_list pos:start="32:39" pos:end="32:42">(<argument pos:start="32:40" pos:end="32:41"><expr pos:start="32:40" pos:end="32:41"><literal type="number" pos:start="32:40" pos:end="32:41">10</literal></expr></argument>)</argument_list></call><operator pos:start="32:43" pos:end="32:43">.</operator><call pos:start="32:44" pos:end="32:50"><name pos:start="32:44" pos:end="32:48">toInt</name><argument_list pos:start="32:49" pos:end="32:50">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:19">source_file_col</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:41"><name pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:31">gaze_data</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:37">value</name></name><argument_list pos:start="33:38" pos:end="33:41">(<argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><literal type="number" pos:start="33:39" pos:end="33:40">11</literal></expr></argument>)</argument_list></call><operator pos:start="33:42" pos:end="33:42">.</operator><call pos:start="33:43" pos:end="33:49"><name pos:start="33:43" pos:end="33:47">toInt</name><argument_list pos:start="33:48" pos:end="33:49">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:50"><expr pos:start="34:5" pos:end="34:49"><name pos:start="34:5" pos:end="34:16">source_token</name> <operator pos:start="34:18" pos:end="34:18">=</operator> <call pos:start="34:20" pos:end="34:38"><name pos:start="34:20" pos:end="34:34"><name pos:start="34:20" pos:end="34:28">gaze_data</name><operator pos:start="34:29" pos:end="34:29">.</operator><name pos:start="34:30" pos:end="34:34">value</name></name><argument_list pos:start="34:35" pos:end="34:38">(<argument pos:start="34:36" pos:end="34:37"><expr pos:start="34:36" pos:end="34:37"><literal type="number" pos:start="34:36" pos:end="34:37">12</literal></expr></argument>)</argument_list></call><operator pos:start="34:39" pos:end="34:39">.</operator><call pos:start="34:40" pos:end="34:49"><name pos:start="34:40" pos:end="34:47">toString</name><argument_list pos:start="34:48" pos:end="34:49">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:22">source_token_xpath</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:44"><name pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:34">gaze_data</name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:40">value</name></name><argument_list pos:start="35:41" pos:end="35:44">(<argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><literal type="number" pos:start="35:42" pos:end="35:43">13</literal></expr></argument>)</argument_list></call><operator pos:start="35:45" pos:end="35:45">.</operator><call pos:start="35:46" pos:end="35:55"><name pos:start="35:46" pos:end="35:53">toString</name><argument_list pos:start="35:54" pos:end="35:55">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:67"><expr pos:start="36:5" pos:end="36:66"><name pos:start="36:5" pos:end="36:33">source_token_syntatic_context</name> <operator pos:start="36:35" pos:end="36:35">=</operator> <call pos:start="36:37" pos:end="36:55"><name pos:start="36:37" pos:end="36:51"><name pos:start="36:37" pos:end="36:45">gaze_data</name><operator pos:start="36:46" pos:end="36:46">.</operator><name pos:start="36:47" pos:end="36:51">value</name></name><argument_list pos:start="36:52" pos:end="36:55">(<argument pos:start="36:53" pos:end="36:54"><expr pos:start="36:53" pos:end="36:54"><literal type="number" pos:start="36:53" pos:end="36:54">14</literal></expr></argument>)</argument_list></call><operator pos:start="36:56" pos:end="36:56">.</operator><call pos:start="36:57" pos:end="36:66"><name pos:start="36:57" pos:end="36:64">toString</name><argument_list pos:start="36:65" pos:end="36:66">()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></constructor><comment type="line" pos:start="37:2" pos:end="37:5">//*/</comment>


<comment type="line" pos:start="40:1" pos:end="40:62">// Determines if the gaze data is valid. Can be altered later.</comment>
<function pos:start="41:1" pos:end="46:1"><type pos:start="41:1" pos:end="41:4"><name pos:start="41:1" pos:end="41:4">bool</name></type> <name pos:start="41:6" pos:end="41:18"><name pos:start="41:6" pos:end="41:9">Gaze</name><operator pos:start="41:10" pos:end="41:11">::</operator><name pos:start="41:12" pos:end="41:18">isValid</name></name><parameter_list pos:start="41:19" pos:end="41:20">()</parameter_list> <block pos:start="41:22" pos:end="46:1">{<block_content pos:start="42:5" pos:end="45:16">
    <if_stmt pos:start="42:5" pos:end="42:43"><if pos:start="42:5" pos:end="42:43">if<condition pos:start="42:7" pos:end="42:25">(<expr pos:start="42:8" pos:end="42:24"><name pos:start="42:8" pos:end="42:8">x</name> <operator pos:start="42:10" pos:end="42:10">&lt;</operator> <literal type="number" pos:start="42:12" pos:end="42:12">0</literal> <operator pos:start="42:14" pos:end="42:15">||</operator> <call pos:start="42:17" pos:end="42:24"><name pos:start="42:17" pos:end="42:21">isnan</name><argument_list pos:start="42:22" pos:end="42:24">(<argument pos:start="42:23" pos:end="42:23"><expr pos:start="42:23" pos:end="42:23"><name pos:start="42:23" pos:end="42:23">x</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="42:27" pos:end="42:43">{<block_content pos:start="42:29" pos:end="42:41"> <return pos:start="42:29" pos:end="42:41">return <expr pos:start="42:36" pos:end="42:40"><literal type="boolean" pos:start="42:36" pos:end="42:40">false</literal></expr>;</return> </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="43:5" pos:end="43:43"><if pos:start="43:5" pos:end="43:43">if<condition pos:start="43:7" pos:end="43:25">(<expr pos:start="43:8" pos:end="43:24"><name pos:start="43:8" pos:end="43:8">y</name> <operator pos:start="43:10" pos:end="43:10">&lt;</operator> <literal type="number" pos:start="43:12" pos:end="43:12">0</literal> <operator pos:start="43:14" pos:end="43:15">||</operator> <call pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:21">isnan</name><argument_list pos:start="43:22" pos:end="43:24">(<argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">y</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:27" pos:end="43:43">{<block_content pos:start="43:29" pos:end="43:41"> <return pos:start="43:29" pos:end="43:41">return <expr pos:start="43:36" pos:end="43:40"><literal type="boolean" pos:start="43:36" pos:end="43:40">false</literal></expr>;</return> </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="44:5" pos:end="44:71"><if pos:start="44:5" pos:end="44:71">if<condition pos:start="44:7" pos:end="44:53">(<expr pos:start="44:8" pos:end="44:52"><name pos:start="44:8" pos:end="44:22">left_validation</name> <operator pos:start="44:24" pos:end="44:25">==</operator> <literal type="number" pos:start="44:27" pos:end="44:27">0</literal> <operator pos:start="44:29" pos:end="44:30">&amp;&amp;</operator> <name pos:start="44:32" pos:end="44:47">right_validation</name> <operator pos:start="44:49" pos:end="44:50">==</operator> <literal type="number" pos:start="44:52" pos:end="44:52">0</literal></expr>)</condition> <block pos:start="44:55" pos:end="44:71">{<block_content pos:start="44:57" pos:end="44:69"> <return pos:start="44:57" pos:end="44:69">return <expr pos:start="44:64" pos:end="44:68"><literal type="boolean" pos:start="44:64" pos:end="44:68">false</literal></expr>;</return> </block_content>}</block></if></if_stmt>
    <return pos:start="45:5" pos:end="45:16">return <expr pos:start="45:12" pos:end="45:15"><literal type="boolean" pos:start="45:12" pos:end="45:15">true</literal></expr>;</return>
</block_content>}</block></function>

<function pos:start="48:1" pos:end="56:1"><type pos:start="48:1" pos:end="48:4"><name pos:start="48:1" pos:end="48:4">void</name></type> <name pos:start="48:6" pos:end="48:16"><name pos:start="48:6" pos:end="48:9">Gaze</name><operator pos:start="48:10" pos:end="48:11">::</operator><name pos:start="48:12" pos:end="48:16">print</name></name><parameter_list pos:start="48:17" pos:end="48:18">()</parameter_list> <block pos:start="48:20" pos:end="56:1">{<block_content pos:start="49:5" pos:end="54:124">
    <expr_stmt pos:start="49:5" pos:end="54:124"><expr pos:start="49:5" pos:end="54:123"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:7">std</name><operator pos:start="49:8" pos:end="49:9">::</operator><name pos:start="49:10" pos:end="49:13">cout</name></name> <operator pos:start="49:15" pos:end="49:16">&lt;&lt;</operator> <name pos:start="49:18" pos:end="49:27">event_time</name>
              <operator pos:start="50:15" pos:end="50:16">&lt;&lt;</operator> <name pos:start="50:18" pos:end="50:18">x</name> <operator pos:start="50:20" pos:end="50:21">&lt;&lt;</operator> <name pos:start="50:23" pos:end="50:23">y</name> <operator pos:start="50:25" pos:end="50:26">&lt;&lt;</operator> <name pos:start="50:28" pos:end="50:38">system_time</name> <operator pos:start="50:40" pos:end="50:41">&lt;&lt;</operator> <name pos:start="50:43" pos:end="50:61">left_pupil_diameter</name>
              <operator pos:start="51:15" pos:end="51:16">&lt;&lt;</operator> <name pos:start="51:18" pos:end="51:37">right_pupil_diameter</name> <operator pos:start="51:39" pos:end="51:40">&lt;&lt;</operator> <call pos:start="51:42" pos:end="51:61"><name pos:start="51:42" pos:end="51:59"><name pos:start="51:42" pos:end="51:52">gaze_target</name><operator pos:start="51:53" pos:end="51:53">.</operator><name pos:start="51:54" pos:end="51:59">toUtf8</name></name><argument_list pos:start="51:60" pos:end="51:61">()</argument_list></call><operator pos:start="51:62" pos:end="51:62">.</operator><call pos:start="51:63" pos:end="51:73"><name pos:start="51:63" pos:end="51:71">constData</name><argument_list pos:start="51:72" pos:end="51:73">()</argument_list></call>
              <operator pos:start="52:15" pos:end="52:16">&lt;&lt;</operator> <call pos:start="52:18" pos:end="52:42"><name pos:start="52:18" pos:end="52:40"><name pos:start="52:18" pos:end="52:33">gaze_target_type</name><operator pos:start="52:34" pos:end="52:34">.</operator><name pos:start="52:35" pos:end="52:40">toUtf8</name></name><argument_list pos:start="52:41" pos:end="52:42">()</argument_list></call><operator pos:start="52:43" pos:end="52:43">.</operator><call pos:start="52:44" pos:end="52:54"><name pos:start="52:44" pos:end="52:52">constData</name><argument_list pos:start="52:53" pos:end="52:54">()</argument_list></call>
              <operator pos:start="53:15" pos:end="53:16">&lt;&lt;</operator> <name pos:start="53:18" pos:end="53:33">source_file_line</name> <operator pos:start="53:35" pos:end="53:36">&lt;&lt;</operator> <name pos:start="53:38" pos:end="53:52">source_file_col</name> <operator pos:start="53:54" pos:end="53:55">&lt;&lt;</operator> <call pos:start="53:57" pos:end="53:77"><name pos:start="53:57" pos:end="53:75"><name pos:start="53:57" pos:end="53:68">source_token</name><operator pos:start="53:69" pos:end="53:69">.</operator><name pos:start="53:70" pos:end="53:75">toUtf8</name></name><argument_list pos:start="53:76" pos:end="53:77">()</argument_list></call><operator pos:start="53:78" pos:end="53:78">.</operator><call pos:start="53:79" pos:end="53:89"><name pos:start="53:79" pos:end="53:87">constData</name><argument_list pos:start="53:88" pos:end="53:89">()</argument_list></call>
              <operator pos:start="54:15" pos:end="54:16">&lt;&lt;</operator> <call pos:start="54:18" pos:end="54:44"><name pos:start="54:18" pos:end="54:42"><name pos:start="54:18" pos:end="54:35">source_token_xpath</name><operator pos:start="54:36" pos:end="54:36">.</operator><name pos:start="54:37" pos:end="54:42">toUtf8</name></name><argument_list pos:start="54:43" pos:end="54:44">()</argument_list></call><operator pos:start="54:45" pos:end="54:45">.</operator><call pos:start="54:46" pos:end="54:56"><name pos:start="54:46" pos:end="54:54">constData</name><argument_list pos:start="54:55" pos:end="54:56">()</argument_list></call> <operator pos:start="54:58" pos:end="54:59">&lt;&lt;</operator> <call pos:start="54:61" pos:end="54:98"><name pos:start="54:61" pos:end="54:96"><name pos:start="54:61" pos:end="54:89">source_token_syntatic_context</name><operator pos:start="54:90" pos:end="54:90">.</operator><name pos:start="54:91" pos:end="54:96">toUtf8</name></name><argument_list pos:start="54:97" pos:end="54:98">()</argument_list></call><operator pos:start="54:99" pos:end="54:99">.</operator><call pos:start="54:100" pos:end="54:110"><name pos:start="54:100" pos:end="54:108">constData</name><argument_list pos:start="54:109" pos:end="54:110">()</argument_list></call> <operator pos:start="54:112" pos:end="54:113">&lt;&lt;</operator> <name pos:start="54:115" pos:end="54:123"><name pos:start="54:115" pos:end="54:117">std</name><operator pos:start="54:118" pos:end="54:119">::</operator><name pos:start="54:120" pos:end="54:123">endl</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="C:/Users/seresl/Documents/VisualizationTargetFiles/gaze.h" pos:tabs="8" hash="fe43fb648e085de1964c3631629a44561abdfc26"><comment type="block" format="doxygen" pos:start="1:1" pos:end="10:153">/********************************************************************************************************************************************************
* @file gaze.h
*
* @Copyright (C) 2022 i-trace.org
*
* This file is part of iTrace Infrastructure http://www.i-trace.org/.
* iTrace Infrastructure is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* iTrace Infrastructure is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with iTrace Infrastructure. If not, see &lt;https://www.gnu.org/licenses/&gt;.
********************************************************************************************************************************************************/</comment>

<cpp:ifndef pos:start="12:1" pos:end="12:14">#<cpp:directive pos:start="12:2" pos:end="12:7">ifndef</cpp:directive> <name pos:start="12:9" pos:end="12:14">GAZE_H</name></cpp:ifndef>
<cpp:define pos:start="13:1" pos:end="13:14">#<cpp:directive pos:start="13:2" pos:end="13:7">define</cpp:directive> <cpp:macro pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">GAZE_H</name></cpp:macro></cpp:define>
<cpp:include pos:start="14:1" pos:end="14:17">#<cpp:directive pos:start="14:2" pos:end="14:8">include</cpp:directive> <cpp:file pos:start="14:10" pos:end="14:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="15:1" pos:end="15:20">#<cpp:directive pos:start="15:2" pos:end="15:8">include</cpp:directive> <cpp:file pos:start="15:10" pos:end="15:20">&lt;QSqlQuery&gt;</cpp:file></cpp:include>
<cpp:include pos:start="16:1" pos:end="16:19">#<cpp:directive pos:start="16:2" pos:end="16:8">include</cpp:directive> <cpp:file pos:start="16:10" pos:end="16:19">&lt;QVariant&gt;</cpp:file></cpp:include>
<cpp:include pos:start="17:1" pos:end="17:19">#<cpp:directive pos:start="17:2" pos:end="17:8">include</cpp:directive> <cpp:file pos:start="17:10" pos:end="17:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="18:1" pos:end="18:17">#<cpp:directive pos:start="18:2" pos:end="18:8">include</cpp:directive> <cpp:file pos:start="18:10" pos:end="18:17">&lt;math.h&gt;</cpp:file></cpp:include>


<decl_stmt pos:start="21:1" pos:end="39:1"><decl pos:start="21:1" pos:end="39:1"><type pos:start="21:1" pos:end="21:5"><name pos:start="21:1" pos:end="21:5">class</name></type> <name pos:start="21:7" pos:end="21:10">Gaze</name> <block pos:start="21:12" pos:end="39:1">{<block_content pos:start="22:1" pos:end="35:95">
<label pos:start="22:1" pos:end="22:7"><name pos:start="22:1" pos:end="22:6">public</name>:</label>
    <expr_stmt pos:start="23:5" pos:end="23:11"><expr pos:start="23:5" pos:end="23:10"><call pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">Gaze</name><argument_list pos:start="23:9" pos:end="23:10">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:21"><expr pos:start="24:5" pos:end="24:20"><call pos:start="24:5" pos:end="24:20"><name pos:start="24:5" pos:end="24:8">Gaze</name><argument_list pos:start="24:9" pos:end="24:20">(<argument pos:start="24:10" pos:end="24:19"><expr pos:start="24:10" pos:end="24:19"><name pos:start="24:10" pos:end="24:18">QSqlQuery</name><operator pos:start="24:19" pos:end="24:19">&amp;</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <function_decl pos:start="26:5" pos:end="26:19"><type pos:start="26:5" pos:end="26:8"><name pos:start="26:5" pos:end="26:8">bool</name></type> <name pos:start="26:10" pos:end="26:16">isValid</name><parameter_list pos:start="26:17" pos:end="26:18">()</parameter_list>;</function_decl>

    <function_decl pos:start="28:5" pos:end="28:17"><type pos:start="28:5" pos:end="28:8"><name pos:start="28:5" pos:end="28:8">void</name></type> <name pos:start="28:10" pos:end="28:14">print</name><parameter_list pos:start="28:15" pos:end="28:16">()</parameter_list>;</function_decl>

    <decl_stmt pos:start="30:5" pos:end="31:52"><decl pos:start="30:5" pos:end="30:23"><type pos:start="30:5" pos:end="30:7"><name pos:start="30:5" pos:end="30:7">int</name></type> <name pos:start="30:9" pos:end="30:23">left_validation</name></decl>, <decl pos:start="30:26" pos:end="30:41"><type ref="prev" pos:start="30:5" pos:end="30:7"/><name pos:start="30:26" pos:end="30:41">right_validation</name></decl>,
        <decl pos:start="31:9" pos:end="31:29"><type ref="prev" pos:start="30:5" pos:end="30:7"/><name pos:start="31:9" pos:end="31:24">source_file_line</name> <init pos:start="31:26" pos:end="31:29">= <expr pos:start="31:28" pos:end="31:29"><operator pos:start="31:28" pos:end="31:28">-</operator><literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr></init></decl>, <decl pos:start="31:32" pos:end="31:51"><type ref="prev" pos:start="30:5" pos:end="30:7"/><name pos:start="31:32" pos:end="31:46">source_file_col</name> <init pos:start="31:48" pos:end="31:51">= <expr pos:start="31:50" pos:end="31:51"><operator pos:start="31:50" pos:end="31:50">-</operator><literal type="number" pos:start="31:51" pos:end="31:51">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="32:5" pos:end="32:38"><decl pos:start="32:5" pos:end="32:24"><type pos:start="32:5" pos:end="32:13"><name pos:start="32:5" pos:end="32:8">long</name> <name pos:start="32:10" pos:end="32:13">long</name></type> <name pos:start="32:15" pos:end="32:24">event_time</name></decl>, <decl pos:start="32:27" pos:end="32:37"><type ref="prev" pos:start="32:5" pos:end="32:13"/><name pos:start="32:27" pos:end="32:37">system_time</name></decl>;</decl_stmt>
    <decl_stmt pos:start="33:5" pos:end="33:59"><decl pos:start="33:5" pos:end="33:12"><type pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:10">double</name></type> <name pos:start="33:12" pos:end="33:12">x</name></decl>, <decl pos:start="33:15" pos:end="33:15"><type ref="prev" pos:start="33:5" pos:end="33:10"/><name pos:start="33:15" pos:end="33:15">y</name></decl>, <decl pos:start="33:18" pos:end="33:36"><type ref="prev" pos:start="33:5" pos:end="33:10"/><name pos:start="33:18" pos:end="33:36">left_pupil_diameter</name></decl>, <decl pos:start="33:39" pos:end="33:58"><type ref="prev" pos:start="33:5" pos:end="33:10"/><name pos:start="33:39" pos:end="33:58">right_pupil_diameter</name></decl>;</decl_stmt>
    <decl_stmt pos:start="34:5" pos:end="35:95"><decl pos:start="34:5" pos:end="34:28"><type pos:start="34:5" pos:end="34:11"><name pos:start="34:5" pos:end="34:11">QString</name></type> <name pos:start="34:13" pos:end="34:23">gaze_target</name> <init pos:start="34:25" pos:end="34:28">= <expr pos:start="34:27" pos:end="34:28"><literal type="string" pos:start="34:27" pos:end="34:28">""</literal></expr></init></decl>, <decl pos:start="34:31" pos:end="34:51"><type ref="prev" pos:start="34:5" pos:end="34:11"/><name pos:start="34:31" pos:end="34:46">gaze_target_type</name> <init pos:start="34:48" pos:end="34:51">= <expr pos:start="34:50" pos:end="34:51"><literal type="string" pos:start="34:50" pos:end="34:51">""</literal></expr></init></decl>,
                <decl pos:start="35:17" pos:end="35:33"><type ref="prev" pos:start="34:5" pos:end="34:11"/><name pos:start="35:17" pos:end="35:28">source_token</name> <init pos:start="35:30" pos:end="35:33">= <expr pos:start="35:32" pos:end="35:33"><literal type="string" pos:start="35:32" pos:end="35:33">""</literal></expr></init></decl>, <decl pos:start="35:36" pos:end="35:58"><type ref="prev" pos:start="34:5" pos:end="34:11"/><name pos:start="35:36" pos:end="35:53">source_token_xpath</name> <init pos:start="35:55" pos:end="35:58">= <expr pos:start="35:57" pos:end="35:58"><literal type="string" pos:start="35:57" pos:end="35:58">""</literal></expr></init></decl>, <decl pos:start="35:61" pos:end="35:94"><type ref="prev" pos:start="34:5" pos:end="34:11"/><name pos:start="35:61" pos:end="35:89">source_token_syntatic_context</name> <init pos:start="35:91" pos:end="35:94">= <expr pos:start="35:93" pos:end="35:94"><literal type="string" pos:start="35:93" pos:end="35:94">""</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="37:5" pos:end="37:65">//friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp;,const Gaze&amp;);</comment>

</block_content>}</block></decl></decl_stmt><empty_stmt pos:start="39:2" pos:end="42:0">;</empty_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif> <comment type="line" pos:start="41:8" pos:end="41:16">// GAZE_H</comment>
</unit>

</unit>
